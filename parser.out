Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT
    AND
    OR
    TOGGLE
    IF
    ENDIF
    WHILE
    ENDWHILE
    ELSE
    DISPLAY
    TRUE
    FALSE
    GREATER
    LESSER
    EQUALITY
    NEWLINE

Grammar

Rule 0     S' -> simple
Rule 1     simple -> PROGRAM program ENDPROGRAM
Rule 2     empty -> <empty>
Rule 3     program -> variables blocks main
Rule 4     variables -> VARIABLES declaration ENDVARIABLES
Rule 5     variables -> empty
Rule 6     declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
Rule 7     declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
Rule 8     declaration -> variableType IDENTIFIER declarationExtra SEMICOLON declaration
Rule 9     declaration -> empty
Rule 10    declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression declarationExtra
Rule 11    declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
Rule 12    declarationExtra -> COMMA IDENTIFIER declarationExtra
Rule 13    declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
Rule 14    declarationExtra -> empty
Rule 15    arrayIndexes -> expression arrayIndexesExtra
Rule 16    arrayIndexesExtra -> COMMA expression arrayIndexesExtra
Rule 17    arrayIndexesExtra -> empty
Rule 18    blocks -> BLOCKS block ENDBLOCKS
Rule 19    blocks -> empty
Rule 20    block -> DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE block
Rule 21    block -> empty
Rule 22    blockType -> PROCEDURE
Rule 23    blockType -> variableType
Rule 24    variableType -> NUMBER
Rule 25    variableType -> WORDS
Rule 26    variableType -> LETTER
Rule 27    parameters -> OPARENTHESIS parameter CPARENTHESIS
Rule 28    parameter -> variableType IDENTIFIER parameterExtra
Rule 29    parameter -> empty
Rule 30    parameterExtra -> COMMA variableType IDENTIFIER parameterExtra
Rule 31    parameterExtra -> empty
Rule 32    statement -> assign SEMICOLON statement
Rule 33    statement -> call SEMICOLON statement
Rule 34    statement -> empty
Rule 35    assign -> location ASSIGNATION expression
Rule 36    location -> IDENTIFIER
Rule 37    location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
Rule 38    call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
Rule 39    actuals -> expression commaExpressionList
Rule 40    commaExpressionList -> commaExpression commaExpressionList
Rule 41    commaExpressionList -> empty
Rule 42    commaExpression -> COMMA expression
Rule 43    return -> RETURN returnExpression SEMICOLON
Rule 44    returnExpression -> expression
Rule 45    main -> START variables statement FINISH
Rule 46    expression -> expression PLUS term
Rule 47    expression -> expression MINUS term
Rule 48    expression -> term
Rule 49    term -> term MULTIPLICATION factor
Rule 50    term -> term DIVISION factor
Rule 51    term -> factor
Rule 52    factor -> NONZEROINT
Rule 53    factor -> NUMBERVALUE
Rule 54    factor -> WORDSVALUE
Rule 55    factor -> LETTERVALUE
Rule 56    factor -> OPARENTHESIS expression CPARENTHESIS
Rule 57    factor -> location

Terminals, with rules where they appear

AND                  : 
ASSIGNATION          : 6 7 10 11 35
BLOCKS               : 18
CBRACKETS            : 7 11 13 37
COMMA                : 10 11 12 13 16 30 42
CPARENTHESIS         : 27 38 56
DEFINE               : 20
DISPLAY              : 
DIVISION             : 50
ELSE                 : 
ENDBLOCKS            : 18
ENDDEFINE            : 20
ENDIF                : 
ENDPROGRAM           : 1
ENDVARIABLES         : 4
ENDWHILE             : 
EQUALITY             : 
FALSE                : 
FINISH               : 45
GREATER              : 
IDENTIFIER           : 6 7 8 10 11 12 13 20 28 30 36 37 38
IF                   : 
LESSER               : 
LETTER               : 26
LETTERVALUE          : 55
MINUS                : 47
MULTIPLICATION       : 49
NEWLINE              : 
NONZEROINT           : 52
NOT                  : 
NUMBER               : 24
NUMBERVALUE          : 53
OBRACKETS            : 7 11 13 37
OPARENTHESIS         : 27 38 56
OR                   : 
PLUS                 : 46
PROCEDURE            : 22
PROGRAM              : 1
RETURN               : 43
SEMICOLON            : 6 7 8 32 33 43
START                : 45
TOGGLE               : 
TRUE                 : 
VARIABLES            : 4
WHILE                : 
WORDS                : 25
WORDSVALUE           : 54
error                : 

Nonterminals, with rules where they appear

actuals              : 38
arrayIndexes         : 7 11 13 37
arrayIndexesExtra    : 15 16
assign               : 32
block                : 18 20
blockType            : 20
blocks               : 3
call                 : 33
commaExpression      : 40
commaExpressionList  : 39 40
declaration          : 4 6 7 8
declarationExtra     : 6 7 8 10 11 12 13
empty                : 5 9 14 17 19 21 29 31 34 41
expression           : 6 7 10 11 15 16 35 39 42 44 46 47 56
factor               : 49 50 51
location             : 35 57
main                 : 3
parameter            : 27
parameterExtra       : 28 30
parameters           : 20
program              : 1
return               : 
returnExpression     : 43
simple               : 0
statement            : 20 32 33 45
term                 : 46 47 48 49 50
variableType         : 6 7 8 23 28 30
variables            : 3 20 45

Parsing method: LALR

state 0

    (0) S' -> . simple
    (1) simple -> . PROGRAM program ENDPROGRAM

    PROGRAM         shift and go to state 2

    simple                         shift and go to state 1

state 1

    (0) S' -> simple .



state 2

    (1) simple -> PROGRAM . program ENDPROGRAM
    (3) program -> . variables blocks main
    (4) variables -> . VARIABLES declaration ENDVARIABLES
    (5) variables -> . empty
    (2) empty -> .

    VARIABLES       shift and go to state 5
    BLOCKS          reduce using rule 2 (empty -> .)
    START           reduce using rule 2 (empty -> .)

    program                        shift and go to state 3
    variables                      shift and go to state 4
    empty                          shift and go to state 6

state 3

    (1) simple -> PROGRAM program . ENDPROGRAM

    ENDPROGRAM      shift and go to state 7


state 4

    (3) program -> variables . blocks main
    (18) blocks -> . BLOCKS block ENDBLOCKS
    (19) blocks -> . empty
    (2) empty -> .

    BLOCKS          shift and go to state 9
    START           reduce using rule 2 (empty -> .)

    blocks                         shift and go to state 8
    empty                          shift and go to state 10

state 5

    (4) variables -> VARIABLES . declaration ENDVARIABLES
    (6) declaration -> . variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> . variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> . variableType IDENTIFIER declarationExtra SEMICOLON declaration
    (9) declaration -> . empty
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (2) empty -> .

    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16
    ENDVARIABLES    reduce using rule 2 (empty -> .)

    declaration                    shift and go to state 11
    variableType                   shift and go to state 12
    empty                          shift and go to state 13

state 6

    (5) variables -> empty .

    BLOCKS          reduce using rule 5 (variables -> empty .)
    START           reduce using rule 5 (variables -> empty .)
    IDENTIFIER      reduce using rule 5 (variables -> empty .)
    FINISH          reduce using rule 5 (variables -> empty .)
    ENDDEFINE       reduce using rule 5 (variables -> empty .)


state 7

    (1) simple -> PROGRAM program ENDPROGRAM .

    $end            reduce using rule 1 (simple -> PROGRAM program ENDPROGRAM .)


state 8

    (3) program -> variables blocks . main
    (45) main -> . START variables statement FINISH

    START           shift and go to state 18

    main                           shift and go to state 17

state 9

    (18) blocks -> BLOCKS . block ENDBLOCKS
    (20) block -> . DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE block
    (21) block -> . empty
    (2) empty -> .

    DEFINE          shift and go to state 20
    ENDBLOCKS       reduce using rule 2 (empty -> .)

    block                          shift and go to state 19
    empty                          shift and go to state 21

state 10

    (19) blocks -> empty .

    START           reduce using rule 19 (blocks -> empty .)


state 11

    (4) variables -> VARIABLES declaration . ENDVARIABLES

    ENDVARIABLES    shift and go to state 22


state 12

    (6) declaration -> variableType . IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> variableType . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> variableType . IDENTIFIER declarationExtra SEMICOLON declaration

    IDENTIFIER      shift and go to state 23


state 13

    (9) declaration -> empty .

    ENDVARIABLES    reduce using rule 9 (declaration -> empty .)


state 14

    (24) variableType -> NUMBER .

    IDENTIFIER      reduce using rule 24 (variableType -> NUMBER .)


state 15

    (25) variableType -> WORDS .

    IDENTIFIER      reduce using rule 25 (variableType -> WORDS .)


state 16

    (26) variableType -> LETTER .

    IDENTIFIER      reduce using rule 26 (variableType -> LETTER .)


state 17

    (3) program -> variables blocks main .

    ENDPROGRAM      reduce using rule 3 (program -> variables blocks main .)


state 18

    (45) main -> START . variables statement FINISH
    (4) variables -> . VARIABLES declaration ENDVARIABLES
    (5) variables -> . empty
    (2) empty -> .

    VARIABLES       shift and go to state 5
    IDENTIFIER      reduce using rule 2 (empty -> .)
    FINISH          reduce using rule 2 (empty -> .)

    variables                      shift and go to state 24
    empty                          shift and go to state 6

state 19

    (18) blocks -> BLOCKS block . ENDBLOCKS

    ENDBLOCKS       shift and go to state 25


state 20

    (20) block -> DEFINE . blockType IDENTIFIER parameters variables statement ENDDEFINE block
    (22) blockType -> . PROCEDURE
    (23) blockType -> . variableType
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER

    PROCEDURE       shift and go to state 27
    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16

    blockType                      shift and go to state 26
    variableType                   shift and go to state 28

state 21

    (21) block -> empty .

    ENDBLOCKS       reduce using rule 21 (block -> empty .)


state 22

    (4) variables -> VARIABLES declaration ENDVARIABLES .

    BLOCKS          reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    START           reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    IDENTIFIER      reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    FINISH          reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    ENDDEFINE       reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)


state 23

    (6) declaration -> variableType IDENTIFIER . ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> variableType IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> variableType IDENTIFIER . declarationExtra SEMICOLON declaration
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

    ASSIGNATION     shift and go to state 29
    OBRACKETS       shift and go to state 31
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 30
    empty                          shift and go to state 33

state 24

    (45) main -> START variables . statement FINISH
    (32) statement -> . assign SEMICOLON statement
    (33) statement -> . call SEMICOLON statement
    (34) statement -> . empty
    (35) assign -> . location ASSIGNATION expression
    (38) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (2) empty -> .
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    IDENTIFIER      shift and go to state 39
    FINISH          reduce using rule 2 (empty -> .)

    statement                      shift and go to state 34
    assign                         shift and go to state 35
    call                           shift and go to state 36
    empty                          shift and go to state 37
    location                       shift and go to state 38

state 25

    (18) blocks -> BLOCKS block ENDBLOCKS .

    START           reduce using rule 18 (blocks -> BLOCKS block ENDBLOCKS .)


state 26

    (20) block -> DEFINE blockType . IDENTIFIER parameters variables statement ENDDEFINE block

    IDENTIFIER      shift and go to state 40


state 27

    (22) blockType -> PROCEDURE .

    IDENTIFIER      reduce using rule 22 (blockType -> PROCEDURE .)


state 28

    (23) blockType -> variableType .

    IDENTIFIER      reduce using rule 23 (blockType -> variableType .)


state 29

    (6) declaration -> variableType IDENTIFIER ASSIGNATION . expression declarationExtra SEMICOLON declaration
    (46) expression -> . expression PLUS term
    (47) expression -> . expression MINUS term
    (48) expression -> . term
    (49) term -> . term MULTIPLICATION factor
    (50) term -> . term DIVISION factor
    (51) term -> . factor
    (52) factor -> . NONZEROINT
    (53) factor -> . NUMBERVALUE
    (54) factor -> . WORDSVALUE
    (55) factor -> . LETTERVALUE
    (56) factor -> . OPARENTHESIS expression CPARENTHESIS
    (57) factor -> . location
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    NONZEROINT      shift and go to state 45
    NUMBERVALUE     shift and go to state 46
    WORDSVALUE      shift and go to state 47
    LETTERVALUE     shift and go to state 48
    OPARENTHESIS    shift and go to state 49
    IDENTIFIER      shift and go to state 41

    expression                     shift and go to state 42
    term                           shift and go to state 43
    factor                         shift and go to state 44
    location                       shift and go to state 50

state 30

    (8) declaration -> variableType IDENTIFIER declarationExtra . SEMICOLON declaration

    SEMICOLON       shift and go to state 51


state 31

    (7) declaration -> variableType IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (15) arrayIndexes -> . expression arrayIndexesExtra
    (46) expression -> . expression PLUS term
    (47) expression -> . expression MINUS term
    (48) expression -> . term
    (49) term -> . term MULTIPLICATION factor
    (50) term -> . term DIVISION factor
    (51) term -> . factor
    (52) factor -> . NONZEROINT
    (53) factor -> . NUMBERVALUE
    (54) factor -> . WORDSVALUE
    (55) factor -> . LETTERVALUE
    (56) factor -> . OPARENTHESIS expression CPARENTHESIS
    (57) factor -> . location
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    NONZEROINT      shift and go to state 45
    NUMBERVALUE     shift and go to state 46
    WORDSVALUE      shift and go to state 47
    LETTERVALUE     shift and go to state 48
    OPARENTHESIS    shift and go to state 49
    IDENTIFIER      shift and go to state 41

    arrayIndexes                   shift and go to state 52
    expression                     shift and go to state 53
    term                           shift and go to state 43
    factor                         shift and go to state 44
    location                       shift and go to state 50

state 32

    (10) declarationExtra -> COMMA . IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> COMMA . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> COMMA . IDENTIFIER declarationExtra
    (13) declarationExtra -> COMMA . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra

    IDENTIFIER      shift and go to state 54


state 33

    (14) declarationExtra -> empty .

    SEMICOLON       reduce using rule 14 (declarationExtra -> empty .)


state 34

    (45) main -> START variables statement . FINISH

    FINISH          shift and go to state 55


state 35

    (32) statement -> assign . SEMICOLON statement

    SEMICOLON       shift and go to state 56


state 36

    (33) statement -> call . SEMICOLON statement

    SEMICOLON       shift and go to state 57


state 37

    (34) statement -> empty .

    FINISH          reduce using rule 34 (statement -> empty .)
    ENDDEFINE       reduce using rule 34 (statement -> empty .)


state 38

    (35) assign -> location . ASSIGNATION expression

    ASSIGNATION     shift and go to state 58


state 39

    (38) call -> IDENTIFIER . OPARENTHESIS actuals CPARENTHESIS
    (36) location -> IDENTIFIER .
    (37) location -> IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS

    OPARENTHESIS    shift and go to state 59
    ASSIGNATION     reduce using rule 36 (location -> IDENTIFIER .)
    OBRACKETS       shift and go to state 60


state 40

    (20) block -> DEFINE blockType IDENTIFIER . parameters variables statement ENDDEFINE block
    (27) parameters -> . OPARENTHESIS parameter CPARENTHESIS

    OPARENTHESIS    shift and go to state 62

    parameters                     shift and go to state 61

state 41

    (36) location -> IDENTIFIER .
    (37) location -> IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS

    MULTIPLICATION  reduce using rule 36 (location -> IDENTIFIER .)
    DIVISION        reduce using rule 36 (location -> IDENTIFIER .)
    PLUS            reduce using rule 36 (location -> IDENTIFIER .)
    MINUS           reduce using rule 36 (location -> IDENTIFIER .)
    COMMA           reduce using rule 36 (location -> IDENTIFIER .)
    SEMICOLON       reduce using rule 36 (location -> IDENTIFIER .)
    CBRACKETS       reduce using rule 36 (location -> IDENTIFIER .)
    CPARENTHESIS    reduce using rule 36 (location -> IDENTIFIER .)
    OBRACKETS       shift and go to state 60


state 42

    (6) declaration -> variableType IDENTIFIER ASSIGNATION expression . declarationExtra SEMICOLON declaration
    (46) expression -> expression . PLUS term
    (47) expression -> expression . MINUS term
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 63
    empty                          shift and go to state 33

state 43

    (48) expression -> term .
    (49) term -> term . MULTIPLICATION factor
    (50) term -> term . DIVISION factor

    PLUS            reduce using rule 48 (expression -> term .)
    MINUS           reduce using rule 48 (expression -> term .)
    COMMA           reduce using rule 48 (expression -> term .)
    SEMICOLON       reduce using rule 48 (expression -> term .)
    CBRACKETS       reduce using rule 48 (expression -> term .)
    CPARENTHESIS    reduce using rule 48 (expression -> term .)
    MULTIPLICATION  shift and go to state 66
    DIVISION        shift and go to state 67


state 44

    (51) term -> factor .

    MULTIPLICATION  reduce using rule 51 (term -> factor .)
    DIVISION        reduce using rule 51 (term -> factor .)
    PLUS            reduce using rule 51 (term -> factor .)
    MINUS           reduce using rule 51 (term -> factor .)
    COMMA           reduce using rule 51 (term -> factor .)
    SEMICOLON       reduce using rule 51 (term -> factor .)
    CBRACKETS       reduce using rule 51 (term -> factor .)
    CPARENTHESIS    reduce using rule 51 (term -> factor .)


state 45

    (52) factor -> NONZEROINT .

    MULTIPLICATION  reduce using rule 52 (factor -> NONZEROINT .)
    DIVISION        reduce using rule 52 (factor -> NONZEROINT .)
    PLUS            reduce using rule 52 (factor -> NONZEROINT .)
    MINUS           reduce using rule 52 (factor -> NONZEROINT .)
    COMMA           reduce using rule 52 (factor -> NONZEROINT .)
    SEMICOLON       reduce using rule 52 (factor -> NONZEROINT .)
    CBRACKETS       reduce using rule 52 (factor -> NONZEROINT .)
    CPARENTHESIS    reduce using rule 52 (factor -> NONZEROINT .)


state 46

    (53) factor -> NUMBERVALUE .

    MULTIPLICATION  reduce using rule 53 (factor -> NUMBERVALUE .)
    DIVISION        reduce using rule 53 (factor -> NUMBERVALUE .)
    PLUS            reduce using rule 53 (factor -> NUMBERVALUE .)
    MINUS           reduce using rule 53 (factor -> NUMBERVALUE .)
    COMMA           reduce using rule 53 (factor -> NUMBERVALUE .)
    SEMICOLON       reduce using rule 53 (factor -> NUMBERVALUE .)
    CBRACKETS       reduce using rule 53 (factor -> NUMBERVALUE .)
    CPARENTHESIS    reduce using rule 53 (factor -> NUMBERVALUE .)


state 47

    (54) factor -> WORDSVALUE .

    MULTIPLICATION  reduce using rule 54 (factor -> WORDSVALUE .)
    DIVISION        reduce using rule 54 (factor -> WORDSVALUE .)
    PLUS            reduce using rule 54 (factor -> WORDSVALUE .)
    MINUS           reduce using rule 54 (factor -> WORDSVALUE .)
    COMMA           reduce using rule 54 (factor -> WORDSVALUE .)
    SEMICOLON       reduce using rule 54 (factor -> WORDSVALUE .)
    CBRACKETS       reduce using rule 54 (factor -> WORDSVALUE .)
    CPARENTHESIS    reduce using rule 54 (factor -> WORDSVALUE .)


state 48

    (55) factor -> LETTERVALUE .

    MULTIPLICATION  reduce using rule 55 (factor -> LETTERVALUE .)
    DIVISION        reduce using rule 55 (factor -> LETTERVALUE .)
    PLUS            reduce using rule 55 (factor -> LETTERVALUE .)
    MINUS           reduce using rule 55 (factor -> LETTERVALUE .)
    COMMA           reduce using rule 55 (factor -> LETTERVALUE .)
    SEMICOLON       reduce using rule 55 (factor -> LETTERVALUE .)
    CBRACKETS       reduce using rule 55 (factor -> LETTERVALUE .)
    CPARENTHESIS    reduce using rule 55 (factor -> LETTERVALUE .)


state 49

    (56) factor -> OPARENTHESIS . expression CPARENTHESIS
    (46) expression -> . expression PLUS term
    (47) expression -> . expression MINUS term
    (48) expression -> . term
    (49) term -> . term MULTIPLICATION factor
    (50) term -> . term DIVISION factor
    (51) term -> . factor
    (52) factor -> . NONZEROINT
    (53) factor -> . NUMBERVALUE
    (54) factor -> . WORDSVALUE
    (55) factor -> . LETTERVALUE
    (56) factor -> . OPARENTHESIS expression CPARENTHESIS
    (57) factor -> . location
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    NONZEROINT      shift and go to state 45
    NUMBERVALUE     shift and go to state 46
    WORDSVALUE      shift and go to state 47
    LETTERVALUE     shift and go to state 48
    OPARENTHESIS    shift and go to state 49
    IDENTIFIER      shift and go to state 41

    expression                     shift and go to state 68
    term                           shift and go to state 43
    factor                         shift and go to state 44
    location                       shift and go to state 50

state 50

    (57) factor -> location .

    MULTIPLICATION  reduce using rule 57 (factor -> location .)
    DIVISION        reduce using rule 57 (factor -> location .)
    PLUS            reduce using rule 57 (factor -> location .)
    MINUS           reduce using rule 57 (factor -> location .)
    COMMA           reduce using rule 57 (factor -> location .)
    SEMICOLON       reduce using rule 57 (factor -> location .)
    CBRACKETS       reduce using rule 57 (factor -> location .)
    CPARENTHESIS    reduce using rule 57 (factor -> location .)


state 51

    (8) declaration -> variableType IDENTIFIER declarationExtra SEMICOLON . declaration
    (6) declaration -> . variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> . variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> . variableType IDENTIFIER declarationExtra SEMICOLON declaration
    (9) declaration -> . empty
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (2) empty -> .

    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16
    ENDVARIABLES    reduce using rule 2 (empty -> .)

    variableType                   shift and go to state 12
    declaration                    shift and go to state 69
    empty                          shift and go to state 13

state 52

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration

    CBRACKETS       shift and go to state 70


state 53

    (15) arrayIndexes -> expression . arrayIndexesExtra
    (46) expression -> expression . PLUS term
    (47) expression -> expression . MINUS term
    (16) arrayIndexesExtra -> . COMMA expression arrayIndexesExtra
    (17) arrayIndexesExtra -> . empty
    (2) empty -> .

    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    COMMA           shift and go to state 72
    CBRACKETS       reduce using rule 2 (empty -> .)

    arrayIndexesExtra              shift and go to state 71
    empty                          shift and go to state 73

state 54

    (10) declarationExtra -> COMMA IDENTIFIER . ASSIGNATION expression declarationExtra
    (11) declarationExtra -> COMMA IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> COMMA IDENTIFIER . declarationExtra
    (13) declarationExtra -> COMMA IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

    ASSIGNATION     shift and go to state 74
    OBRACKETS       shift and go to state 76
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 75
    empty                          shift and go to state 33

state 55

    (45) main -> START variables statement FINISH .

    ENDPROGRAM      reduce using rule 45 (main -> START variables statement FINISH .)


state 56

    (32) statement -> assign SEMICOLON . statement
    (32) statement -> . assign SEMICOLON statement
    (33) statement -> . call SEMICOLON statement
    (34) statement -> . empty
    (35) assign -> . location ASSIGNATION expression
    (38) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (2) empty -> .
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    IDENTIFIER      shift and go to state 39
    FINISH          reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)

    assign                         shift and go to state 35
    statement                      shift and go to state 77
    call                           shift and go to state 36
    empty                          shift and go to state 37
    location                       shift and go to state 38

state 57

    (33) statement -> call SEMICOLON . statement
    (32) statement -> . assign SEMICOLON statement
    (33) statement -> . call SEMICOLON statement
    (34) statement -> . empty
    (35) assign -> . location ASSIGNATION expression
    (38) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (2) empty -> .
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    IDENTIFIER      shift and go to state 39
    FINISH          reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)

    call                           shift and go to state 36
    statement                      shift and go to state 78
    assign                         shift and go to state 35
    empty                          shift and go to state 37
    location                       shift and go to state 38

state 58

    (35) assign -> location ASSIGNATION . expression
    (46) expression -> . expression PLUS term
    (47) expression -> . expression MINUS term
    (48) expression -> . term
    (49) term -> . term MULTIPLICATION factor
    (50) term -> . term DIVISION factor
    (51) term -> . factor
    (52) factor -> . NONZEROINT
    (53) factor -> . NUMBERVALUE
    (54) factor -> . WORDSVALUE
    (55) factor -> . LETTERVALUE
    (56) factor -> . OPARENTHESIS expression CPARENTHESIS
    (57) factor -> . location
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    NONZEROINT      shift and go to state 45
    NUMBERVALUE     shift and go to state 46
    WORDSVALUE      shift and go to state 47
    LETTERVALUE     shift and go to state 48
    OPARENTHESIS    shift and go to state 49
    IDENTIFIER      shift and go to state 41

    location                       shift and go to state 50
    expression                     shift and go to state 79
    term                           shift and go to state 43
    factor                         shift and go to state 44

state 59

    (38) call -> IDENTIFIER OPARENTHESIS . actuals CPARENTHESIS
    (39) actuals -> . expression commaExpressionList
    (46) expression -> . expression PLUS term
    (47) expression -> . expression MINUS term
    (48) expression -> . term
    (49) term -> . term MULTIPLICATION factor
    (50) term -> . term DIVISION factor
    (51) term -> . factor
    (52) factor -> . NONZEROINT
    (53) factor -> . NUMBERVALUE
    (54) factor -> . WORDSVALUE
    (55) factor -> . LETTERVALUE
    (56) factor -> . OPARENTHESIS expression CPARENTHESIS
    (57) factor -> . location
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    NONZEROINT      shift and go to state 45
    NUMBERVALUE     shift and go to state 46
    WORDSVALUE      shift and go to state 47
    LETTERVALUE     shift and go to state 48
    OPARENTHESIS    shift and go to state 49
    IDENTIFIER      shift and go to state 41

    actuals                        shift and go to state 80
    expression                     shift and go to state 81
    term                           shift and go to state 43
    factor                         shift and go to state 44
    location                       shift and go to state 50

state 60

    (37) location -> IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS
    (15) arrayIndexes -> . expression arrayIndexesExtra
    (46) expression -> . expression PLUS term
    (47) expression -> . expression MINUS term
    (48) expression -> . term
    (49) term -> . term MULTIPLICATION factor
    (50) term -> . term DIVISION factor
    (51) term -> . factor
    (52) factor -> . NONZEROINT
    (53) factor -> . NUMBERVALUE
    (54) factor -> . WORDSVALUE
    (55) factor -> . LETTERVALUE
    (56) factor -> . OPARENTHESIS expression CPARENTHESIS
    (57) factor -> . location
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    NONZEROINT      shift and go to state 45
    NUMBERVALUE     shift and go to state 46
    WORDSVALUE      shift and go to state 47
    LETTERVALUE     shift and go to state 48
    OPARENTHESIS    shift and go to state 49
    IDENTIFIER      shift and go to state 41

    arrayIndexes                   shift and go to state 82
    expression                     shift and go to state 53
    term                           shift and go to state 43
    factor                         shift and go to state 44
    location                       shift and go to state 50

state 61

    (20) block -> DEFINE blockType IDENTIFIER parameters . variables statement ENDDEFINE block
    (4) variables -> . VARIABLES declaration ENDVARIABLES
    (5) variables -> . empty
    (2) empty -> .

    VARIABLES       shift and go to state 5
    IDENTIFIER      reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)

    variables                      shift and go to state 83
    empty                          shift and go to state 6

state 62

    (27) parameters -> OPARENTHESIS . parameter CPARENTHESIS
    (28) parameter -> . variableType IDENTIFIER parameterExtra
    (29) parameter -> . empty
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (2) empty -> .

    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    parameter                      shift and go to state 84
    variableType                   shift and go to state 85
    empty                          shift and go to state 86

state 63

    (6) declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra . SEMICOLON declaration

    SEMICOLON       shift and go to state 87


state 64

    (46) expression -> expression PLUS . term
    (49) term -> . term MULTIPLICATION factor
    (50) term -> . term DIVISION factor
    (51) term -> . factor
    (52) factor -> . NONZEROINT
    (53) factor -> . NUMBERVALUE
    (54) factor -> . WORDSVALUE
    (55) factor -> . LETTERVALUE
    (56) factor -> . OPARENTHESIS expression CPARENTHESIS
    (57) factor -> . location
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    NONZEROINT      shift and go to state 45
    NUMBERVALUE     shift and go to state 46
    WORDSVALUE      shift and go to state 47
    LETTERVALUE     shift and go to state 48
    OPARENTHESIS    shift and go to state 49
    IDENTIFIER      shift and go to state 41

    term                           shift and go to state 88
    factor                         shift and go to state 44
    location                       shift and go to state 50

state 65

    (47) expression -> expression MINUS . term
    (49) term -> . term MULTIPLICATION factor
    (50) term -> . term DIVISION factor
    (51) term -> . factor
    (52) factor -> . NONZEROINT
    (53) factor -> . NUMBERVALUE
    (54) factor -> . WORDSVALUE
    (55) factor -> . LETTERVALUE
    (56) factor -> . OPARENTHESIS expression CPARENTHESIS
    (57) factor -> . location
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    NONZEROINT      shift and go to state 45
    NUMBERVALUE     shift and go to state 46
    WORDSVALUE      shift and go to state 47
    LETTERVALUE     shift and go to state 48
    OPARENTHESIS    shift and go to state 49
    IDENTIFIER      shift and go to state 41

    term                           shift and go to state 89
    factor                         shift and go to state 44
    location                       shift and go to state 50

state 66

    (49) term -> term MULTIPLICATION . factor
    (52) factor -> . NONZEROINT
    (53) factor -> . NUMBERVALUE
    (54) factor -> . WORDSVALUE
    (55) factor -> . LETTERVALUE
    (56) factor -> . OPARENTHESIS expression CPARENTHESIS
    (57) factor -> . location
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    NONZEROINT      shift and go to state 45
    NUMBERVALUE     shift and go to state 46
    WORDSVALUE      shift and go to state 47
    LETTERVALUE     shift and go to state 48
    OPARENTHESIS    shift and go to state 49
    IDENTIFIER      shift and go to state 41

    factor                         shift and go to state 90
    location                       shift and go to state 50

state 67

    (50) term -> term DIVISION . factor
    (52) factor -> . NONZEROINT
    (53) factor -> . NUMBERVALUE
    (54) factor -> . WORDSVALUE
    (55) factor -> . LETTERVALUE
    (56) factor -> . OPARENTHESIS expression CPARENTHESIS
    (57) factor -> . location
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    NONZEROINT      shift and go to state 45
    NUMBERVALUE     shift and go to state 46
    WORDSVALUE      shift and go to state 47
    LETTERVALUE     shift and go to state 48
    OPARENTHESIS    shift and go to state 49
    IDENTIFIER      shift and go to state 41

    factor                         shift and go to state 91
    location                       shift and go to state 50

state 68

    (56) factor -> OPARENTHESIS expression . CPARENTHESIS
    (46) expression -> expression . PLUS term
    (47) expression -> expression . MINUS term

    CPARENTHESIS    shift and go to state 92
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65


state 69

    (8) declaration -> variableType IDENTIFIER declarationExtra SEMICOLON declaration .

    ENDVARIABLES    reduce using rule 8 (declaration -> variableType IDENTIFIER declarationExtra SEMICOLON declaration .)


state 70

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS . ASSIGNATION expression declarationExtra SEMICOLON declaration

    ASSIGNATION     shift and go to state 93


state 71

    (15) arrayIndexes -> expression arrayIndexesExtra .

    CBRACKETS       reduce using rule 15 (arrayIndexes -> expression arrayIndexesExtra .)


state 72

    (16) arrayIndexesExtra -> COMMA . expression arrayIndexesExtra
    (46) expression -> . expression PLUS term
    (47) expression -> . expression MINUS term
    (48) expression -> . term
    (49) term -> . term MULTIPLICATION factor
    (50) term -> . term DIVISION factor
    (51) term -> . factor
    (52) factor -> . NONZEROINT
    (53) factor -> . NUMBERVALUE
    (54) factor -> . WORDSVALUE
    (55) factor -> . LETTERVALUE
    (56) factor -> . OPARENTHESIS expression CPARENTHESIS
    (57) factor -> . location
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    NONZEROINT      shift and go to state 45
    NUMBERVALUE     shift and go to state 46
    WORDSVALUE      shift and go to state 47
    LETTERVALUE     shift and go to state 48
    OPARENTHESIS    shift and go to state 49
    IDENTIFIER      shift and go to state 41

    expression                     shift and go to state 94
    term                           shift and go to state 43
    factor                         shift and go to state 44
    location                       shift and go to state 50

state 73

    (17) arrayIndexesExtra -> empty .

    CBRACKETS       reduce using rule 17 (arrayIndexesExtra -> empty .)


state 74

    (10) declarationExtra -> COMMA IDENTIFIER ASSIGNATION . expression declarationExtra
    (46) expression -> . expression PLUS term
    (47) expression -> . expression MINUS term
    (48) expression -> . term
    (49) term -> . term MULTIPLICATION factor
    (50) term -> . term DIVISION factor
    (51) term -> . factor
    (52) factor -> . NONZEROINT
    (53) factor -> . NUMBERVALUE
    (54) factor -> . WORDSVALUE
    (55) factor -> . LETTERVALUE
    (56) factor -> . OPARENTHESIS expression CPARENTHESIS
    (57) factor -> . location
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    NONZEROINT      shift and go to state 45
    NUMBERVALUE     shift and go to state 46
    WORDSVALUE      shift and go to state 47
    LETTERVALUE     shift and go to state 48
    OPARENTHESIS    shift and go to state 49
    IDENTIFIER      shift and go to state 41

    expression                     shift and go to state 95
    term                           shift and go to state 43
    factor                         shift and go to state 44
    location                       shift and go to state 50

state 75

    (12) declarationExtra -> COMMA IDENTIFIER declarationExtra .

    SEMICOLON       reduce using rule 12 (declarationExtra -> COMMA IDENTIFIER declarationExtra .)


state 76

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (13) declarationExtra -> COMMA IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS declarationExtra
    (15) arrayIndexes -> . expression arrayIndexesExtra
    (46) expression -> . expression PLUS term
    (47) expression -> . expression MINUS term
    (48) expression -> . term
    (49) term -> . term MULTIPLICATION factor
    (50) term -> . term DIVISION factor
    (51) term -> . factor
    (52) factor -> . NONZEROINT
    (53) factor -> . NUMBERVALUE
    (54) factor -> . WORDSVALUE
    (55) factor -> . LETTERVALUE
    (56) factor -> . OPARENTHESIS expression CPARENTHESIS
    (57) factor -> . location
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    NONZEROINT      shift and go to state 45
    NUMBERVALUE     shift and go to state 46
    WORDSVALUE      shift and go to state 47
    LETTERVALUE     shift and go to state 48
    OPARENTHESIS    shift and go to state 49
    IDENTIFIER      shift and go to state 41

    arrayIndexes                   shift and go to state 96
    expression                     shift and go to state 53
    term                           shift and go to state 43
    factor                         shift and go to state 44
    location                       shift and go to state 50

state 77

    (32) statement -> assign SEMICOLON statement .

    FINISH          reduce using rule 32 (statement -> assign SEMICOLON statement .)
    ENDDEFINE       reduce using rule 32 (statement -> assign SEMICOLON statement .)


state 78

    (33) statement -> call SEMICOLON statement .

    FINISH          reduce using rule 33 (statement -> call SEMICOLON statement .)
    ENDDEFINE       reduce using rule 33 (statement -> call SEMICOLON statement .)


state 79

    (35) assign -> location ASSIGNATION expression .
    (46) expression -> expression . PLUS term
    (47) expression -> expression . MINUS term

    SEMICOLON       reduce using rule 35 (assign -> location ASSIGNATION expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65


state 80

    (38) call -> IDENTIFIER OPARENTHESIS actuals . CPARENTHESIS

    CPARENTHESIS    shift and go to state 97


state 81

    (39) actuals -> expression . commaExpressionList
    (46) expression -> expression . PLUS term
    (47) expression -> expression . MINUS term
    (40) commaExpressionList -> . commaExpression commaExpressionList
    (41) commaExpressionList -> . empty
    (42) commaExpression -> . COMMA expression
    (2) empty -> .

    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    COMMA           shift and go to state 101
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    commaExpressionList            shift and go to state 98
    commaExpression                shift and go to state 99
    empty                          shift and go to state 100

state 82

    (37) location -> IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS

    CBRACKETS       shift and go to state 102


state 83

    (20) block -> DEFINE blockType IDENTIFIER parameters variables . statement ENDDEFINE block
    (32) statement -> . assign SEMICOLON statement
    (33) statement -> . call SEMICOLON statement
    (34) statement -> . empty
    (35) assign -> . location ASSIGNATION expression
    (38) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (2) empty -> .
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    IDENTIFIER      shift and go to state 39
    ENDDEFINE       reduce using rule 2 (empty -> .)

    statement                      shift and go to state 103
    assign                         shift and go to state 35
    call                           shift and go to state 36
    empty                          shift and go to state 37
    location                       shift and go to state 38

state 84

    (27) parameters -> OPARENTHESIS parameter . CPARENTHESIS

    CPARENTHESIS    shift and go to state 104


state 85

    (28) parameter -> variableType . IDENTIFIER parameterExtra

    IDENTIFIER      shift and go to state 105


state 86

    (29) parameter -> empty .

    CPARENTHESIS    reduce using rule 29 (parameter -> empty .)


state 87

    (6) declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON . declaration
    (6) declaration -> . variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> . variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> . variableType IDENTIFIER declarationExtra SEMICOLON declaration
    (9) declaration -> . empty
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (2) empty -> .

    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16
    ENDVARIABLES    reduce using rule 2 (empty -> .)

    variableType                   shift and go to state 12
    declaration                    shift and go to state 106
    empty                          shift and go to state 13

state 88

    (46) expression -> expression PLUS term .
    (49) term -> term . MULTIPLICATION factor
    (50) term -> term . DIVISION factor

    PLUS            reduce using rule 46 (expression -> expression PLUS term .)
    MINUS           reduce using rule 46 (expression -> expression PLUS term .)
    COMMA           reduce using rule 46 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 46 (expression -> expression PLUS term .)
    CBRACKETS       reduce using rule 46 (expression -> expression PLUS term .)
    CPARENTHESIS    reduce using rule 46 (expression -> expression PLUS term .)
    MULTIPLICATION  shift and go to state 66
    DIVISION        shift and go to state 67


state 89

    (47) expression -> expression MINUS term .
    (49) term -> term . MULTIPLICATION factor
    (50) term -> term . DIVISION factor

    PLUS            reduce using rule 47 (expression -> expression MINUS term .)
    MINUS           reduce using rule 47 (expression -> expression MINUS term .)
    COMMA           reduce using rule 47 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 47 (expression -> expression MINUS term .)
    CBRACKETS       reduce using rule 47 (expression -> expression MINUS term .)
    CPARENTHESIS    reduce using rule 47 (expression -> expression MINUS term .)
    MULTIPLICATION  shift and go to state 66
    DIVISION        shift and go to state 67


state 90

    (49) term -> term MULTIPLICATION factor .

    MULTIPLICATION  reduce using rule 49 (term -> term MULTIPLICATION factor .)
    DIVISION        reduce using rule 49 (term -> term MULTIPLICATION factor .)
    PLUS            reduce using rule 49 (term -> term MULTIPLICATION factor .)
    MINUS           reduce using rule 49 (term -> term MULTIPLICATION factor .)
    COMMA           reduce using rule 49 (term -> term MULTIPLICATION factor .)
    SEMICOLON       reduce using rule 49 (term -> term MULTIPLICATION factor .)
    CBRACKETS       reduce using rule 49 (term -> term MULTIPLICATION factor .)
    CPARENTHESIS    reduce using rule 49 (term -> term MULTIPLICATION factor .)


state 91

    (50) term -> term DIVISION factor .

    MULTIPLICATION  reduce using rule 50 (term -> term DIVISION factor .)
    DIVISION        reduce using rule 50 (term -> term DIVISION factor .)
    PLUS            reduce using rule 50 (term -> term DIVISION factor .)
    MINUS           reduce using rule 50 (term -> term DIVISION factor .)
    COMMA           reduce using rule 50 (term -> term DIVISION factor .)
    SEMICOLON       reduce using rule 50 (term -> term DIVISION factor .)
    CBRACKETS       reduce using rule 50 (term -> term DIVISION factor .)
    CPARENTHESIS    reduce using rule 50 (term -> term DIVISION factor .)


state 92

    (56) factor -> OPARENTHESIS expression CPARENTHESIS .

    MULTIPLICATION  reduce using rule 56 (factor -> OPARENTHESIS expression CPARENTHESIS .)
    DIVISION        reduce using rule 56 (factor -> OPARENTHESIS expression CPARENTHESIS .)
    PLUS            reduce using rule 56 (factor -> OPARENTHESIS expression CPARENTHESIS .)
    MINUS           reduce using rule 56 (factor -> OPARENTHESIS expression CPARENTHESIS .)
    COMMA           reduce using rule 56 (factor -> OPARENTHESIS expression CPARENTHESIS .)
    SEMICOLON       reduce using rule 56 (factor -> OPARENTHESIS expression CPARENTHESIS .)
    CBRACKETS       reduce using rule 56 (factor -> OPARENTHESIS expression CPARENTHESIS .)
    CPARENTHESIS    reduce using rule 56 (factor -> OPARENTHESIS expression CPARENTHESIS .)


state 93

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION . expression declarationExtra SEMICOLON declaration
    (46) expression -> . expression PLUS term
    (47) expression -> . expression MINUS term
    (48) expression -> . term
    (49) term -> . term MULTIPLICATION factor
    (50) term -> . term DIVISION factor
    (51) term -> . factor
    (52) factor -> . NONZEROINT
    (53) factor -> . NUMBERVALUE
    (54) factor -> . WORDSVALUE
    (55) factor -> . LETTERVALUE
    (56) factor -> . OPARENTHESIS expression CPARENTHESIS
    (57) factor -> . location
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    NONZEROINT      shift and go to state 45
    NUMBERVALUE     shift and go to state 46
    WORDSVALUE      shift and go to state 47
    LETTERVALUE     shift and go to state 48
    OPARENTHESIS    shift and go to state 49
    IDENTIFIER      shift and go to state 41

    expression                     shift and go to state 107
    term                           shift and go to state 43
    factor                         shift and go to state 44
    location                       shift and go to state 50

state 94

    (16) arrayIndexesExtra -> COMMA expression . arrayIndexesExtra
    (46) expression -> expression . PLUS term
    (47) expression -> expression . MINUS term
    (16) arrayIndexesExtra -> . COMMA expression arrayIndexesExtra
    (17) arrayIndexesExtra -> . empty
    (2) empty -> .

    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    COMMA           shift and go to state 72
    CBRACKETS       reduce using rule 2 (empty -> .)

    arrayIndexesExtra              shift and go to state 108
    empty                          shift and go to state 73

state 95

    (10) declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression . declarationExtra
    (46) expression -> expression . PLUS term
    (47) expression -> expression . MINUS term
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 109
    empty                          shift and go to state 33

state 96

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS ASSIGNATION expression declarationExtra
    (13) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS declarationExtra

    CBRACKETS       shift and go to state 110


state 97

    (38) call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .

    SEMICOLON       reduce using rule 38 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)


state 98

    (39) actuals -> expression commaExpressionList .

    CPARENTHESIS    reduce using rule 39 (actuals -> expression commaExpressionList .)


state 99

    (40) commaExpressionList -> commaExpression . commaExpressionList
    (40) commaExpressionList -> . commaExpression commaExpressionList
    (41) commaExpressionList -> . empty
    (42) commaExpression -> . COMMA expression
    (2) empty -> .

    COMMA           shift and go to state 101
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    commaExpression                shift and go to state 99
    commaExpressionList            shift and go to state 111
    empty                          shift and go to state 100

state 100

    (41) commaExpressionList -> empty .

    CPARENTHESIS    reduce using rule 41 (commaExpressionList -> empty .)


state 101

    (42) commaExpression -> COMMA . expression
    (46) expression -> . expression PLUS term
    (47) expression -> . expression MINUS term
    (48) expression -> . term
    (49) term -> . term MULTIPLICATION factor
    (50) term -> . term DIVISION factor
    (51) term -> . factor
    (52) factor -> . NONZEROINT
    (53) factor -> . NUMBERVALUE
    (54) factor -> . WORDSVALUE
    (55) factor -> . LETTERVALUE
    (56) factor -> . OPARENTHESIS expression CPARENTHESIS
    (57) factor -> . location
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    NONZEROINT      shift and go to state 45
    NUMBERVALUE     shift and go to state 46
    WORDSVALUE      shift and go to state 47
    LETTERVALUE     shift and go to state 48
    OPARENTHESIS    shift and go to state 49
    IDENTIFIER      shift and go to state 41

    expression                     shift and go to state 112
    term                           shift and go to state 43
    factor                         shift and go to state 44
    location                       shift and go to state 50

state 102

    (37) location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .

    ASSIGNATION     reduce using rule 37 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    MULTIPLICATION  reduce using rule 37 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    DIVISION        reduce using rule 37 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    PLUS            reduce using rule 37 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    MINUS           reduce using rule 37 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    COMMA           reduce using rule 37 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    SEMICOLON       reduce using rule 37 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    CBRACKETS       reduce using rule 37 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    CPARENTHESIS    reduce using rule 37 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)


state 103

    (20) block -> DEFINE blockType IDENTIFIER parameters variables statement . ENDDEFINE block

    ENDDEFINE       shift and go to state 113


state 104

    (27) parameters -> OPARENTHESIS parameter CPARENTHESIS .

    VARIABLES       reduce using rule 27 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    IDENTIFIER      reduce using rule 27 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    ENDDEFINE       reduce using rule 27 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)


state 105

    (28) parameter -> variableType IDENTIFIER . parameterExtra
    (30) parameterExtra -> . COMMA variableType IDENTIFIER parameterExtra
    (31) parameterExtra -> . empty
    (2) empty -> .

    COMMA           shift and go to state 115
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    parameterExtra                 shift and go to state 114
    empty                          shift and go to state 116

state 106

    (6) declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration .

    ENDVARIABLES    reduce using rule 6 (declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration .)


state 107

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression . declarationExtra SEMICOLON declaration
    (46) expression -> expression . PLUS term
    (47) expression -> expression . MINUS term
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 117
    empty                          shift and go to state 33

state 108

    (16) arrayIndexesExtra -> COMMA expression arrayIndexesExtra .

    CBRACKETS       reduce using rule 16 (arrayIndexesExtra -> COMMA expression arrayIndexesExtra .)


state 109

    (10) declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression declarationExtra .

    SEMICOLON       reduce using rule 10 (declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression declarationExtra .)


state 110

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS . ASSIGNATION expression declarationExtra
    (13) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS . declarationExtra
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

    ASSIGNATION     shift and go to state 118
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 119
    empty                          shift and go to state 33

state 111

    (40) commaExpressionList -> commaExpression commaExpressionList .

    CPARENTHESIS    reduce using rule 40 (commaExpressionList -> commaExpression commaExpressionList .)


state 112

    (42) commaExpression -> COMMA expression .
    (46) expression -> expression . PLUS term
    (47) expression -> expression . MINUS term

    COMMA           reduce using rule 42 (commaExpression -> COMMA expression .)
    CPARENTHESIS    reduce using rule 42 (commaExpression -> COMMA expression .)
    PLUS            shift and go to state 64
    MINUS           shift and go to state 65


state 113

    (20) block -> DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE . block
    (20) block -> . DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE block
    (21) block -> . empty
    (2) empty -> .

    DEFINE          shift and go to state 20
    ENDBLOCKS       reduce using rule 2 (empty -> .)

    block                          shift and go to state 120
    empty                          shift and go to state 21

state 114

    (28) parameter -> variableType IDENTIFIER parameterExtra .

    CPARENTHESIS    reduce using rule 28 (parameter -> variableType IDENTIFIER parameterExtra .)


state 115

    (30) parameterExtra -> COMMA . variableType IDENTIFIER parameterExtra
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER

    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16

    variableType                   shift and go to state 121

state 116

    (31) parameterExtra -> empty .

    CPARENTHESIS    reduce using rule 31 (parameterExtra -> empty .)


state 117

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra . SEMICOLON declaration

    SEMICOLON       shift and go to state 122


state 118

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION . expression declarationExtra
    (46) expression -> . expression PLUS term
    (47) expression -> . expression MINUS term
    (48) expression -> . term
    (49) term -> . term MULTIPLICATION factor
    (50) term -> . term DIVISION factor
    (51) term -> . factor
    (52) factor -> . NONZEROINT
    (53) factor -> . NUMBERVALUE
    (54) factor -> . WORDSVALUE
    (55) factor -> . LETTERVALUE
    (56) factor -> . OPARENTHESIS expression CPARENTHESIS
    (57) factor -> . location
    (36) location -> . IDENTIFIER
    (37) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

    NONZEROINT      shift and go to state 45
    NUMBERVALUE     shift and go to state 46
    WORDSVALUE      shift and go to state 47
    LETTERVALUE     shift and go to state 48
    OPARENTHESIS    shift and go to state 49
    IDENTIFIER      shift and go to state 41

    expression                     shift and go to state 123
    term                           shift and go to state 43
    factor                         shift and go to state 44
    location                       shift and go to state 50

state 119

    (13) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra .

    SEMICOLON       reduce using rule 13 (declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra .)


state 120

    (20) block -> DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE block .

    ENDBLOCKS       reduce using rule 20 (block -> DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE block .)


state 121

    (30) parameterExtra -> COMMA variableType . IDENTIFIER parameterExtra

    IDENTIFIER      shift and go to state 124


state 122

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON . declaration
    (6) declaration -> . variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> . variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> . variableType IDENTIFIER declarationExtra SEMICOLON declaration
    (9) declaration -> . empty
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (2) empty -> .

    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16
    ENDVARIABLES    reduce using rule 2 (empty -> .)

    variableType                   shift and go to state 12
    declaration                    shift and go to state 125
    empty                          shift and go to state 13

state 123

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression . declarationExtra
    (46) expression -> expression . PLUS term
    (47) expression -> expression . MINUS term
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

    PLUS            shift and go to state 64
    MINUS           shift and go to state 65
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 126
    empty                          shift and go to state 33

state 124

    (30) parameterExtra -> COMMA variableType IDENTIFIER . parameterExtra
    (30) parameterExtra -> . COMMA variableType IDENTIFIER parameterExtra
    (31) parameterExtra -> . empty
    (2) empty -> .

    COMMA           shift and go to state 115
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    parameterExtra                 shift and go to state 127
    empty                          shift and go to state 116

state 125

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration .

    ENDVARIABLES    reduce using rule 7 (declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration .)


state 126

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra .

    SEMICOLON       reduce using rule 11 (declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra .)


state 127

    (30) parameterExtra -> COMMA variableType IDENTIFIER parameterExtra .

    CPARENTHESIS    reduce using rule 30 (parameterExtra -> COMMA variableType IDENTIFIER parameterExtra .)

