Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    MODULUS
    NEWLINE

Grammar

Rule 0     S' -> simple
Rule 1     simple -> PROGRAM program ENDPROGRAM
Rule 2     empty -> <empty>
Rule 3     program -> variables blocks main
Rule 4     variables -> VARIABLES declarationList ENDVARIABLES
Rule 5     variables -> empty
Rule 6     declarationList -> declaration declarationList
Rule 7     declarationList -> empty
Rule 8     declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON
Rule 9     declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra SEMICOLON
Rule 10    declaration -> variableType IDENTIFIER declarationExtra SEMICOLON
Rule 11    declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra SEMICOLON
Rule 12    declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression declarationExtra
Rule 13    arrayDeclarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra
Rule 14    declarationExtra -> COMMA IDENTIFIER declarationExtra
Rule 15    arrayDeclarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra
Rule 16    declarationExtra -> empty
Rule 17    arrayDeclarationExtra -> empty
Rule 18    arrayIndexes -> expression arrayIndexesExtra
Rule 19    arrayIndexesExtra -> COMMA expression arrayIndexesExtra
Rule 20    arrayIndexesExtra -> empty
Rule 21    blocks -> BLOCKS blockList ENDBLOCKS
Rule 22    blocks -> empty
Rule 23    blockList -> block blockList
Rule 24    blockList -> empty
Rule 25    block -> DEFINE blockType IDENTIFIER parameters variables statementPoint ENDDEFINE
Rule 26    block -> empty
Rule 27    blockType -> PROCEDURE
Rule 28    blockType -> variableType
Rule 29    blockType -> arrayType
Rule 30    variableType -> NUMBER
Rule 31    variableType -> WORDS
Rule 32    variableType -> LETTER
Rule 33    variableType -> FLAG
Rule 34    arrayType -> MANYNUMBERS
Rule 35    parameters -> OPARENTHESIS parameter CPARENTHESIS
Rule 36    parameter -> variableType IDENTIFIER parameterExtra
Rule 37    parameter -> arrayType IDENTIFIER parameterExtra
Rule 38    parameter -> empty
Rule 39    parameterExtra -> COMMA variableType IDENTIFIER parameterExtra
Rule 40    parameterExtra -> COMMA arrayType IDENTIFIER parameterExtra
Rule 41    parameterExtra -> empty
Rule 42    statementPoint -> statementList
Rule 43    statementList -> statement statementList
Rule 44    statementList -> empty
Rule 45    statement -> assign SEMICOLON
Rule 46    statement -> display SEMICOLON
Rule 47    statement -> call SEMICOLON
Rule 48    statement -> return empty
Rule 49    statement -> ifStatement empty
Rule 50    statement -> whileStatement empty
Rule 51    display -> DISPLAY OPARENTHESIS singleActual CPARENTHESIS
Rule 52    statement -> empty
Rule 53    assign -> location ASSIGNATION expression
Rule 54    location -> IDENTIFIER
Rule 55    location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
Rule 56    call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
Rule 57    call -> IDENTIFIER OPARENTHESIS CPARENTHESIS
Rule 58    singleActual -> expression
Rule 59    singleActual -> empty
Rule 60    actuals -> expression commaExpressionList
Rule 61    commaExpressionList -> COMMA expression commaExpressionList
Rule 62    commaExpressionList -> empty
Rule 63    return -> RETURN expression SEMICOLON
Rule 64    return -> RETURN SEMICOLON
Rule 65    ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF
Rule 66    elseStatement -> ELSE statementPoint
Rule 67    elseStatement -> empty
Rule 68    whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE
Rule 69    main -> START variables statementPoint FINISH
Rule 70    expression -> location
Rule 71    expression -> call
Rule 72    expression -> unaryExpression
Rule 73    expression -> binaryExpression
Rule 74    expression -> FLAGVALUE
Rule 75    expression -> NUMBERVALUE
Rule 76    expression -> WORDSVALUE
Rule 77    expression -> LETTERVALUE
Rule 78    expression -> OPARENTHESIS expression CPARENTHESIS
Rule 79    binaryExpression -> expression OR expression
Rule 80    binaryExpression -> expression AND expression
Rule 81    binaryExpression -> expression LESSER expression
Rule 82    binaryExpression -> expression GREATER expression
Rule 83    binaryExpression -> expression EQUALITY expression
Rule 84    binaryExpression -> expression PLUS expression
Rule 85    binaryExpression -> expression MINUS expression
Rule 86    binaryExpression -> expression MULTIPLICATION expression
Rule 87    binaryExpression -> expression DIVISION expression
Rule 88    unaryExpression -> NOT expression

Terminals, with rules where they appear

AND                  : 80
ASSIGNATION          : 8 9 12 13 53
BLOCKS               : 21
CBRACKETS            : 9 11 13 15 55
COMMA                : 12 13 14 15 19 39 40 61
CPARENTHESIS         : 35 51 56 57 65 68 78
DEFINE               : 25
DISPLAY              : 51
DIVISION             : 87
ELSE                 : 66
ENDBLOCKS            : 21
ENDDEFINE            : 25
ENDIF                : 65
ENDPROGRAM           : 1
ENDVARIABLES         : 4
ENDWHILE             : 68
EQUALITY             : 83
FINISH               : 69
FLAG                 : 33
FLAGVALUE            : 74
GREATER              : 82
IDENTIFIER           : 8 9 10 11 12 13 14 15 25 36 37 39 40 54 55 56 57
IF                   : 65
LESSER               : 81
LETTER               : 32
LETTERVALUE          : 77
MANYNUMBERS          : 34
MINUS                : 85
MODULUS              : 
MULTIPLICATION       : 86
NEWLINE              : 
NOT                  : 88
NUMBER               : 30
NUMBERVALUE          : 75
OBRACKETS            : 9 11 13 15 55
OPARENTHESIS         : 35 51 56 57 65 68 78
OR                   : 79
PLUS                 : 84
PROCEDURE            : 27
PROGRAM              : 1
RETURN               : 63 64
SEMICOLON            : 8 9 10 11 45 46 47 63 64
START                : 69
VARIABLES            : 4
WHILE                : 68
WORDS                : 31
WORDSVALUE           : 76
error                : 

Nonterminals, with rules where they appear

actuals              : 56
arrayDeclarationExtra : 9 11 13 15
arrayIndexes         : 9 11 13 15 55
arrayIndexesExtra    : 18 19
arrayType            : 9 11 29 37 40
assign               : 45
binaryExpression     : 73
block                : 23
blockList            : 21 23
blockType            : 25
blocks               : 3
call                 : 47 71
commaExpressionList  : 60 61
declaration          : 6
declarationExtra     : 8 10 12 14
declarationList      : 4 6
display              : 46
elseStatement        : 65
empty                : 5 7 16 17 20 22 24 26 38 41 44 48 49 50 52 59 62 67
expression           : 8 9 12 13 18 19 53 58 60 61 63 65 68 78 79 79 80 80 81 81 82 82 83 83 84 84 85 85 86 86 87 87 88
ifStatement          : 49
location             : 53 70
main                 : 3
parameter            : 35
parameterExtra       : 36 37 39 40
parameters           : 25
program              : 1
return               : 48
simple               : 0
singleActual         : 51
statement            : 43
statementList        : 42 43
statementPoint       : 25 65 66 68 69
unaryExpression      : 72
variableType         : 8 10 28 36 39
variables            : 3 25 69
whileStatement       : 50

Parsing method: LALR

state 0

    (0) S' -> . simple
    (1) simple -> . PROGRAM program ENDPROGRAM

    PROGRAM         shift and go to state 2

    simple                         shift and go to state 1

state 1

    (0) S' -> simple .



state 2

    (1) simple -> PROGRAM . program ENDPROGRAM
    (3) program -> . variables blocks main
    (4) variables -> . VARIABLES declarationList ENDVARIABLES
    (5) variables -> . empty
    (2) empty -> .

    VARIABLES       shift and go to state 5
    BLOCKS          reduce using rule 2 (empty -> .)
    START           reduce using rule 2 (empty -> .)

    program                        shift and go to state 3
    variables                      shift and go to state 4
    empty                          shift and go to state 6

state 3

    (1) simple -> PROGRAM program . ENDPROGRAM

    ENDPROGRAM      shift and go to state 7


state 4

    (3) program -> variables . blocks main
    (21) blocks -> . BLOCKS blockList ENDBLOCKS
    (22) blocks -> . empty
    (2) empty -> .

    BLOCKS          shift and go to state 9
    START           reduce using rule 2 (empty -> .)

    blocks                         shift and go to state 8
    empty                          shift and go to state 10

state 5

    (4) variables -> VARIABLES . declarationList ENDVARIABLES
    (6) declarationList -> . declaration declarationList
    (7) declarationList -> . empty
    (8) declaration -> . variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON
    (9) declaration -> . arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra SEMICOLON
    (10) declaration -> . variableType IDENTIFIER declarationExtra SEMICOLON
    (11) declaration -> . arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra SEMICOLON
    (2) empty -> .
    (30) variableType -> . NUMBER
    (31) variableType -> . WORDS
    (32) variableType -> . LETTER
    (33) variableType -> . FLAG
    (34) arrayType -> . MANYNUMBERS

    ENDVARIABLES    reduce using rule 2 (empty -> .)
    NUMBER          shift and go to state 16
    WORDS           shift and go to state 17
    LETTER          shift and go to state 18
    FLAG            shift and go to state 19
    MANYNUMBERS     shift and go to state 20

    declarationList                shift and go to state 11
    declaration                    shift and go to state 12
    empty                          shift and go to state 13
    variableType                   shift and go to state 14
    arrayType                      shift and go to state 15

state 6

    (5) variables -> empty .

    BLOCKS          reduce using rule 5 (variables -> empty .)
    START           reduce using rule 5 (variables -> empty .)
    DISPLAY         reduce using rule 5 (variables -> empty .)
    IDENTIFIER      reduce using rule 5 (variables -> empty .)
    RETURN          reduce using rule 5 (variables -> empty .)
    IF              reduce using rule 5 (variables -> empty .)
    WHILE           reduce using rule 5 (variables -> empty .)
    FINISH          reduce using rule 5 (variables -> empty .)
    ENDDEFINE       reduce using rule 5 (variables -> empty .)


state 7

    (1) simple -> PROGRAM program ENDPROGRAM .

    $end            reduce using rule 1 (simple -> PROGRAM program ENDPROGRAM .)


state 8

    (3) program -> variables blocks . main
    (69) main -> . START variables statementPoint FINISH

    START           shift and go to state 22

    main                           shift and go to state 21

state 9

    (21) blocks -> BLOCKS . blockList ENDBLOCKS
    (23) blockList -> . block blockList
    (24) blockList -> . empty
    (25) block -> . DEFINE blockType IDENTIFIER parameters variables statementPoint ENDDEFINE
    (26) block -> . empty
    (2) empty -> .

  ! shift/reduce conflict for DEFINE resolved as shift
    DEFINE          shift and go to state 26
    ENDBLOCKS       reduce using rule 2 (empty -> .)

  ! DEFINE          [ reduce using rule 2 (empty -> .) ]

    blockList                      shift and go to state 23
    block                          shift and go to state 24
    empty                          shift and go to state 25

state 10

    (22) blocks -> empty .

    START           reduce using rule 22 (blocks -> empty .)


state 11

    (4) variables -> VARIABLES declarationList . ENDVARIABLES

    ENDVARIABLES    shift and go to state 27


state 12

    (6) declarationList -> declaration . declarationList
    (6) declarationList -> . declaration declarationList
    (7) declarationList -> . empty
    (8) declaration -> . variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON
    (9) declaration -> . arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra SEMICOLON
    (10) declaration -> . variableType IDENTIFIER declarationExtra SEMICOLON
    (11) declaration -> . arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra SEMICOLON
    (2) empty -> .
    (30) variableType -> . NUMBER
    (31) variableType -> . WORDS
    (32) variableType -> . LETTER
    (33) variableType -> . FLAG
    (34) arrayType -> . MANYNUMBERS

    ENDVARIABLES    reduce using rule 2 (empty -> .)
    NUMBER          shift and go to state 16
    WORDS           shift and go to state 17
    LETTER          shift and go to state 18
    FLAG            shift and go to state 19
    MANYNUMBERS     shift and go to state 20

    declaration                    shift and go to state 12
    declarationList                shift and go to state 28
    empty                          shift and go to state 13
    variableType                   shift and go to state 14
    arrayType                      shift and go to state 15

state 13

    (7) declarationList -> empty .

    ENDVARIABLES    reduce using rule 7 (declarationList -> empty .)


state 14

    (8) declaration -> variableType . IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON
    (10) declaration -> variableType . IDENTIFIER declarationExtra SEMICOLON

    IDENTIFIER      shift and go to state 29


state 15

    (9) declaration -> arrayType . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra SEMICOLON
    (11) declaration -> arrayType . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra SEMICOLON

    IDENTIFIER      shift and go to state 30


state 16

    (30) variableType -> NUMBER .

    IDENTIFIER      reduce using rule 30 (variableType -> NUMBER .)


state 17

    (31) variableType -> WORDS .

    IDENTIFIER      reduce using rule 31 (variableType -> WORDS .)


state 18

    (32) variableType -> LETTER .

    IDENTIFIER      reduce using rule 32 (variableType -> LETTER .)


state 19

    (33) variableType -> FLAG .

    IDENTIFIER      reduce using rule 33 (variableType -> FLAG .)


state 20

    (34) arrayType -> MANYNUMBERS .

    IDENTIFIER      reduce using rule 34 (arrayType -> MANYNUMBERS .)


state 21

    (3) program -> variables blocks main .

    ENDPROGRAM      reduce using rule 3 (program -> variables blocks main .)


state 22

    (69) main -> START . variables statementPoint FINISH
    (4) variables -> . VARIABLES declarationList ENDVARIABLES
    (5) variables -> . empty
    (2) empty -> .

    VARIABLES       shift and go to state 5
    DISPLAY         reduce using rule 2 (empty -> .)
    IDENTIFIER      reduce using rule 2 (empty -> .)
    RETURN          reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    WHILE           reduce using rule 2 (empty -> .)
    FINISH          reduce using rule 2 (empty -> .)

    variables                      shift and go to state 31
    empty                          shift and go to state 6

state 23

    (21) blocks -> BLOCKS blockList . ENDBLOCKS

    ENDBLOCKS       shift and go to state 32


state 24

    (23) blockList -> block . blockList
    (23) blockList -> . block blockList
    (24) blockList -> . empty
    (25) block -> . DEFINE blockType IDENTIFIER parameters variables statementPoint ENDDEFINE
    (26) block -> . empty
    (2) empty -> .

  ! shift/reduce conflict for DEFINE resolved as shift
    DEFINE          shift and go to state 26
    ENDBLOCKS       reduce using rule 2 (empty -> .)

  ! DEFINE          [ reduce using rule 2 (empty -> .) ]

    block                          shift and go to state 24
    blockList                      shift and go to state 33
    empty                          shift and go to state 25

state 25

    (24) blockList -> empty .
    (26) block -> empty .

  ! reduce/reduce conflict for ENDBLOCKS resolved using rule 24 (blockList -> empty .)
    ENDBLOCKS       reduce using rule 24 (blockList -> empty .)
    DEFINE          reduce using rule 26 (block -> empty .)

  ! ENDBLOCKS       [ reduce using rule 26 (block -> empty .) ]


state 26

    (25) block -> DEFINE . blockType IDENTIFIER parameters variables statementPoint ENDDEFINE
    (27) blockType -> . PROCEDURE
    (28) blockType -> . variableType
    (29) blockType -> . arrayType
    (30) variableType -> . NUMBER
    (31) variableType -> . WORDS
    (32) variableType -> . LETTER
    (33) variableType -> . FLAG
    (34) arrayType -> . MANYNUMBERS

    PROCEDURE       shift and go to state 35
    NUMBER          shift and go to state 16
    WORDS           shift and go to state 17
    LETTER          shift and go to state 18
    FLAG            shift and go to state 19
    MANYNUMBERS     shift and go to state 20

    blockType                      shift and go to state 34
    variableType                   shift and go to state 36
    arrayType                      shift and go to state 37

state 27

    (4) variables -> VARIABLES declarationList ENDVARIABLES .

    BLOCKS          reduce using rule 4 (variables -> VARIABLES declarationList ENDVARIABLES .)
    START           reduce using rule 4 (variables -> VARIABLES declarationList ENDVARIABLES .)
    DISPLAY         reduce using rule 4 (variables -> VARIABLES declarationList ENDVARIABLES .)
    IDENTIFIER      reduce using rule 4 (variables -> VARIABLES declarationList ENDVARIABLES .)
    RETURN          reduce using rule 4 (variables -> VARIABLES declarationList ENDVARIABLES .)
    IF              reduce using rule 4 (variables -> VARIABLES declarationList ENDVARIABLES .)
    WHILE           reduce using rule 4 (variables -> VARIABLES declarationList ENDVARIABLES .)
    FINISH          reduce using rule 4 (variables -> VARIABLES declarationList ENDVARIABLES .)
    ENDDEFINE       reduce using rule 4 (variables -> VARIABLES declarationList ENDVARIABLES .)


state 28

    (6) declarationList -> declaration declarationList .

    ENDVARIABLES    reduce using rule 6 (declarationList -> declaration declarationList .)


state 29

    (8) declaration -> variableType IDENTIFIER . ASSIGNATION expression declarationExtra SEMICOLON
    (10) declaration -> variableType IDENTIFIER . declarationExtra SEMICOLON
    (12) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (14) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (16) declarationExtra -> . empty
    (2) empty -> .

    ASSIGNATION     shift and go to state 38
    COMMA           shift and go to state 40
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 39
    empty                          shift and go to state 41

state 30

    (9) declaration -> arrayType IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra SEMICOLON
    (11) declaration -> arrayType IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra SEMICOLON

    OBRACKETS       shift and go to state 42


state 31

    (69) main -> START variables . statementPoint FINISH
    (42) statementPoint -> . statementList
    (43) statementList -> . statement statementList
    (44) statementList -> . empty
    (45) statement -> . assign SEMICOLON
    (46) statement -> . display SEMICOLON
    (47) statement -> . call SEMICOLON
    (48) statement -> . return empty
    (49) statement -> . ifStatement empty
    (50) statement -> . whileStatement empty
    (52) statement -> . empty
    (2) empty -> .
    (53) assign -> . location ASSIGNATION expression
    (51) display -> . DISPLAY OPARENTHESIS singleActual CPARENTHESIS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (63) return -> . RETURN expression SEMICOLON
    (64) return -> . RETURN SEMICOLON
    (65) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF
    (68) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    FINISH          reduce using rule 2 (empty -> .)
    DISPLAY         shift and go to state 54
    IDENTIFIER      shift and go to state 55
    RETURN          shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58

  ! DISPLAY         [ reduce using rule 2 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 2 (empty -> .) ]
  ! RETURN          [ reduce using rule 2 (empty -> .) ]
  ! IF              [ reduce using rule 2 (empty -> .) ]
  ! WHILE           [ reduce using rule 2 (empty -> .) ]

    statementPoint                 shift and go to state 43
    statementList                  shift and go to state 44
    statement                      shift and go to state 45
    empty                          shift and go to state 46
    assign                         shift and go to state 47
    display                        shift and go to state 48
    call                           shift and go to state 49
    return                         shift and go to state 50
    ifStatement                    shift and go to state 51
    whileStatement                 shift and go to state 52
    location                       shift and go to state 53

state 32

    (21) blocks -> BLOCKS blockList ENDBLOCKS .

    START           reduce using rule 21 (blocks -> BLOCKS blockList ENDBLOCKS .)


state 33

    (23) blockList -> block blockList .

    ENDBLOCKS       reduce using rule 23 (blockList -> block blockList .)


state 34

    (25) block -> DEFINE blockType . IDENTIFIER parameters variables statementPoint ENDDEFINE

    IDENTIFIER      shift and go to state 59


state 35

    (27) blockType -> PROCEDURE .

    IDENTIFIER      reduce using rule 27 (blockType -> PROCEDURE .)


state 36

    (28) blockType -> variableType .

    IDENTIFIER      reduce using rule 28 (blockType -> variableType .)


state 37

    (29) blockType -> arrayType .

    IDENTIFIER      reduce using rule 29 (blockType -> arrayType .)


state 38

    (8) declaration -> variableType IDENTIFIER ASSIGNATION . expression declarationExtra SEMICOLON
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 61
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 39

    (10) declaration -> variableType IDENTIFIER declarationExtra . SEMICOLON

    SEMICOLON       shift and go to state 72


state 40

    (12) declarationExtra -> COMMA . IDENTIFIER ASSIGNATION expression declarationExtra
    (14) declarationExtra -> COMMA . IDENTIFIER declarationExtra

    IDENTIFIER      shift and go to state 73


state 41

    (16) declarationExtra -> empty .

    SEMICOLON       reduce using rule 16 (declarationExtra -> empty .)


state 42

    (9) declaration -> arrayType IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra SEMICOLON
    (11) declaration -> arrayType IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS arrayDeclarationExtra SEMICOLON
    (18) arrayIndexes -> . expression arrayIndexesExtra
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    arrayIndexes                   shift and go to state 74
    expression                     shift and go to state 75
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 43

    (69) main -> START variables statementPoint . FINISH

    FINISH          shift and go to state 76


state 44

    (42) statementPoint -> statementList .

    FINISH          reduce using rule 42 (statementPoint -> statementList .)
    ENDDEFINE       reduce using rule 42 (statementPoint -> statementList .)
    ELSE            reduce using rule 42 (statementPoint -> statementList .)
    ENDIF           reduce using rule 42 (statementPoint -> statementList .)
    ENDWHILE        reduce using rule 42 (statementPoint -> statementList .)


state 45

    (43) statementList -> statement . statementList
    (43) statementList -> . statement statementList
    (44) statementList -> . empty
    (45) statement -> . assign SEMICOLON
    (46) statement -> . display SEMICOLON
    (47) statement -> . call SEMICOLON
    (48) statement -> . return empty
    (49) statement -> . ifStatement empty
    (50) statement -> . whileStatement empty
    (52) statement -> . empty
    (2) empty -> .
    (53) assign -> . location ASSIGNATION expression
    (51) display -> . DISPLAY OPARENTHESIS singleActual CPARENTHESIS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (63) return -> . RETURN expression SEMICOLON
    (64) return -> . RETURN SEMICOLON
    (65) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF
    (68) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    FINISH          reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)
    ELSE            reduce using rule 2 (empty -> .)
    ENDIF           reduce using rule 2 (empty -> .)
    ENDWHILE        reduce using rule 2 (empty -> .)
    DISPLAY         shift and go to state 54
    IDENTIFIER      shift and go to state 55
    RETURN          shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58

  ! DISPLAY         [ reduce using rule 2 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 2 (empty -> .) ]
  ! RETURN          [ reduce using rule 2 (empty -> .) ]
  ! IF              [ reduce using rule 2 (empty -> .) ]
  ! WHILE           [ reduce using rule 2 (empty -> .) ]

    statement                      shift and go to state 45
    statementList                  shift and go to state 77
    empty                          shift and go to state 46
    assign                         shift and go to state 47
    display                        shift and go to state 48
    call                           shift and go to state 49
    return                         shift and go to state 50
    ifStatement                    shift and go to state 51
    whileStatement                 shift and go to state 52
    location                       shift and go to state 53

state 46

    (44) statementList -> empty .
    (52) statement -> empty .

  ! reduce/reduce conflict for FINISH resolved using rule 44 (statementList -> empty .)
  ! reduce/reduce conflict for ENDDEFINE resolved using rule 44 (statementList -> empty .)
  ! reduce/reduce conflict for ELSE resolved using rule 44 (statementList -> empty .)
  ! reduce/reduce conflict for ENDIF resolved using rule 44 (statementList -> empty .)
  ! reduce/reduce conflict for ENDWHILE resolved using rule 44 (statementList -> empty .)
    FINISH          reduce using rule 44 (statementList -> empty .)
    ENDDEFINE       reduce using rule 44 (statementList -> empty .)
    ELSE            reduce using rule 44 (statementList -> empty .)
    ENDIF           reduce using rule 44 (statementList -> empty .)
    ENDWHILE        reduce using rule 44 (statementList -> empty .)
    DISPLAY         reduce using rule 52 (statement -> empty .)
    IDENTIFIER      reduce using rule 52 (statement -> empty .)
    RETURN          reduce using rule 52 (statement -> empty .)
    IF              reduce using rule 52 (statement -> empty .)
    WHILE           reduce using rule 52 (statement -> empty .)

  ! FINISH          [ reduce using rule 52 (statement -> empty .) ]
  ! ENDDEFINE       [ reduce using rule 52 (statement -> empty .) ]
  ! ELSE            [ reduce using rule 52 (statement -> empty .) ]
  ! ENDIF           [ reduce using rule 52 (statement -> empty .) ]
  ! ENDWHILE        [ reduce using rule 52 (statement -> empty .) ]


state 47

    (45) statement -> assign . SEMICOLON

    SEMICOLON       shift and go to state 78


state 48

    (46) statement -> display . SEMICOLON

    SEMICOLON       shift and go to state 79


state 49

    (47) statement -> call . SEMICOLON

    SEMICOLON       shift and go to state 80


state 50

    (48) statement -> return . empty
    (2) empty -> .

    DISPLAY         reduce using rule 2 (empty -> .)
    IDENTIFIER      reduce using rule 2 (empty -> .)
    RETURN          reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    WHILE           reduce using rule 2 (empty -> .)
    FINISH          reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)
    ELSE            reduce using rule 2 (empty -> .)
    ENDIF           reduce using rule 2 (empty -> .)
    ENDWHILE        reduce using rule 2 (empty -> .)

    empty                          shift and go to state 81

state 51

    (49) statement -> ifStatement . empty
    (2) empty -> .

    DISPLAY         reduce using rule 2 (empty -> .)
    IDENTIFIER      reduce using rule 2 (empty -> .)
    RETURN          reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    WHILE           reduce using rule 2 (empty -> .)
    FINISH          reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)
    ELSE            reduce using rule 2 (empty -> .)
    ENDIF           reduce using rule 2 (empty -> .)
    ENDWHILE        reduce using rule 2 (empty -> .)

    empty                          shift and go to state 82

state 52

    (50) statement -> whileStatement . empty
    (2) empty -> .

    DISPLAY         reduce using rule 2 (empty -> .)
    IDENTIFIER      reduce using rule 2 (empty -> .)
    RETURN          reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    WHILE           reduce using rule 2 (empty -> .)
    FINISH          reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)
    ELSE            reduce using rule 2 (empty -> .)
    ENDIF           reduce using rule 2 (empty -> .)
    ENDWHILE        reduce using rule 2 (empty -> .)

    empty                          shift and go to state 83

state 53

    (53) assign -> location . ASSIGNATION expression

    ASSIGNATION     shift and go to state 84


state 54

    (51) display -> DISPLAY . OPARENTHESIS singleActual CPARENTHESIS

    OPARENTHESIS    shift and go to state 85


state 55

    (56) call -> IDENTIFIER . OPARENTHESIS actuals CPARENTHESIS
    (57) call -> IDENTIFIER . OPARENTHESIS CPARENTHESIS
    (54) location -> IDENTIFIER .
    (55) location -> IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS

    OPARENTHESIS    shift and go to state 86
    ASSIGNATION     reduce using rule 54 (location -> IDENTIFIER .)
    OBRACKETS       shift and go to state 87


state 56

    (63) return -> RETURN . expression SEMICOLON
    (64) return -> RETURN . SEMICOLON
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    SEMICOLON       shift and go to state 89
    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 88
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 57

    (65) ifStatement -> IF . OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF

    OPARENTHESIS    shift and go to state 90


state 58

    (68) whileStatement -> WHILE . OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE

    OPARENTHESIS    shift and go to state 91


state 59

    (25) block -> DEFINE blockType IDENTIFIER . parameters variables statementPoint ENDDEFINE
    (35) parameters -> . OPARENTHESIS parameter CPARENTHESIS

    OPARENTHESIS    shift and go to state 93

    parameters                     shift and go to state 92

state 60

    (54) location -> IDENTIFIER .
    (55) location -> IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS
    (56) call -> IDENTIFIER . OPARENTHESIS actuals CPARENTHESIS
    (57) call -> IDENTIFIER . OPARENTHESIS CPARENTHESIS

    OR              reduce using rule 54 (location -> IDENTIFIER .)
    AND             reduce using rule 54 (location -> IDENTIFIER .)
    LESSER          reduce using rule 54 (location -> IDENTIFIER .)
    GREATER         reduce using rule 54 (location -> IDENTIFIER .)
    EQUALITY        reduce using rule 54 (location -> IDENTIFIER .)
    PLUS            reduce using rule 54 (location -> IDENTIFIER .)
    MINUS           reduce using rule 54 (location -> IDENTIFIER .)
    MULTIPLICATION  reduce using rule 54 (location -> IDENTIFIER .)
    DIVISION        reduce using rule 54 (location -> IDENTIFIER .)
    COMMA           reduce using rule 54 (location -> IDENTIFIER .)
    SEMICOLON       reduce using rule 54 (location -> IDENTIFIER .)
    CBRACKETS       reduce using rule 54 (location -> IDENTIFIER .)
    CPARENTHESIS    reduce using rule 54 (location -> IDENTIFIER .)
    OBRACKETS       shift and go to state 87
    OPARENTHESIS    shift and go to state 86


state 61

    (8) declaration -> variableType IDENTIFIER ASSIGNATION expression . declarationExtra SEMICOLON
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression
    (12) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (14) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (16) declarationExtra -> . empty
    (2) empty -> .

    OR              shift and go to state 95
    AND             shift and go to state 96
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    EQUALITY        shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103
    COMMA           shift and go to state 40
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 94
    empty                          shift and go to state 41

state 62

    (70) expression -> location .

    OR              reduce using rule 70 (expression -> location .)
    AND             reduce using rule 70 (expression -> location .)
    LESSER          reduce using rule 70 (expression -> location .)
    GREATER         reduce using rule 70 (expression -> location .)
    EQUALITY        reduce using rule 70 (expression -> location .)
    PLUS            reduce using rule 70 (expression -> location .)
    MINUS           reduce using rule 70 (expression -> location .)
    MULTIPLICATION  reduce using rule 70 (expression -> location .)
    DIVISION        reduce using rule 70 (expression -> location .)
    COMMA           reduce using rule 70 (expression -> location .)
    SEMICOLON       reduce using rule 70 (expression -> location .)
    CBRACKETS       reduce using rule 70 (expression -> location .)
    CPARENTHESIS    reduce using rule 70 (expression -> location .)


state 63

    (71) expression -> call .

    OR              reduce using rule 71 (expression -> call .)
    AND             reduce using rule 71 (expression -> call .)
    LESSER          reduce using rule 71 (expression -> call .)
    GREATER         reduce using rule 71 (expression -> call .)
    EQUALITY        reduce using rule 71 (expression -> call .)
    PLUS            reduce using rule 71 (expression -> call .)
    MINUS           reduce using rule 71 (expression -> call .)
    MULTIPLICATION  reduce using rule 71 (expression -> call .)
    DIVISION        reduce using rule 71 (expression -> call .)
    COMMA           reduce using rule 71 (expression -> call .)
    SEMICOLON       reduce using rule 71 (expression -> call .)
    CBRACKETS       reduce using rule 71 (expression -> call .)
    CPARENTHESIS    reduce using rule 71 (expression -> call .)


state 64

    (72) expression -> unaryExpression .

    OR              reduce using rule 72 (expression -> unaryExpression .)
    AND             reduce using rule 72 (expression -> unaryExpression .)
    LESSER          reduce using rule 72 (expression -> unaryExpression .)
    GREATER         reduce using rule 72 (expression -> unaryExpression .)
    EQUALITY        reduce using rule 72 (expression -> unaryExpression .)
    PLUS            reduce using rule 72 (expression -> unaryExpression .)
    MINUS           reduce using rule 72 (expression -> unaryExpression .)
    MULTIPLICATION  reduce using rule 72 (expression -> unaryExpression .)
    DIVISION        reduce using rule 72 (expression -> unaryExpression .)
    COMMA           reduce using rule 72 (expression -> unaryExpression .)
    SEMICOLON       reduce using rule 72 (expression -> unaryExpression .)
    CBRACKETS       reduce using rule 72 (expression -> unaryExpression .)
    CPARENTHESIS    reduce using rule 72 (expression -> unaryExpression .)


state 65

    (73) expression -> binaryExpression .

    OR              reduce using rule 73 (expression -> binaryExpression .)
    AND             reduce using rule 73 (expression -> binaryExpression .)
    LESSER          reduce using rule 73 (expression -> binaryExpression .)
    GREATER         reduce using rule 73 (expression -> binaryExpression .)
    EQUALITY        reduce using rule 73 (expression -> binaryExpression .)
    PLUS            reduce using rule 73 (expression -> binaryExpression .)
    MINUS           reduce using rule 73 (expression -> binaryExpression .)
    MULTIPLICATION  reduce using rule 73 (expression -> binaryExpression .)
    DIVISION        reduce using rule 73 (expression -> binaryExpression .)
    COMMA           reduce using rule 73 (expression -> binaryExpression .)
    SEMICOLON       reduce using rule 73 (expression -> binaryExpression .)
    CBRACKETS       reduce using rule 73 (expression -> binaryExpression .)
    CPARENTHESIS    reduce using rule 73 (expression -> binaryExpression .)


state 66

    (74) expression -> FLAGVALUE .

    OR              reduce using rule 74 (expression -> FLAGVALUE .)
    AND             reduce using rule 74 (expression -> FLAGVALUE .)
    LESSER          reduce using rule 74 (expression -> FLAGVALUE .)
    GREATER         reduce using rule 74 (expression -> FLAGVALUE .)
    EQUALITY        reduce using rule 74 (expression -> FLAGVALUE .)
    PLUS            reduce using rule 74 (expression -> FLAGVALUE .)
    MINUS           reduce using rule 74 (expression -> FLAGVALUE .)
    MULTIPLICATION  reduce using rule 74 (expression -> FLAGVALUE .)
    DIVISION        reduce using rule 74 (expression -> FLAGVALUE .)
    COMMA           reduce using rule 74 (expression -> FLAGVALUE .)
    SEMICOLON       reduce using rule 74 (expression -> FLAGVALUE .)
    CBRACKETS       reduce using rule 74 (expression -> FLAGVALUE .)
    CPARENTHESIS    reduce using rule 74 (expression -> FLAGVALUE .)


state 67

    (75) expression -> NUMBERVALUE .

    OR              reduce using rule 75 (expression -> NUMBERVALUE .)
    AND             reduce using rule 75 (expression -> NUMBERVALUE .)
    LESSER          reduce using rule 75 (expression -> NUMBERVALUE .)
    GREATER         reduce using rule 75 (expression -> NUMBERVALUE .)
    EQUALITY        reduce using rule 75 (expression -> NUMBERVALUE .)
    PLUS            reduce using rule 75 (expression -> NUMBERVALUE .)
    MINUS           reduce using rule 75 (expression -> NUMBERVALUE .)
    MULTIPLICATION  reduce using rule 75 (expression -> NUMBERVALUE .)
    DIVISION        reduce using rule 75 (expression -> NUMBERVALUE .)
    COMMA           reduce using rule 75 (expression -> NUMBERVALUE .)
    SEMICOLON       reduce using rule 75 (expression -> NUMBERVALUE .)
    CBRACKETS       reduce using rule 75 (expression -> NUMBERVALUE .)
    CPARENTHESIS    reduce using rule 75 (expression -> NUMBERVALUE .)


state 68

    (76) expression -> WORDSVALUE .

    OR              reduce using rule 76 (expression -> WORDSVALUE .)
    AND             reduce using rule 76 (expression -> WORDSVALUE .)
    LESSER          reduce using rule 76 (expression -> WORDSVALUE .)
    GREATER         reduce using rule 76 (expression -> WORDSVALUE .)
    EQUALITY        reduce using rule 76 (expression -> WORDSVALUE .)
    PLUS            reduce using rule 76 (expression -> WORDSVALUE .)
    MINUS           reduce using rule 76 (expression -> WORDSVALUE .)
    MULTIPLICATION  reduce using rule 76 (expression -> WORDSVALUE .)
    DIVISION        reduce using rule 76 (expression -> WORDSVALUE .)
    COMMA           reduce using rule 76 (expression -> WORDSVALUE .)
    SEMICOLON       reduce using rule 76 (expression -> WORDSVALUE .)
    CBRACKETS       reduce using rule 76 (expression -> WORDSVALUE .)
    CPARENTHESIS    reduce using rule 76 (expression -> WORDSVALUE .)


state 69

    (77) expression -> LETTERVALUE .

    OR              reduce using rule 77 (expression -> LETTERVALUE .)
    AND             reduce using rule 77 (expression -> LETTERVALUE .)
    LESSER          reduce using rule 77 (expression -> LETTERVALUE .)
    GREATER         reduce using rule 77 (expression -> LETTERVALUE .)
    EQUALITY        reduce using rule 77 (expression -> LETTERVALUE .)
    PLUS            reduce using rule 77 (expression -> LETTERVALUE .)
    MINUS           reduce using rule 77 (expression -> LETTERVALUE .)
    MULTIPLICATION  reduce using rule 77 (expression -> LETTERVALUE .)
    DIVISION        reduce using rule 77 (expression -> LETTERVALUE .)
    COMMA           reduce using rule 77 (expression -> LETTERVALUE .)
    SEMICOLON       reduce using rule 77 (expression -> LETTERVALUE .)
    CBRACKETS       reduce using rule 77 (expression -> LETTERVALUE .)
    CPARENTHESIS    reduce using rule 77 (expression -> LETTERVALUE .)


state 70

    (78) expression -> OPARENTHESIS . expression CPARENTHESIS
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 104
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 71

    (88) unaryExpression -> NOT . expression
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 105
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 72

    (10) declaration -> variableType IDENTIFIER declarationExtra SEMICOLON .

    NUMBER          reduce using rule 10 (declaration -> variableType IDENTIFIER declarationExtra SEMICOLON .)
    WORDS           reduce using rule 10 (declaration -> variableType IDENTIFIER declarationExtra SEMICOLON .)
    LETTER          reduce using rule 10 (declaration -> variableType IDENTIFIER declarationExtra SEMICOLON .)
    FLAG            reduce using rule 10 (declaration -> variableType IDENTIFIER declarationExtra SEMICOLON .)
    MANYNUMBERS     reduce using rule 10 (declaration -> variableType IDENTIFIER declarationExtra SEMICOLON .)
    ENDVARIABLES    reduce using rule 10 (declaration -> variableType IDENTIFIER declarationExtra SEMICOLON .)


state 73

    (12) declarationExtra -> COMMA IDENTIFIER . ASSIGNATION expression declarationExtra
    (14) declarationExtra -> COMMA IDENTIFIER . declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (14) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (16) declarationExtra -> . empty
    (2) empty -> .

    ASSIGNATION     shift and go to state 106
    COMMA           shift and go to state 40
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 107
    empty                          shift and go to state 41

state 74

    (9) declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS ASSIGNATION expression arrayDeclarationExtra SEMICOLON
    (11) declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS arrayDeclarationExtra SEMICOLON

    CBRACKETS       shift and go to state 108


state 75

    (18) arrayIndexes -> expression . arrayIndexesExtra
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression
    (19) arrayIndexesExtra -> . COMMA expression arrayIndexesExtra
    (20) arrayIndexesExtra -> . empty
    (2) empty -> .

    OR              shift and go to state 95
    AND             shift and go to state 96
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    EQUALITY        shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103
    COMMA           shift and go to state 110
    CBRACKETS       reduce using rule 2 (empty -> .)

    arrayIndexesExtra              shift and go to state 109
    empty                          shift and go to state 111

state 76

    (69) main -> START variables statementPoint FINISH .

    ENDPROGRAM      reduce using rule 69 (main -> START variables statementPoint FINISH .)


state 77

    (43) statementList -> statement statementList .

    FINISH          reduce using rule 43 (statementList -> statement statementList .)
    ENDDEFINE       reduce using rule 43 (statementList -> statement statementList .)
    ELSE            reduce using rule 43 (statementList -> statement statementList .)
    ENDIF           reduce using rule 43 (statementList -> statement statementList .)
    ENDWHILE        reduce using rule 43 (statementList -> statement statementList .)


state 78

    (45) statement -> assign SEMICOLON .

    DISPLAY         reduce using rule 45 (statement -> assign SEMICOLON .)
    IDENTIFIER      reduce using rule 45 (statement -> assign SEMICOLON .)
    RETURN          reduce using rule 45 (statement -> assign SEMICOLON .)
    IF              reduce using rule 45 (statement -> assign SEMICOLON .)
    WHILE           reduce using rule 45 (statement -> assign SEMICOLON .)
    FINISH          reduce using rule 45 (statement -> assign SEMICOLON .)
    ENDDEFINE       reduce using rule 45 (statement -> assign SEMICOLON .)
    ELSE            reduce using rule 45 (statement -> assign SEMICOLON .)
    ENDIF           reduce using rule 45 (statement -> assign SEMICOLON .)
    ENDWHILE        reduce using rule 45 (statement -> assign SEMICOLON .)


state 79

    (46) statement -> display SEMICOLON .

    DISPLAY         reduce using rule 46 (statement -> display SEMICOLON .)
    IDENTIFIER      reduce using rule 46 (statement -> display SEMICOLON .)
    RETURN          reduce using rule 46 (statement -> display SEMICOLON .)
    IF              reduce using rule 46 (statement -> display SEMICOLON .)
    WHILE           reduce using rule 46 (statement -> display SEMICOLON .)
    FINISH          reduce using rule 46 (statement -> display SEMICOLON .)
    ENDDEFINE       reduce using rule 46 (statement -> display SEMICOLON .)
    ELSE            reduce using rule 46 (statement -> display SEMICOLON .)
    ENDIF           reduce using rule 46 (statement -> display SEMICOLON .)
    ENDWHILE        reduce using rule 46 (statement -> display SEMICOLON .)


state 80

    (47) statement -> call SEMICOLON .

    DISPLAY         reduce using rule 47 (statement -> call SEMICOLON .)
    IDENTIFIER      reduce using rule 47 (statement -> call SEMICOLON .)
    RETURN          reduce using rule 47 (statement -> call SEMICOLON .)
    IF              reduce using rule 47 (statement -> call SEMICOLON .)
    WHILE           reduce using rule 47 (statement -> call SEMICOLON .)
    FINISH          reduce using rule 47 (statement -> call SEMICOLON .)
    ENDDEFINE       reduce using rule 47 (statement -> call SEMICOLON .)
    ELSE            reduce using rule 47 (statement -> call SEMICOLON .)
    ENDIF           reduce using rule 47 (statement -> call SEMICOLON .)
    ENDWHILE        reduce using rule 47 (statement -> call SEMICOLON .)


state 81

    (48) statement -> return empty .

    DISPLAY         reduce using rule 48 (statement -> return empty .)
    IDENTIFIER      reduce using rule 48 (statement -> return empty .)
    RETURN          reduce using rule 48 (statement -> return empty .)
    IF              reduce using rule 48 (statement -> return empty .)
    WHILE           reduce using rule 48 (statement -> return empty .)
    FINISH          reduce using rule 48 (statement -> return empty .)
    ENDDEFINE       reduce using rule 48 (statement -> return empty .)
    ELSE            reduce using rule 48 (statement -> return empty .)
    ENDIF           reduce using rule 48 (statement -> return empty .)
    ENDWHILE        reduce using rule 48 (statement -> return empty .)


state 82

    (49) statement -> ifStatement empty .

    DISPLAY         reduce using rule 49 (statement -> ifStatement empty .)
    IDENTIFIER      reduce using rule 49 (statement -> ifStatement empty .)
    RETURN          reduce using rule 49 (statement -> ifStatement empty .)
    IF              reduce using rule 49 (statement -> ifStatement empty .)
    WHILE           reduce using rule 49 (statement -> ifStatement empty .)
    FINISH          reduce using rule 49 (statement -> ifStatement empty .)
    ENDDEFINE       reduce using rule 49 (statement -> ifStatement empty .)
    ELSE            reduce using rule 49 (statement -> ifStatement empty .)
    ENDIF           reduce using rule 49 (statement -> ifStatement empty .)
    ENDWHILE        reduce using rule 49 (statement -> ifStatement empty .)


state 83

    (50) statement -> whileStatement empty .

    DISPLAY         reduce using rule 50 (statement -> whileStatement empty .)
    IDENTIFIER      reduce using rule 50 (statement -> whileStatement empty .)
    RETURN          reduce using rule 50 (statement -> whileStatement empty .)
    IF              reduce using rule 50 (statement -> whileStatement empty .)
    WHILE           reduce using rule 50 (statement -> whileStatement empty .)
    FINISH          reduce using rule 50 (statement -> whileStatement empty .)
    ENDDEFINE       reduce using rule 50 (statement -> whileStatement empty .)
    ELSE            reduce using rule 50 (statement -> whileStatement empty .)
    ENDIF           reduce using rule 50 (statement -> whileStatement empty .)
    ENDWHILE        reduce using rule 50 (statement -> whileStatement empty .)


state 84

    (53) assign -> location ASSIGNATION . expression
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    location                       shift and go to state 62
    expression                     shift and go to state 112
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 85

    (51) display -> DISPLAY OPARENTHESIS . singleActual CPARENTHESIS
    (58) singleActual -> . expression
    (59) singleActual -> . empty
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (2) empty -> .
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    CPARENTHESIS    reduce using rule 2 (empty -> .)
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    singleActual                   shift and go to state 113
    expression                     shift and go to state 114
    empty                          shift and go to state 115
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 86

    (56) call -> IDENTIFIER OPARENTHESIS . actuals CPARENTHESIS
    (57) call -> IDENTIFIER OPARENTHESIS . CPARENTHESIS
    (60) actuals -> . expression commaExpressionList
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    CPARENTHESIS    shift and go to state 117
    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    actuals                        shift and go to state 116
    expression                     shift and go to state 118
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 87

    (55) location -> IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS
    (18) arrayIndexes -> . expression arrayIndexesExtra
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    arrayIndexes                   shift and go to state 119
    expression                     shift and go to state 75
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 88

    (63) return -> RETURN expression . SEMICOLON
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression

    SEMICOLON       shift and go to state 120
    OR              shift and go to state 95
    AND             shift and go to state 96
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    EQUALITY        shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103


state 89

    (64) return -> RETURN SEMICOLON .

    DISPLAY         reduce using rule 64 (return -> RETURN SEMICOLON .)
    IDENTIFIER      reduce using rule 64 (return -> RETURN SEMICOLON .)
    RETURN          reduce using rule 64 (return -> RETURN SEMICOLON .)
    IF              reduce using rule 64 (return -> RETURN SEMICOLON .)
    WHILE           reduce using rule 64 (return -> RETURN SEMICOLON .)
    FINISH          reduce using rule 64 (return -> RETURN SEMICOLON .)
    ENDDEFINE       reduce using rule 64 (return -> RETURN SEMICOLON .)
    ELSE            reduce using rule 64 (return -> RETURN SEMICOLON .)
    ENDIF           reduce using rule 64 (return -> RETURN SEMICOLON .)
    ENDWHILE        reduce using rule 64 (return -> RETURN SEMICOLON .)


state 90

    (65) ifStatement -> IF OPARENTHESIS . expression CPARENTHESIS statementPoint elseStatement ENDIF
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 121
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 91

    (68) whileStatement -> WHILE OPARENTHESIS . expression CPARENTHESIS statementPoint ENDWHILE
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 122
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 92

    (25) block -> DEFINE blockType IDENTIFIER parameters . variables statementPoint ENDDEFINE
    (4) variables -> . VARIABLES declarationList ENDVARIABLES
    (5) variables -> . empty
    (2) empty -> .

    VARIABLES       shift and go to state 5
    DISPLAY         reduce using rule 2 (empty -> .)
    IDENTIFIER      reduce using rule 2 (empty -> .)
    RETURN          reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    WHILE           reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)

    variables                      shift and go to state 123
    empty                          shift and go to state 6

state 93

    (35) parameters -> OPARENTHESIS . parameter CPARENTHESIS
    (36) parameter -> . variableType IDENTIFIER parameterExtra
    (37) parameter -> . arrayType IDENTIFIER parameterExtra
    (38) parameter -> . empty
    (30) variableType -> . NUMBER
    (31) variableType -> . WORDS
    (32) variableType -> . LETTER
    (33) variableType -> . FLAG
    (34) arrayType -> . MANYNUMBERS
    (2) empty -> .

    NUMBER          shift and go to state 16
    WORDS           shift and go to state 17
    LETTER          shift and go to state 18
    FLAG            shift and go to state 19
    MANYNUMBERS     shift and go to state 20
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    parameter                      shift and go to state 124
    variableType                   shift and go to state 125
    arrayType                      shift and go to state 126
    empty                          shift and go to state 127

state 94

    (8) declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra . SEMICOLON

    SEMICOLON       shift and go to state 128


state 95

    (79) binaryExpression -> expression OR . expression
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 129
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 96

    (80) binaryExpression -> expression AND . expression
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 130
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 97

    (81) binaryExpression -> expression LESSER . expression
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 131
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 98

    (82) binaryExpression -> expression GREATER . expression
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 132
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 99

    (83) binaryExpression -> expression EQUALITY . expression
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 133
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 100

    (84) binaryExpression -> expression PLUS . expression
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 134
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 101

    (85) binaryExpression -> expression MINUS . expression
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 135
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 102

    (86) binaryExpression -> expression MULTIPLICATION . expression
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 136
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 103

    (87) binaryExpression -> expression DIVISION . expression
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 137
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 104

    (78) expression -> OPARENTHESIS expression . CPARENTHESIS
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression

    CPARENTHESIS    shift and go to state 138
    OR              shift and go to state 95
    AND             shift and go to state 96
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    EQUALITY        shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103


state 105

    (88) unaryExpression -> NOT expression .
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression

    OR              reduce using rule 88 (unaryExpression -> NOT expression .)
    AND             reduce using rule 88 (unaryExpression -> NOT expression .)
    LESSER          reduce using rule 88 (unaryExpression -> NOT expression .)
    GREATER         reduce using rule 88 (unaryExpression -> NOT expression .)
    EQUALITY        reduce using rule 88 (unaryExpression -> NOT expression .)
    PLUS            reduce using rule 88 (unaryExpression -> NOT expression .)
    MINUS           reduce using rule 88 (unaryExpression -> NOT expression .)
    MULTIPLICATION  reduce using rule 88 (unaryExpression -> NOT expression .)
    DIVISION        reduce using rule 88 (unaryExpression -> NOT expression .)
    COMMA           reduce using rule 88 (unaryExpression -> NOT expression .)
    SEMICOLON       reduce using rule 88 (unaryExpression -> NOT expression .)
    CBRACKETS       reduce using rule 88 (unaryExpression -> NOT expression .)
    CPARENTHESIS    reduce using rule 88 (unaryExpression -> NOT expression .)

  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! LESSER          [ shift and go to state 97 ]
  ! GREATER         [ shift and go to state 98 ]
  ! EQUALITY        [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MULTIPLICATION  [ shift and go to state 102 ]
  ! DIVISION        [ shift and go to state 103 ]


state 106

    (12) declarationExtra -> COMMA IDENTIFIER ASSIGNATION . expression declarationExtra
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 139
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 107

    (14) declarationExtra -> COMMA IDENTIFIER declarationExtra .

    SEMICOLON       reduce using rule 14 (declarationExtra -> COMMA IDENTIFIER declarationExtra .)


state 108

    (9) declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS . ASSIGNATION expression arrayDeclarationExtra SEMICOLON
    (11) declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS . arrayDeclarationExtra SEMICOLON
    (13) arrayDeclarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra
    (15) arrayDeclarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra
    (17) arrayDeclarationExtra -> . empty
    (2) empty -> .

    ASSIGNATION     shift and go to state 140
    COMMA           shift and go to state 142
    SEMICOLON       reduce using rule 2 (empty -> .)

    arrayDeclarationExtra          shift and go to state 141
    empty                          shift and go to state 143

state 109

    (18) arrayIndexes -> expression arrayIndexesExtra .

    CBRACKETS       reduce using rule 18 (arrayIndexes -> expression arrayIndexesExtra .)


state 110

    (19) arrayIndexesExtra -> COMMA . expression arrayIndexesExtra
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 144
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 111

    (20) arrayIndexesExtra -> empty .

    CBRACKETS       reduce using rule 20 (arrayIndexesExtra -> empty .)


state 112

    (53) assign -> location ASSIGNATION expression .
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression

    SEMICOLON       reduce using rule 53 (assign -> location ASSIGNATION expression .)
    OR              shift and go to state 95
    AND             shift and go to state 96
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    EQUALITY        shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103


state 113

    (51) display -> DISPLAY OPARENTHESIS singleActual . CPARENTHESIS

    CPARENTHESIS    shift and go to state 145


state 114

    (58) singleActual -> expression .
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression

    CPARENTHESIS    reduce using rule 58 (singleActual -> expression .)
    OR              shift and go to state 95
    AND             shift and go to state 96
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    EQUALITY        shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103


state 115

    (59) singleActual -> empty .

    CPARENTHESIS    reduce using rule 59 (singleActual -> empty .)


state 116

    (56) call -> IDENTIFIER OPARENTHESIS actuals . CPARENTHESIS

    CPARENTHESIS    shift and go to state 146


state 117

    (57) call -> IDENTIFIER OPARENTHESIS CPARENTHESIS .

    SEMICOLON       reduce using rule 57 (call -> IDENTIFIER OPARENTHESIS CPARENTHESIS .)
    OR              reduce using rule 57 (call -> IDENTIFIER OPARENTHESIS CPARENTHESIS .)
    AND             reduce using rule 57 (call -> IDENTIFIER OPARENTHESIS CPARENTHESIS .)
    LESSER          reduce using rule 57 (call -> IDENTIFIER OPARENTHESIS CPARENTHESIS .)
    GREATER         reduce using rule 57 (call -> IDENTIFIER OPARENTHESIS CPARENTHESIS .)
    EQUALITY        reduce using rule 57 (call -> IDENTIFIER OPARENTHESIS CPARENTHESIS .)
    PLUS            reduce using rule 57 (call -> IDENTIFIER OPARENTHESIS CPARENTHESIS .)
    MINUS           reduce using rule 57 (call -> IDENTIFIER OPARENTHESIS CPARENTHESIS .)
    MULTIPLICATION  reduce using rule 57 (call -> IDENTIFIER OPARENTHESIS CPARENTHESIS .)
    DIVISION        reduce using rule 57 (call -> IDENTIFIER OPARENTHESIS CPARENTHESIS .)
    COMMA           reduce using rule 57 (call -> IDENTIFIER OPARENTHESIS CPARENTHESIS .)
    CBRACKETS       reduce using rule 57 (call -> IDENTIFIER OPARENTHESIS CPARENTHESIS .)
    CPARENTHESIS    reduce using rule 57 (call -> IDENTIFIER OPARENTHESIS CPARENTHESIS .)


state 118

    (60) actuals -> expression . commaExpressionList
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression
    (61) commaExpressionList -> . COMMA expression commaExpressionList
    (62) commaExpressionList -> . empty
    (2) empty -> .

    OR              shift and go to state 95
    AND             shift and go to state 96
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    EQUALITY        shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103
    COMMA           shift and go to state 148
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    commaExpressionList            shift and go to state 147
    empty                          shift and go to state 149

state 119

    (55) location -> IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS

    CBRACKETS       shift and go to state 150


state 120

    (63) return -> RETURN expression SEMICOLON .

    DISPLAY         reduce using rule 63 (return -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 63 (return -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 63 (return -> RETURN expression SEMICOLON .)
    IF              reduce using rule 63 (return -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 63 (return -> RETURN expression SEMICOLON .)
    FINISH          reduce using rule 63 (return -> RETURN expression SEMICOLON .)
    ENDDEFINE       reduce using rule 63 (return -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 63 (return -> RETURN expression SEMICOLON .)
    ENDIF           reduce using rule 63 (return -> RETURN expression SEMICOLON .)
    ENDWHILE        reduce using rule 63 (return -> RETURN expression SEMICOLON .)


state 121

    (65) ifStatement -> IF OPARENTHESIS expression . CPARENTHESIS statementPoint elseStatement ENDIF
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression

    CPARENTHESIS    shift and go to state 151
    OR              shift and go to state 95
    AND             shift and go to state 96
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    EQUALITY        shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103


state 122

    (68) whileStatement -> WHILE OPARENTHESIS expression . CPARENTHESIS statementPoint ENDWHILE
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression

    CPARENTHESIS    shift and go to state 152
    OR              shift and go to state 95
    AND             shift and go to state 96
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    EQUALITY        shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103


state 123

    (25) block -> DEFINE blockType IDENTIFIER parameters variables . statementPoint ENDDEFINE
    (42) statementPoint -> . statementList
    (43) statementList -> . statement statementList
    (44) statementList -> . empty
    (45) statement -> . assign SEMICOLON
    (46) statement -> . display SEMICOLON
    (47) statement -> . call SEMICOLON
    (48) statement -> . return empty
    (49) statement -> . ifStatement empty
    (50) statement -> . whileStatement empty
    (52) statement -> . empty
    (2) empty -> .
    (53) assign -> . location ASSIGNATION expression
    (51) display -> . DISPLAY OPARENTHESIS singleActual CPARENTHESIS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (63) return -> . RETURN expression SEMICOLON
    (64) return -> . RETURN SEMICOLON
    (65) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF
    (68) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    ENDDEFINE       reduce using rule 2 (empty -> .)
    DISPLAY         shift and go to state 54
    IDENTIFIER      shift and go to state 55
    RETURN          shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58

  ! DISPLAY         [ reduce using rule 2 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 2 (empty -> .) ]
  ! RETURN          [ reduce using rule 2 (empty -> .) ]
  ! IF              [ reduce using rule 2 (empty -> .) ]
  ! WHILE           [ reduce using rule 2 (empty -> .) ]

    statementPoint                 shift and go to state 153
    statementList                  shift and go to state 44
    statement                      shift and go to state 45
    empty                          shift and go to state 46
    assign                         shift and go to state 47
    display                        shift and go to state 48
    call                           shift and go to state 49
    return                         shift and go to state 50
    ifStatement                    shift and go to state 51
    whileStatement                 shift and go to state 52
    location                       shift and go to state 53

state 124

    (35) parameters -> OPARENTHESIS parameter . CPARENTHESIS

    CPARENTHESIS    shift and go to state 154


state 125

    (36) parameter -> variableType . IDENTIFIER parameterExtra

    IDENTIFIER      shift and go to state 155


state 126

    (37) parameter -> arrayType . IDENTIFIER parameterExtra

    IDENTIFIER      shift and go to state 156


state 127

    (38) parameter -> empty .

    CPARENTHESIS    reduce using rule 38 (parameter -> empty .)


state 128

    (8) declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON .

    NUMBER          reduce using rule 8 (declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON .)
    WORDS           reduce using rule 8 (declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON .)
    LETTER          reduce using rule 8 (declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON .)
    FLAG            reduce using rule 8 (declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON .)
    MANYNUMBERS     reduce using rule 8 (declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON .)
    ENDVARIABLES    reduce using rule 8 (declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON .)


state 129

    (79) binaryExpression -> expression OR expression .
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression

    OR              reduce using rule 79 (binaryExpression -> expression OR expression .)
    COMMA           reduce using rule 79 (binaryExpression -> expression OR expression .)
    SEMICOLON       reduce using rule 79 (binaryExpression -> expression OR expression .)
    CBRACKETS       reduce using rule 79 (binaryExpression -> expression OR expression .)
    CPARENTHESIS    reduce using rule 79 (binaryExpression -> expression OR expression .)
    AND             shift and go to state 96
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    EQUALITY        shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103

  ! AND             [ reduce using rule 79 (binaryExpression -> expression OR expression .) ]
  ! LESSER          [ reduce using rule 79 (binaryExpression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 79 (binaryExpression -> expression OR expression .) ]
  ! EQUALITY        [ reduce using rule 79 (binaryExpression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 79 (binaryExpression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 79 (binaryExpression -> expression OR expression .) ]
  ! MULTIPLICATION  [ reduce using rule 79 (binaryExpression -> expression OR expression .) ]
  ! DIVISION        [ reduce using rule 79 (binaryExpression -> expression OR expression .) ]
  ! OR              [ shift and go to state 95 ]


state 130

    (80) binaryExpression -> expression AND expression .
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression

    OR              reduce using rule 80 (binaryExpression -> expression AND expression .)
    AND             reduce using rule 80 (binaryExpression -> expression AND expression .)
    COMMA           reduce using rule 80 (binaryExpression -> expression AND expression .)
    SEMICOLON       reduce using rule 80 (binaryExpression -> expression AND expression .)
    CBRACKETS       reduce using rule 80 (binaryExpression -> expression AND expression .)
    CPARENTHESIS    reduce using rule 80 (binaryExpression -> expression AND expression .)
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    EQUALITY        shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103

  ! LESSER          [ reduce using rule 80 (binaryExpression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 80 (binaryExpression -> expression AND expression .) ]
  ! EQUALITY        [ reduce using rule 80 (binaryExpression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 80 (binaryExpression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 80 (binaryExpression -> expression AND expression .) ]
  ! MULTIPLICATION  [ reduce using rule 80 (binaryExpression -> expression AND expression .) ]
  ! DIVISION        [ reduce using rule 80 (binaryExpression -> expression AND expression .) ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]


state 131

    (81) binaryExpression -> expression LESSER expression .
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression

    OR              reduce using rule 81 (binaryExpression -> expression LESSER expression .)
    AND             reduce using rule 81 (binaryExpression -> expression LESSER expression .)
    LESSER          reduce using rule 81 (binaryExpression -> expression LESSER expression .)
    GREATER         reduce using rule 81 (binaryExpression -> expression LESSER expression .)
    EQUALITY        reduce using rule 81 (binaryExpression -> expression LESSER expression .)
    COMMA           reduce using rule 81 (binaryExpression -> expression LESSER expression .)
    SEMICOLON       reduce using rule 81 (binaryExpression -> expression LESSER expression .)
    CBRACKETS       reduce using rule 81 (binaryExpression -> expression LESSER expression .)
    CPARENTHESIS    reduce using rule 81 (binaryExpression -> expression LESSER expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103

  ! PLUS            [ reduce using rule 81 (binaryExpression -> expression LESSER expression .) ]
  ! MINUS           [ reduce using rule 81 (binaryExpression -> expression LESSER expression .) ]
  ! MULTIPLICATION  [ reduce using rule 81 (binaryExpression -> expression LESSER expression .) ]
  ! DIVISION        [ reduce using rule 81 (binaryExpression -> expression LESSER expression .) ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! LESSER          [ shift and go to state 97 ]
  ! GREATER         [ shift and go to state 98 ]
  ! EQUALITY        [ shift and go to state 99 ]


state 132

    (82) binaryExpression -> expression GREATER expression .
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression

    OR              reduce using rule 82 (binaryExpression -> expression GREATER expression .)
    AND             reduce using rule 82 (binaryExpression -> expression GREATER expression .)
    LESSER          reduce using rule 82 (binaryExpression -> expression GREATER expression .)
    GREATER         reduce using rule 82 (binaryExpression -> expression GREATER expression .)
    EQUALITY        reduce using rule 82 (binaryExpression -> expression GREATER expression .)
    COMMA           reduce using rule 82 (binaryExpression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 82 (binaryExpression -> expression GREATER expression .)
    CBRACKETS       reduce using rule 82 (binaryExpression -> expression GREATER expression .)
    CPARENTHESIS    reduce using rule 82 (binaryExpression -> expression GREATER expression .)
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103

  ! PLUS            [ reduce using rule 82 (binaryExpression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 82 (binaryExpression -> expression GREATER expression .) ]
  ! MULTIPLICATION  [ reduce using rule 82 (binaryExpression -> expression GREATER expression .) ]
  ! DIVISION        [ reduce using rule 82 (binaryExpression -> expression GREATER expression .) ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! LESSER          [ shift and go to state 97 ]
  ! GREATER         [ shift and go to state 98 ]
  ! EQUALITY        [ shift and go to state 99 ]


state 133

    (83) binaryExpression -> expression EQUALITY expression .
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression

    OR              reduce using rule 83 (binaryExpression -> expression EQUALITY expression .)
    AND             reduce using rule 83 (binaryExpression -> expression EQUALITY expression .)
    EQUALITY        reduce using rule 83 (binaryExpression -> expression EQUALITY expression .)
    COMMA           reduce using rule 83 (binaryExpression -> expression EQUALITY expression .)
    SEMICOLON       reduce using rule 83 (binaryExpression -> expression EQUALITY expression .)
    CBRACKETS       reduce using rule 83 (binaryExpression -> expression EQUALITY expression .)
    CPARENTHESIS    reduce using rule 83 (binaryExpression -> expression EQUALITY expression .)
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103

  ! LESSER          [ reduce using rule 83 (binaryExpression -> expression EQUALITY expression .) ]
  ! GREATER         [ reduce using rule 83 (binaryExpression -> expression EQUALITY expression .) ]
  ! PLUS            [ reduce using rule 83 (binaryExpression -> expression EQUALITY expression .) ]
  ! MINUS           [ reduce using rule 83 (binaryExpression -> expression EQUALITY expression .) ]
  ! MULTIPLICATION  [ reduce using rule 83 (binaryExpression -> expression EQUALITY expression .) ]
  ! DIVISION        [ reduce using rule 83 (binaryExpression -> expression EQUALITY expression .) ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! EQUALITY        [ shift and go to state 99 ]


state 134

    (84) binaryExpression -> expression PLUS expression .
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression

    OR              reduce using rule 84 (binaryExpression -> expression PLUS expression .)
    AND             reduce using rule 84 (binaryExpression -> expression PLUS expression .)
    LESSER          reduce using rule 84 (binaryExpression -> expression PLUS expression .)
    GREATER         reduce using rule 84 (binaryExpression -> expression PLUS expression .)
    EQUALITY        reduce using rule 84 (binaryExpression -> expression PLUS expression .)
    PLUS            reduce using rule 84 (binaryExpression -> expression PLUS expression .)
    MINUS           reduce using rule 84 (binaryExpression -> expression PLUS expression .)
    COMMA           reduce using rule 84 (binaryExpression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 84 (binaryExpression -> expression PLUS expression .)
    CBRACKETS       reduce using rule 84 (binaryExpression -> expression PLUS expression .)
    CPARENTHESIS    reduce using rule 84 (binaryExpression -> expression PLUS expression .)
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103

  ! MULTIPLICATION  [ reduce using rule 84 (binaryExpression -> expression PLUS expression .) ]
  ! DIVISION        [ reduce using rule 84 (binaryExpression -> expression PLUS expression .) ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! LESSER          [ shift and go to state 97 ]
  ! GREATER         [ shift and go to state 98 ]
  ! EQUALITY        [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]


state 135

    (85) binaryExpression -> expression MINUS expression .
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression

    OR              reduce using rule 85 (binaryExpression -> expression MINUS expression .)
    AND             reduce using rule 85 (binaryExpression -> expression MINUS expression .)
    LESSER          reduce using rule 85 (binaryExpression -> expression MINUS expression .)
    GREATER         reduce using rule 85 (binaryExpression -> expression MINUS expression .)
    EQUALITY        reduce using rule 85 (binaryExpression -> expression MINUS expression .)
    PLUS            reduce using rule 85 (binaryExpression -> expression MINUS expression .)
    MINUS           reduce using rule 85 (binaryExpression -> expression MINUS expression .)
    COMMA           reduce using rule 85 (binaryExpression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 85 (binaryExpression -> expression MINUS expression .)
    CBRACKETS       reduce using rule 85 (binaryExpression -> expression MINUS expression .)
    CPARENTHESIS    reduce using rule 85 (binaryExpression -> expression MINUS expression .)
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103

  ! MULTIPLICATION  [ reduce using rule 85 (binaryExpression -> expression MINUS expression .) ]
  ! DIVISION        [ reduce using rule 85 (binaryExpression -> expression MINUS expression .) ]
  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! LESSER          [ shift and go to state 97 ]
  ! GREATER         [ shift and go to state 98 ]
  ! EQUALITY        [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]


state 136

    (86) binaryExpression -> expression MULTIPLICATION expression .
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression

    OR              reduce using rule 86 (binaryExpression -> expression MULTIPLICATION expression .)
    AND             reduce using rule 86 (binaryExpression -> expression MULTIPLICATION expression .)
    LESSER          reduce using rule 86 (binaryExpression -> expression MULTIPLICATION expression .)
    GREATER         reduce using rule 86 (binaryExpression -> expression MULTIPLICATION expression .)
    EQUALITY        reduce using rule 86 (binaryExpression -> expression MULTIPLICATION expression .)
    PLUS            reduce using rule 86 (binaryExpression -> expression MULTIPLICATION expression .)
    MINUS           reduce using rule 86 (binaryExpression -> expression MULTIPLICATION expression .)
    MULTIPLICATION  reduce using rule 86 (binaryExpression -> expression MULTIPLICATION expression .)
    DIVISION        reduce using rule 86 (binaryExpression -> expression MULTIPLICATION expression .)
    COMMA           reduce using rule 86 (binaryExpression -> expression MULTIPLICATION expression .)
    SEMICOLON       reduce using rule 86 (binaryExpression -> expression MULTIPLICATION expression .)
    CBRACKETS       reduce using rule 86 (binaryExpression -> expression MULTIPLICATION expression .)
    CPARENTHESIS    reduce using rule 86 (binaryExpression -> expression MULTIPLICATION expression .)

  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! LESSER          [ shift and go to state 97 ]
  ! GREATER         [ shift and go to state 98 ]
  ! EQUALITY        [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MULTIPLICATION  [ shift and go to state 102 ]
  ! DIVISION        [ shift and go to state 103 ]


state 137

    (87) binaryExpression -> expression DIVISION expression .
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression

    OR              reduce using rule 87 (binaryExpression -> expression DIVISION expression .)
    AND             reduce using rule 87 (binaryExpression -> expression DIVISION expression .)
    LESSER          reduce using rule 87 (binaryExpression -> expression DIVISION expression .)
    GREATER         reduce using rule 87 (binaryExpression -> expression DIVISION expression .)
    EQUALITY        reduce using rule 87 (binaryExpression -> expression DIVISION expression .)
    PLUS            reduce using rule 87 (binaryExpression -> expression DIVISION expression .)
    MINUS           reduce using rule 87 (binaryExpression -> expression DIVISION expression .)
    MULTIPLICATION  reduce using rule 87 (binaryExpression -> expression DIVISION expression .)
    DIVISION        reduce using rule 87 (binaryExpression -> expression DIVISION expression .)
    COMMA           reduce using rule 87 (binaryExpression -> expression DIVISION expression .)
    SEMICOLON       reduce using rule 87 (binaryExpression -> expression DIVISION expression .)
    CBRACKETS       reduce using rule 87 (binaryExpression -> expression DIVISION expression .)
    CPARENTHESIS    reduce using rule 87 (binaryExpression -> expression DIVISION expression .)

  ! OR              [ shift and go to state 95 ]
  ! AND             [ shift and go to state 96 ]
  ! LESSER          [ shift and go to state 97 ]
  ! GREATER         [ shift and go to state 98 ]
  ! EQUALITY        [ shift and go to state 99 ]
  ! PLUS            [ shift and go to state 100 ]
  ! MINUS           [ shift and go to state 101 ]
  ! MULTIPLICATION  [ shift and go to state 102 ]
  ! DIVISION        [ shift and go to state 103 ]


state 138

    (78) expression -> OPARENTHESIS expression CPARENTHESIS .

    OR              reduce using rule 78 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    AND             reduce using rule 78 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    LESSER          reduce using rule 78 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    GREATER         reduce using rule 78 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    EQUALITY        reduce using rule 78 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    PLUS            reduce using rule 78 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    MINUS           reduce using rule 78 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    MULTIPLICATION  reduce using rule 78 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    DIVISION        reduce using rule 78 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    COMMA           reduce using rule 78 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    SEMICOLON       reduce using rule 78 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    CBRACKETS       reduce using rule 78 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    CPARENTHESIS    reduce using rule 78 (expression -> OPARENTHESIS expression CPARENTHESIS .)


state 139

    (12) declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression . declarationExtra
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression
    (12) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (14) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (16) declarationExtra -> . empty
    (2) empty -> .

    OR              shift and go to state 95
    AND             shift and go to state 96
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    EQUALITY        shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103
    COMMA           shift and go to state 40
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 157
    empty                          shift and go to state 41

state 140

    (9) declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION . expression arrayDeclarationExtra SEMICOLON
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 158
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 141

    (11) declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra . SEMICOLON

    SEMICOLON       shift and go to state 159


state 142

    (13) arrayDeclarationExtra -> COMMA . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra
    (15) arrayDeclarationExtra -> COMMA . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra

    IDENTIFIER      shift and go to state 160


state 143

    (17) arrayDeclarationExtra -> empty .

    SEMICOLON       reduce using rule 17 (arrayDeclarationExtra -> empty .)


state 144

    (19) arrayIndexesExtra -> COMMA expression . arrayIndexesExtra
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression
    (19) arrayIndexesExtra -> . COMMA expression arrayIndexesExtra
    (20) arrayIndexesExtra -> . empty
    (2) empty -> .

    OR              shift and go to state 95
    AND             shift and go to state 96
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    EQUALITY        shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103
    COMMA           shift and go to state 110
    CBRACKETS       reduce using rule 2 (empty -> .)

    arrayIndexesExtra              shift and go to state 161
    empty                          shift and go to state 111

state 145

    (51) display -> DISPLAY OPARENTHESIS singleActual CPARENTHESIS .

    SEMICOLON       reduce using rule 51 (display -> DISPLAY OPARENTHESIS singleActual CPARENTHESIS .)


state 146

    (56) call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .

    SEMICOLON       reduce using rule 56 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    OR              reduce using rule 56 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    AND             reduce using rule 56 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    LESSER          reduce using rule 56 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    GREATER         reduce using rule 56 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    EQUALITY        reduce using rule 56 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    PLUS            reduce using rule 56 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    MINUS           reduce using rule 56 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    MULTIPLICATION  reduce using rule 56 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    DIVISION        reduce using rule 56 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    COMMA           reduce using rule 56 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    CBRACKETS       reduce using rule 56 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    CPARENTHESIS    reduce using rule 56 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)


state 147

    (60) actuals -> expression commaExpressionList .

    CPARENTHESIS    reduce using rule 60 (actuals -> expression commaExpressionList .)


state 148

    (61) commaExpressionList -> COMMA . expression commaExpressionList
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 162
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 149

    (62) commaExpressionList -> empty .

    CPARENTHESIS    reduce using rule 62 (commaExpressionList -> empty .)


state 150

    (55) location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .

    ASSIGNATION     reduce using rule 55 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    OR              reduce using rule 55 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    AND             reduce using rule 55 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    LESSER          reduce using rule 55 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    GREATER         reduce using rule 55 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    EQUALITY        reduce using rule 55 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    PLUS            reduce using rule 55 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    MINUS           reduce using rule 55 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    MULTIPLICATION  reduce using rule 55 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    DIVISION        reduce using rule 55 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    COMMA           reduce using rule 55 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    SEMICOLON       reduce using rule 55 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    CBRACKETS       reduce using rule 55 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    CPARENTHESIS    reduce using rule 55 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)


state 151

    (65) ifStatement -> IF OPARENTHESIS expression CPARENTHESIS . statementPoint elseStatement ENDIF
    (42) statementPoint -> . statementList
    (43) statementList -> . statement statementList
    (44) statementList -> . empty
    (45) statement -> . assign SEMICOLON
    (46) statement -> . display SEMICOLON
    (47) statement -> . call SEMICOLON
    (48) statement -> . return empty
    (49) statement -> . ifStatement empty
    (50) statement -> . whileStatement empty
    (52) statement -> . empty
    (2) empty -> .
    (53) assign -> . location ASSIGNATION expression
    (51) display -> . DISPLAY OPARENTHESIS singleActual CPARENTHESIS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (63) return -> . RETURN expression SEMICOLON
    (64) return -> . RETURN SEMICOLON
    (65) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF
    (68) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    ELSE            reduce using rule 2 (empty -> .)
    ENDIF           reduce using rule 2 (empty -> .)
    DISPLAY         shift and go to state 54
    IDENTIFIER      shift and go to state 55
    RETURN          shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58

  ! DISPLAY         [ reduce using rule 2 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 2 (empty -> .) ]
  ! RETURN          [ reduce using rule 2 (empty -> .) ]
  ! IF              [ reduce using rule 2 (empty -> .) ]
  ! WHILE           [ reduce using rule 2 (empty -> .) ]

    statementPoint                 shift and go to state 163
    statementList                  shift and go to state 44
    statement                      shift and go to state 45
    empty                          shift and go to state 46
    assign                         shift and go to state 47
    display                        shift and go to state 48
    call                           shift and go to state 49
    return                         shift and go to state 50
    ifStatement                    shift and go to state 51
    whileStatement                 shift and go to state 52
    location                       shift and go to state 53

state 152

    (68) whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS . statementPoint ENDWHILE
    (42) statementPoint -> . statementList
    (43) statementList -> . statement statementList
    (44) statementList -> . empty
    (45) statement -> . assign SEMICOLON
    (46) statement -> . display SEMICOLON
    (47) statement -> . call SEMICOLON
    (48) statement -> . return empty
    (49) statement -> . ifStatement empty
    (50) statement -> . whileStatement empty
    (52) statement -> . empty
    (2) empty -> .
    (53) assign -> . location ASSIGNATION expression
    (51) display -> . DISPLAY OPARENTHESIS singleActual CPARENTHESIS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (63) return -> . RETURN expression SEMICOLON
    (64) return -> . RETURN SEMICOLON
    (65) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF
    (68) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    ENDWHILE        reduce using rule 2 (empty -> .)
    DISPLAY         shift and go to state 54
    IDENTIFIER      shift and go to state 55
    RETURN          shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58

  ! DISPLAY         [ reduce using rule 2 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 2 (empty -> .) ]
  ! RETURN          [ reduce using rule 2 (empty -> .) ]
  ! IF              [ reduce using rule 2 (empty -> .) ]
  ! WHILE           [ reduce using rule 2 (empty -> .) ]

    statementPoint                 shift and go to state 164
    statementList                  shift and go to state 44
    statement                      shift and go to state 45
    empty                          shift and go to state 46
    assign                         shift and go to state 47
    display                        shift and go to state 48
    call                           shift and go to state 49
    return                         shift and go to state 50
    ifStatement                    shift and go to state 51
    whileStatement                 shift and go to state 52
    location                       shift and go to state 53

state 153

    (25) block -> DEFINE blockType IDENTIFIER parameters variables statementPoint . ENDDEFINE

    ENDDEFINE       shift and go to state 165


state 154

    (35) parameters -> OPARENTHESIS parameter CPARENTHESIS .

    VARIABLES       reduce using rule 35 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    DISPLAY         reduce using rule 35 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    IDENTIFIER      reduce using rule 35 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    RETURN          reduce using rule 35 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    IF              reduce using rule 35 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    WHILE           reduce using rule 35 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    ENDDEFINE       reduce using rule 35 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)


state 155

    (36) parameter -> variableType IDENTIFIER . parameterExtra
    (39) parameterExtra -> . COMMA variableType IDENTIFIER parameterExtra
    (40) parameterExtra -> . COMMA arrayType IDENTIFIER parameterExtra
    (41) parameterExtra -> . empty
    (2) empty -> .

    COMMA           shift and go to state 167
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    parameterExtra                 shift and go to state 166
    empty                          shift and go to state 168

state 156

    (37) parameter -> arrayType IDENTIFIER . parameterExtra
    (39) parameterExtra -> . COMMA variableType IDENTIFIER parameterExtra
    (40) parameterExtra -> . COMMA arrayType IDENTIFIER parameterExtra
    (41) parameterExtra -> . empty
    (2) empty -> .

    COMMA           shift and go to state 167
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    parameterExtra                 shift and go to state 169
    empty                          shift and go to state 168

state 157

    (12) declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression declarationExtra .

    SEMICOLON       reduce using rule 12 (declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression declarationExtra .)


state 158

    (9) declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression . arrayDeclarationExtra SEMICOLON
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression
    (13) arrayDeclarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra
    (15) arrayDeclarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra
    (17) arrayDeclarationExtra -> . empty
    (2) empty -> .

    OR              shift and go to state 95
    AND             shift and go to state 96
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    EQUALITY        shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103
    COMMA           shift and go to state 142
    SEMICOLON       reduce using rule 2 (empty -> .)

    arrayDeclarationExtra          shift and go to state 170
    empty                          shift and go to state 143

state 159

    (11) declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra SEMICOLON .

    NUMBER          reduce using rule 11 (declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra SEMICOLON .)
    WORDS           reduce using rule 11 (declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra SEMICOLON .)
    LETTER          reduce using rule 11 (declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra SEMICOLON .)
    FLAG            reduce using rule 11 (declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra SEMICOLON .)
    MANYNUMBERS     reduce using rule 11 (declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra SEMICOLON .)
    ENDVARIABLES    reduce using rule 11 (declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra SEMICOLON .)


state 160

    (13) arrayDeclarationExtra -> COMMA IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra
    (15) arrayDeclarationExtra -> COMMA IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra

    OBRACKETS       shift and go to state 171


state 161

    (19) arrayIndexesExtra -> COMMA expression arrayIndexesExtra .

    CBRACKETS       reduce using rule 19 (arrayIndexesExtra -> COMMA expression arrayIndexesExtra .)


state 162

    (61) commaExpressionList -> COMMA expression . commaExpressionList
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression
    (61) commaExpressionList -> . COMMA expression commaExpressionList
    (62) commaExpressionList -> . empty
    (2) empty -> .

    OR              shift and go to state 95
    AND             shift and go to state 96
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    EQUALITY        shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103
    COMMA           shift and go to state 148
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    commaExpressionList            shift and go to state 172
    empty                          shift and go to state 149

state 163

    (65) ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statementPoint . elseStatement ENDIF
    (66) elseStatement -> . ELSE statementPoint
    (67) elseStatement -> . empty
    (2) empty -> .

    ELSE            shift and go to state 174
    ENDIF           reduce using rule 2 (empty -> .)

    elseStatement                  shift and go to state 173
    empty                          shift and go to state 175

state 164

    (68) whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statementPoint . ENDWHILE

    ENDWHILE        shift and go to state 176


state 165

    (25) block -> DEFINE blockType IDENTIFIER parameters variables statementPoint ENDDEFINE .

    DEFINE          reduce using rule 25 (block -> DEFINE blockType IDENTIFIER parameters variables statementPoint ENDDEFINE .)
    ENDBLOCKS       reduce using rule 25 (block -> DEFINE blockType IDENTIFIER parameters variables statementPoint ENDDEFINE .)


state 166

    (36) parameter -> variableType IDENTIFIER parameterExtra .

    CPARENTHESIS    reduce using rule 36 (parameter -> variableType IDENTIFIER parameterExtra .)


state 167

    (39) parameterExtra -> COMMA . variableType IDENTIFIER parameterExtra
    (40) parameterExtra -> COMMA . arrayType IDENTIFIER parameterExtra
    (30) variableType -> . NUMBER
    (31) variableType -> . WORDS
    (32) variableType -> . LETTER
    (33) variableType -> . FLAG
    (34) arrayType -> . MANYNUMBERS

    NUMBER          shift and go to state 16
    WORDS           shift and go to state 17
    LETTER          shift and go to state 18
    FLAG            shift and go to state 19
    MANYNUMBERS     shift and go to state 20

    variableType                   shift and go to state 177
    arrayType                      shift and go to state 178

state 168

    (41) parameterExtra -> empty .

    CPARENTHESIS    reduce using rule 41 (parameterExtra -> empty .)


state 169

    (37) parameter -> arrayType IDENTIFIER parameterExtra .

    CPARENTHESIS    reduce using rule 37 (parameter -> arrayType IDENTIFIER parameterExtra .)


state 170

    (9) declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra . SEMICOLON

    SEMICOLON       shift and go to state 179


state 171

    (13) arrayDeclarationExtra -> COMMA IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra
    (15) arrayDeclarationExtra -> COMMA IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS arrayDeclarationExtra
    (18) arrayIndexes -> . expression arrayIndexesExtra
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    arrayIndexes                   shift and go to state 180
    expression                     shift and go to state 75
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 172

    (61) commaExpressionList -> COMMA expression commaExpressionList .

    CPARENTHESIS    reduce using rule 61 (commaExpressionList -> COMMA expression commaExpressionList .)


state 173

    (65) ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement . ENDIF

    ENDIF           shift and go to state 181


state 174

    (66) elseStatement -> ELSE . statementPoint
    (42) statementPoint -> . statementList
    (43) statementList -> . statement statementList
    (44) statementList -> . empty
    (45) statement -> . assign SEMICOLON
    (46) statement -> . display SEMICOLON
    (47) statement -> . call SEMICOLON
    (48) statement -> . return empty
    (49) statement -> . ifStatement empty
    (50) statement -> . whileStatement empty
    (52) statement -> . empty
    (2) empty -> .
    (53) assign -> . location ASSIGNATION expression
    (51) display -> . DISPLAY OPARENTHESIS singleActual CPARENTHESIS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (63) return -> . RETURN expression SEMICOLON
    (64) return -> . RETURN SEMICOLON
    (65) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF
    (68) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS

  ! shift/reduce conflict for DISPLAY resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    ENDIF           reduce using rule 2 (empty -> .)
    DISPLAY         shift and go to state 54
    IDENTIFIER      shift and go to state 55
    RETURN          shift and go to state 56
    IF              shift and go to state 57
    WHILE           shift and go to state 58

  ! DISPLAY         [ reduce using rule 2 (empty -> .) ]
  ! IDENTIFIER      [ reduce using rule 2 (empty -> .) ]
  ! RETURN          [ reduce using rule 2 (empty -> .) ]
  ! IF              [ reduce using rule 2 (empty -> .) ]
  ! WHILE           [ reduce using rule 2 (empty -> .) ]

    statementPoint                 shift and go to state 182
    statementList                  shift and go to state 44
    statement                      shift and go to state 45
    empty                          shift and go to state 46
    assign                         shift and go to state 47
    display                        shift and go to state 48
    call                           shift and go to state 49
    return                         shift and go to state 50
    ifStatement                    shift and go to state 51
    whileStatement                 shift and go to state 52
    location                       shift and go to state 53

state 175

    (67) elseStatement -> empty .

    ENDIF           reduce using rule 67 (elseStatement -> empty .)


state 176

    (68) whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE .

    DISPLAY         reduce using rule 68 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE .)
    IDENTIFIER      reduce using rule 68 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE .)
    RETURN          reduce using rule 68 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE .)
    IF              reduce using rule 68 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE .)
    WHILE           reduce using rule 68 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE .)
    FINISH          reduce using rule 68 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE .)
    ENDDEFINE       reduce using rule 68 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE .)
    ELSE            reduce using rule 68 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE .)
    ENDIF           reduce using rule 68 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE .)
    ENDWHILE        reduce using rule 68 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statementPoint ENDWHILE .)


state 177

    (39) parameterExtra -> COMMA variableType . IDENTIFIER parameterExtra

    IDENTIFIER      shift and go to state 183


state 178

    (40) parameterExtra -> COMMA arrayType . IDENTIFIER parameterExtra

    IDENTIFIER      shift and go to state 184


state 179

    (9) declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra SEMICOLON .

    NUMBER          reduce using rule 9 (declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra SEMICOLON .)
    WORDS           reduce using rule 9 (declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra SEMICOLON .)
    LETTER          reduce using rule 9 (declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra SEMICOLON .)
    FLAG            reduce using rule 9 (declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra SEMICOLON .)
    MANYNUMBERS     reduce using rule 9 (declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra SEMICOLON .)
    ENDVARIABLES    reduce using rule 9 (declaration -> arrayType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra SEMICOLON .)


state 180

    (13) arrayDeclarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS ASSIGNATION expression arrayDeclarationExtra
    (15) arrayDeclarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS arrayDeclarationExtra

    CBRACKETS       shift and go to state 185


state 181

    (65) ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF .

    DISPLAY         reduce using rule 65 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF .)
    IDENTIFIER      reduce using rule 65 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF .)
    RETURN          reduce using rule 65 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF .)
    IF              reduce using rule 65 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF .)
    WHILE           reduce using rule 65 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF .)
    FINISH          reduce using rule 65 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF .)
    ENDDEFINE       reduce using rule 65 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF .)
    ELSE            reduce using rule 65 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF .)
    ENDIF           reduce using rule 65 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF .)
    ENDWHILE        reduce using rule 65 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statementPoint elseStatement ENDIF .)


state 182

    (66) elseStatement -> ELSE statementPoint .

    ENDIF           reduce using rule 66 (elseStatement -> ELSE statementPoint .)


state 183

    (39) parameterExtra -> COMMA variableType IDENTIFIER . parameterExtra
    (39) parameterExtra -> . COMMA variableType IDENTIFIER parameterExtra
    (40) parameterExtra -> . COMMA arrayType IDENTIFIER parameterExtra
    (41) parameterExtra -> . empty
    (2) empty -> .

    COMMA           shift and go to state 167
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    parameterExtra                 shift and go to state 186
    empty                          shift and go to state 168

state 184

    (40) parameterExtra -> COMMA arrayType IDENTIFIER . parameterExtra
    (39) parameterExtra -> . COMMA variableType IDENTIFIER parameterExtra
    (40) parameterExtra -> . COMMA arrayType IDENTIFIER parameterExtra
    (41) parameterExtra -> . empty
    (2) empty -> .

    COMMA           shift and go to state 167
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    parameterExtra                 shift and go to state 187
    empty                          shift and go to state 168

state 185

    (13) arrayDeclarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS . ASSIGNATION expression arrayDeclarationExtra
    (15) arrayDeclarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS . arrayDeclarationExtra
    (13) arrayDeclarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra
    (15) arrayDeclarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra
    (17) arrayDeclarationExtra -> . empty
    (2) empty -> .

    ASSIGNATION     shift and go to state 188
    COMMA           shift and go to state 142
    SEMICOLON       reduce using rule 2 (empty -> .)

    arrayDeclarationExtra          shift and go to state 189
    empty                          shift and go to state 143

state 186

    (39) parameterExtra -> COMMA variableType IDENTIFIER parameterExtra .

    CPARENTHESIS    reduce using rule 39 (parameterExtra -> COMMA variableType IDENTIFIER parameterExtra .)


state 187

    (40) parameterExtra -> COMMA arrayType IDENTIFIER parameterExtra .

    CPARENTHESIS    reduce using rule 40 (parameterExtra -> COMMA arrayType IDENTIFIER parameterExtra .)


state 188

    (13) arrayDeclarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION . expression arrayDeclarationExtra
    (70) expression -> . location
    (71) expression -> . call
    (72) expression -> . unaryExpression
    (73) expression -> . binaryExpression
    (74) expression -> . FLAGVALUE
    (75) expression -> . NUMBERVALUE
    (76) expression -> . WORDSVALUE
    (77) expression -> . LETTERVALUE
    (78) expression -> . OPARENTHESIS expression CPARENTHESIS
    (54) location -> . IDENTIFIER
    (55) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (56) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (57) call -> . IDENTIFIER OPARENTHESIS CPARENTHESIS
    (88) unaryExpression -> . NOT expression
    (79) binaryExpression -> . expression OR expression
    (80) binaryExpression -> . expression AND expression
    (81) binaryExpression -> . expression LESSER expression
    (82) binaryExpression -> . expression GREATER expression
    (83) binaryExpression -> . expression EQUALITY expression
    (84) binaryExpression -> . expression PLUS expression
    (85) binaryExpression -> . expression MINUS expression
    (86) binaryExpression -> . expression MULTIPLICATION expression
    (87) binaryExpression -> . expression DIVISION expression

    FLAGVALUE       shift and go to state 66
    NUMBERVALUE     shift and go to state 67
    WORDSVALUE      shift and go to state 68
    LETTERVALUE     shift and go to state 69
    OPARENTHESIS    shift and go to state 70
    IDENTIFIER      shift and go to state 60
    NOT             shift and go to state 71

    expression                     shift and go to state 190
    location                       shift and go to state 62
    call                           shift and go to state 63
    unaryExpression                shift and go to state 64
    binaryExpression               shift and go to state 65

state 189

    (15) arrayDeclarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra .

    SEMICOLON       reduce using rule 15 (arrayDeclarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra .)


state 190

    (13) arrayDeclarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression . arrayDeclarationExtra
    (79) binaryExpression -> expression . OR expression
    (80) binaryExpression -> expression . AND expression
    (81) binaryExpression -> expression . LESSER expression
    (82) binaryExpression -> expression . GREATER expression
    (83) binaryExpression -> expression . EQUALITY expression
    (84) binaryExpression -> expression . PLUS expression
    (85) binaryExpression -> expression . MINUS expression
    (86) binaryExpression -> expression . MULTIPLICATION expression
    (87) binaryExpression -> expression . DIVISION expression
    (13) arrayDeclarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra
    (15) arrayDeclarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS arrayDeclarationExtra
    (17) arrayDeclarationExtra -> . empty
    (2) empty -> .

    OR              shift and go to state 95
    AND             shift and go to state 96
    LESSER          shift and go to state 97
    GREATER         shift and go to state 98
    EQUALITY        shift and go to state 99
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    MULTIPLICATION  shift and go to state 102
    DIVISION        shift and go to state 103
    COMMA           shift and go to state 142
    SEMICOLON       reduce using rule 2 (empty -> .)

    arrayDeclarationExtra          shift and go to state 191
    empty                          shift and go to state 143

state 191

    (13) arrayDeclarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra .

    SEMICOLON       reduce using rule 13 (arrayDeclarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression arrayDeclarationExtra .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DEFINE in state 9 resolved as shift
WARNING: shift/reduce conflict for DEFINE in state 24 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 31 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 31 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 31 resolved as shift
WARNING: shift/reduce conflict for IF in state 31 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 31 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 45 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 45 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 45 resolved as shift
WARNING: shift/reduce conflict for IF in state 45 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 45 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 123 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 123 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 123 resolved as shift
WARNING: shift/reduce conflict for IF in state 123 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 123 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 151 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 151 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 151 resolved as shift
WARNING: shift/reduce conflict for IF in state 151 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 151 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 152 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 152 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 152 resolved as shift
WARNING: shift/reduce conflict for IF in state 152 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 152 resolved as shift
WARNING: shift/reduce conflict for DISPLAY in state 174 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 174 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 174 resolved as shift
WARNING: shift/reduce conflict for IF in state 174 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 174 resolved as shift
WARNING: reduce/reduce conflict in state 25 resolved using rule (blockList -> empty)
WARNING: rejected rule (block -> empty) in state 25
WARNING: reduce/reduce conflict in state 46 resolved using rule (statementList -> empty)
WARNING: rejected rule (statement -> empty) in state 46
