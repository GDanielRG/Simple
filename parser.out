Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

<<<<<<< HEAD
    NOT
    FLAG
    DISPLAY
    TRUE
    FALSE
=======
    DISPLAY
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    NEWLINE

Grammar

Rule 0     S' -> simple
Rule 1     simple -> PROGRAM program ENDPROGRAM
Rule 2     empty -> <empty>
Rule 3     program -> variables blocks main
Rule 4     variables -> VARIABLES declaration ENDVARIABLES
Rule 5     variables -> empty
Rule 6     declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
Rule 7     declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
Rule 8     declaration -> variableType IDENTIFIER declarationExtra SEMICOLON declaration
Rule 9     declaration -> empty
Rule 10    declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression declarationExtra
Rule 11    declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
Rule 12    declarationExtra -> COMMA IDENTIFIER declarationExtra
Rule 13    declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
Rule 14    declarationExtra -> empty
Rule 15    arrayIndexes -> expression arrayIndexesExtra
Rule 16    arrayIndexesExtra -> COMMA expression arrayIndexesExtra
Rule 17    arrayIndexesExtra -> empty
Rule 18    blocks -> BLOCKS block ENDBLOCKS
Rule 19    blocks -> empty
Rule 20    block -> DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE block
Rule 21    block -> empty
Rule 22    blockType -> PROCEDURE
Rule 23    blockType -> variableType
Rule 24    variableType -> NUMBER
Rule 25    variableType -> WORDS
Rule 26    variableType -> LETTER
<<<<<<< HEAD
Rule 27    parameters -> OPARENTHESIS parameter CPARENTHESIS
Rule 28    parameter -> variableType IDENTIFIER parameterExtra
Rule 29    parameter -> empty
Rule 30    parameterExtra -> COMMA variableType IDENTIFIER parameterExtra
Rule 31    parameterExtra -> empty
Rule 32    statement -> assign SEMICOLON statement
Rule 33    statement -> call SEMICOLON statement
Rule 34    statement -> return empty statement
Rule 35    statement -> ifStatement empty statement
Rule 36    statement -> whileStatement empty statement
Rule 37    statement -> empty
Rule 38    assign -> location ASSIGNATION expression
Rule 39    location -> IDENTIFIER
Rule 40    location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
Rule 41    location -> call
Rule 42    call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
Rule 43    actuals -> expression commaExpressionList
Rule 44    commaExpressionList -> commaExpression commaExpressionList
Rule 45    commaExpressionList -> empty
Rule 46    commaExpression -> COMMA expression
Rule 47    return -> RETURN returnExpression SEMICOLON
Rule 48    returnExpression -> expression
Rule 49    returnExpression -> empty
Rule 50    ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
Rule 51    elseStatement -> ELSE statement
Rule 52    elseStatement -> empty
Rule 53    whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
Rule 54    main -> START variables statement FINISH
Rule 55    expression -> location
Rule 56    expression -> binaryExpression
Rule 57    expression -> FLAGVALUE
Rule 58    expression -> NUMBERVALUE
Rule 59    expression -> WORDSVALUE
Rule 60    expression -> LETTERVALUE
Rule 61    expression -> OPARENTHESIS expression CPARENTHESIS
Rule 62    binaryExpression -> expression OR expression
Rule 63    binaryExpression -> expression AND expression
Rule 64    binaryExpression -> expression LESSER expression
Rule 65    binaryExpression -> expression GREATER expression
Rule 66    binaryExpression -> expression EQUALITY expression
Rule 67    binaryExpression -> expression PLUS expression
Rule 68    binaryExpression -> expression MINUS expression
Rule 69    binaryExpression -> expression MULTIPLICATION expression
Rule 70    binaryExpression -> expression DIVISION expression
Rule 71    binaryExpression -> expression MODULUS expression

Terminals, with rules where they appear

AND                  : 63
ASSIGNATION          : 6 7 10 11 38
BLOCKS               : 18
CBRACKETS            : 7 11 13 40
COMMA                : 10 11 12 13 16 30 46
CPARENTHESIS         : 27 42 50 53 61
DEFINE               : 20
DISPLAY              : 
DIVISION             : 70
ELSE                 : 51
=======
Rule 27    variableType -> FLAG
Rule 28    parameters -> OPARENTHESIS parameter CPARENTHESIS
Rule 29    parameter -> variableType IDENTIFIER parameterExtra
Rule 30    parameter -> empty
Rule 31    parameterExtra -> COMMA variableType IDENTIFIER parameterExtra
Rule 32    parameterExtra -> empty
Rule 33    statement -> assign SEMICOLON statement
Rule 34    statement -> call SEMICOLON statement
Rule 35    statement -> return empty statement
Rule 36    statement -> ifStatement empty statement
Rule 37    statement -> whileStatement empty statement
Rule 38    statement -> empty
Rule 39    assign -> location ASSIGNATION expression
Rule 40    location -> IDENTIFIER
Rule 41    location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
Rule 42    location -> call
Rule 43    call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
Rule 44    actuals -> expression commaExpressionList
Rule 45    commaExpressionList -> commaExpression commaExpressionList
Rule 46    commaExpressionList -> empty
Rule 47    commaExpression -> COMMA expression
Rule 48    return -> RETURN returnExpression SEMICOLON
Rule 49    returnExpression -> expression
Rule 50    returnExpression -> empty
Rule 51    ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
Rule 52    elseStatement -> ELSE statement
Rule 53    elseStatement -> empty
Rule 54    whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
Rule 55    main -> START variables statement FINISH
Rule 56    expression -> location
Rule 57    expression -> unaryExpression
Rule 58    expression -> binaryExpression
Rule 59    expression -> NONZEROINT
Rule 60    expression -> FLAGVALUE
Rule 61    expression -> NUMBERVALUE
Rule 62    expression -> WORDSVALUE
Rule 63    expression -> LETTERVALUE
Rule 64    expression -> OPARENTHESIS expression CPARENTHESIS
Rule 65    binaryExpression -> expression OR expression
Rule 66    binaryExpression -> expression AND expression
Rule 67    binaryExpression -> expression LESSER expression
Rule 68    binaryExpression -> expression GREATER expression
Rule 69    binaryExpression -> expression EQUALITY expression
Rule 70    binaryExpression -> expression PLUS expression
Rule 71    binaryExpression -> expression MINUS expression
Rule 72    binaryExpression -> expression MULTIPLICATION expression
Rule 73    binaryExpression -> expression DIVISION expression
Rule 74    binaryExpression -> expression MODULUS expression
Rule 75    unaryExpression -> NOT expression

Terminals, with rules where they appear

AND                  : 66
ASSIGNATION          : 6 7 10 11 39
BLOCKS               : 18
CBRACKETS            : 7 11 13 41
COMMA                : 10 11 12 13 16 31 47
CPARENTHESIS         : 28 43 51 54 64
DEFINE               : 20
DISPLAY              : 
DIVISION             : 73
ELSE                 : 52
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
ENDBLOCKS            : 18
ENDDEFINE            : 20
ENDIF                : 51
ENDPROGRAM           : 1
ENDVARIABLES         : 4
<<<<<<< HEAD
ENDWHILE             : 53
EQUALITY             : 66
FALSE                : 
FINISH               : 54
FLAG                 : 
FLAGVALUE            : 57
GREATER              : 65
IDENTIFIER           : 6 7 8 10 11 12 13 20 28 30 39 40 42
IF                   : 50
LESSER               : 64
LETTER               : 26
LETTERVALUE          : 60
MINUS                : 68
MODULUS              : 71
MULTIPLICATION       : 69
NEWLINE              : 
NOT                  : 
NUMBER               : 24
NUMBERVALUE          : 58
OBRACKETS            : 7 11 13 40
OPARENTHESIS         : 27 42 50 53 61
OR                   : 62
PLUS                 : 67
=======
ENDWHILE             : 54
EQUALITY             : 69
FINISH               : 55
FLAG                 : 27
FLAGVALUE            : 60
GREATER              : 68
IDENTIFIER           : 6 7 8 10 11 12 13 20 29 31 40 41 43
IF                   : 51
LESSER               : 67
LETTER               : 26
LETTERVALUE          : 63
MINUS                : 71
MODULUS              : 74
MULTIPLICATION       : 72
NEWLINE              : 
NONZEROINT           : 59
NOT                  : 75
NUMBER               : 24
NUMBERVALUE          : 61
OBRACKETS            : 7 11 13 41
OPARENTHESIS         : 28 43 51 54 64
OR                   : 65
PLUS                 : 70
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
PROCEDURE            : 22
PROGRAM              : 1
RETURN               : 48
SEMICOLON            : 6 7 8 33 34 48
START                : 55
VARIABLES            : 4
WHILE                : 54
WORDS                : 25
<<<<<<< HEAD
WORDSVALUE           : 59
=======
WORDSVALUE           : 62
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
error                : 

Nonterminals, with rules where they appear

actuals              : 43
arrayIndexes         : 7 11 13 41
arrayIndexesExtra    : 15 16
assign               : 33
binaryExpression     : 58
block                : 18 20
blockType            : 20
blocks               : 3
call                 : 34 42
commaExpression      : 45
commaExpressionList  : 44 45
declaration          : 4 6 7 8
declarationExtra     : 6 7 8 10 11 12 13
<<<<<<< HEAD
elseStatement        : 50
empty                : 5 9 14 17 19 21 29 31 34 35 36 37 45 49 52
expression           : 6 7 10 11 15 16 38 43 46 48 50 53 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71
ifStatement          : 35
location             : 38 55
=======
elseStatement        : 51
empty                : 5 9 14 17 19 21 30 32 35 36 37 38 46 50 53
expression           : 6 7 10 11 15 16 39 44 47 49 51 54 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73 73 74 74 75
ifStatement          : 36
location             : 39 56
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
main                 : 3
parameter            : 28
parameterExtra       : 29 31
parameters           : 20
program              : 1
return               : 35
returnExpression     : 48
simple               : 0
statement            : 20 33 34 35 36 37 51 52 54 55
unaryExpression      : 57
variableType         : 6 7 8 23 29 31
variables            : 3 20 55
whileStatement       : 37

Parsing method: LALR

state 0

    (0) S' -> . simple
    (1) simple -> . PROGRAM program ENDPROGRAM

    PROGRAM         shift and go to state 2

    simple                         shift and go to state 1

state 1

    (0) S' -> simple .



state 2

    (1) simple -> PROGRAM . program ENDPROGRAM
    (3) program -> . variables blocks main
    (4) variables -> . VARIABLES declaration ENDVARIABLES
    (5) variables -> . empty
    (2) empty -> .

    VARIABLES       shift and go to state 5
    BLOCKS          reduce using rule 2 (empty -> .)
    START           reduce using rule 2 (empty -> .)

    program                        shift and go to state 3
    variables                      shift and go to state 4
    empty                          shift and go to state 6

state 3

    (1) simple -> PROGRAM program . ENDPROGRAM

    ENDPROGRAM      shift and go to state 7


state 4

    (3) program -> variables . blocks main
    (18) blocks -> . BLOCKS block ENDBLOCKS
    (19) blocks -> . empty
    (2) empty -> .

    BLOCKS          shift and go to state 9
    START           reduce using rule 2 (empty -> .)

    blocks                         shift and go to state 8
    empty                          shift and go to state 10

state 5

    (4) variables -> VARIABLES . declaration ENDVARIABLES
    (6) declaration -> . variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> . variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> . variableType IDENTIFIER declarationExtra SEMICOLON declaration
    (9) declaration -> . empty
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (27) variableType -> . FLAG
    (2) empty -> .

<<<<<<< HEAD
    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16
=======
    NUMBER          shift and go to state 13
    WORDS           shift and go to state 11
    LETTER          shift and go to state 15
    FLAG            shift and go to state 14
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    ENDVARIABLES    reduce using rule 2 (empty -> .)

    declaration                    shift and go to state 11
    variableType                   shift and go to state 12
<<<<<<< HEAD
    empty                          shift and go to state 13
=======
    declaration                    shift and go to state 16
    empty                          shift and go to state 17
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 6

    (5) variables -> empty .

    IDENTIFIER      reduce using rule 5 (variables -> empty .)
    RETURN          reduce using rule 5 (variables -> empty .)
    IF              reduce using rule 5 (variables -> empty .)
    WHILE           reduce using rule 5 (variables -> empty .)
    FINISH          reduce using rule 5 (variables -> empty .)
    BLOCKS          reduce using rule 5 (variables -> empty .)
    START           reduce using rule 5 (variables -> empty .)
    ENDDEFINE       reduce using rule 5 (variables -> empty .)


state 7

    (1) simple -> PROGRAM program ENDPROGRAM .

<<<<<<< HEAD
    $end            reduce using rule 1 (simple -> PROGRAM program ENDPROGRAM .)

=======
    DEFINE          shift and go to state 20
    ENDBLOCKS       reduce using rule 2 (empty -> .)

    block                          shift and go to state 19
    empty                          shift and go to state 18
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 8

    (3) program -> variables blocks . main
    (54) main -> . START variables statement FINISH

    START           shift and go to state 18

    main                           shift and go to state 17

state 9

<<<<<<< HEAD
    (18) blocks -> BLOCKS . block ENDBLOCKS
    (20) block -> . DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE block
    (21) block -> . empty
    (2) empty -> .

    DEFINE          shift and go to state 20
    ENDBLOCKS       reduce using rule 2 (empty -> .)

    block                          shift and go to state 19
    empty                          shift and go to state 21
=======
    (3) program -> variables blocks . main
    (55) main -> . START variables statement FINISH

    START           shift and go to state 21

    main                           shift and go to state 22
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 10

    (19) blocks -> empty .

    START           reduce using rule 19 (blocks -> empty .)


state 11

    (4) variables -> VARIABLES declaration . ENDVARIABLES

    ENDVARIABLES    shift and go to state 22


state 12

    (6) declaration -> variableType . IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> variableType . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> variableType . IDENTIFIER declarationExtra SEMICOLON declaration

    IDENTIFIER      shift and go to state 23


state 13

    (9) declaration -> empty .

    ENDVARIABLES    reduce using rule 9 (declaration -> empty .)


state 14

<<<<<<< HEAD
    (24) variableType -> NUMBER .
=======
    (27) variableType -> FLAG .

    IDENTIFIER      reduce using rule 27 (variableType -> FLAG .)


state 15

    (26) variableType -> LETTER .
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    IDENTIFIER      reduce using rule 24 (variableType -> NUMBER .)


state 16

    (25) variableType -> WORDS .

<<<<<<< HEAD
    IDENTIFIER      reduce using rule 25 (variableType -> WORDS .)
=======
    ENDVARIABLES    shift and go to state 24
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 17

    (26) variableType -> LETTER .

    IDENTIFIER      reduce using rule 26 (variableType -> LETTER .)


state 18

    (3) program -> variables blocks main .

    ENDPROGRAM      reduce using rule 3 (program -> variables blocks main .)


state 19

    (54) main -> START . variables statement FINISH
    (4) variables -> . VARIABLES declaration ENDVARIABLES
    (5) variables -> . empty
    (2) empty -> .

<<<<<<< HEAD
    VARIABLES       shift and go to state 5
    IDENTIFIER      reduce using rule 2 (empty -> .)
    RETURN          reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    WHILE           reduce using rule 2 (empty -> .)
    FINISH          reduce using rule 2 (empty -> .)
=======
    ENDBLOCKS       shift and go to state 25
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    variables                      shift and go to state 24
    empty                          shift and go to state 6

state 20

    (18) blocks -> BLOCKS block . ENDBLOCKS

    ENDBLOCKS       shift and go to state 25


state 20

    (20) block -> DEFINE . blockType IDENTIFIER parameters variables statement ENDDEFINE block
    (22) blockType -> . PROCEDURE
    (23) blockType -> . variableType
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (27) variableType -> . FLAG

    PROCEDURE       shift and go to state 27
<<<<<<< HEAD
    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16

    blockType                      shift and go to state 26
    variableType                   shift and go to state 28

state 21

    (21) block -> empty .
=======
    NUMBER          shift and go to state 13
    WORDS           shift and go to state 11
    LETTER          shift and go to state 15
    FLAG            shift and go to state 14

    variableType                   shift and go to state 26
    blockType                      shift and go to state 28

state 21

    (55) main -> START . variables statement FINISH
    (4) variables -> . VARIABLES declaration ENDVARIABLES
    (5) variables -> . empty
    (2) empty -> .
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    ENDBLOCKS       reduce using rule 21 (block -> empty .)

<<<<<<< HEAD
=======
    variables                      shift and go to state 29
    empty                          shift and go to state 6
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 22

    (4) variables -> VARIABLES declaration ENDVARIABLES .

    BLOCKS          reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    START           reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    IDENTIFIER      reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    RETURN          reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    IF              reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    WHILE           reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    FINISH          reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    ENDDEFINE       reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)


state 23

    (6) declaration -> variableType IDENTIFIER . ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> variableType IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> variableType IDENTIFIER . declarationExtra SEMICOLON declaration
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

<<<<<<< HEAD
    ASSIGNATION     shift and go to state 29
=======
    ASSIGNATION     shift and go to state 30
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    OBRACKETS       shift and go to state 31
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

<<<<<<< HEAD
    declarationExtra               shift and go to state 30
    empty                          shift and go to state 33

state 24
=======
    declarationExtra               shift and go to state 33
    empty                          shift and go to state 34

state 24

    (4) variables -> VARIABLES declaration ENDVARIABLES .

    IDENTIFIER      reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    RETURN          reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    IF              reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    WHILE           reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    FINISH          reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    BLOCKS          reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    START           reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    ENDDEFINE       reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)


state 25
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (54) main -> START variables . statement FINISH
    (32) statement -> . assign SEMICOLON statement
    (33) statement -> . call SEMICOLON statement
    (34) statement -> . return empty statement
    (35) statement -> . ifStatement empty statement
    (36) statement -> . whileStatement empty statement
    (37) statement -> . empty
    (38) assign -> . location ASSIGNATION expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (47) return -> . RETURN returnExpression SEMICOLON
    (50) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
    (53) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
    (2) empty -> .
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call

    IDENTIFIER      shift and go to state 42
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    FINISH          reduce using rule 2 (empty -> .)

    statement                      shift and go to state 34
    assign                         shift and go to state 35
    call                           shift and go to state 36
    return                         shift and go to state 37
    empty                          shift and go to state 38
    ifStatement                    shift and go to state 39
    whileStatement                 shift and go to state 40
    location                       shift and go to state 41

state 26

    (18) blocks -> BLOCKS block ENDBLOCKS .

    START           reduce using rule 18 (blocks -> BLOCKS block ENDBLOCKS .)


state 27

    (20) block -> DEFINE blockType . IDENTIFIER parameters variables statement ENDDEFINE block

    IDENTIFIER      shift and go to state 46


state 28

    (22) blockType -> PROCEDURE .

<<<<<<< HEAD
    IDENTIFIER      reduce using rule 22 (blockType -> PROCEDURE .)
=======
    IDENTIFIER      shift and go to state 35
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 29

<<<<<<< HEAD
    (23) blockType -> variableType .

    IDENTIFIER      reduce using rule 23 (blockType -> variableType .)

=======
    (55) main -> START variables . statement FINISH
    (33) statement -> . assign SEMICOLON statement
    (34) statement -> . call SEMICOLON statement
    (35) statement -> . return empty statement
    (36) statement -> . ifStatement empty statement
    (37) statement -> . whileStatement empty statement
    (38) statement -> . empty
    (39) assign -> . location ASSIGNATION expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (48) return -> . RETURN returnExpression SEMICOLON
    (51) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
    (54) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
    (2) empty -> .
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call

    IDENTIFIER      shift and go to state 41
    RETURN          shift and go to state 36
    IF              shift and go to state 46
    WHILE           shift and go to state 37
    FINISH          reduce using rule 2 (empty -> .)

    return                         shift and go to state 43
    whileStatement                 shift and go to state 45
    call                           shift and go to state 38
    location                       shift and go to state 39
    statement                      shift and go to state 40
    assign                         shift and go to state 47
    empty                          shift and go to state 42
    ifStatement                    shift and go to state 44
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 30

    (6) declaration -> variableType IDENTIFIER ASSIGNATION . expression declarationExtra SEMICOLON declaration
<<<<<<< HEAD
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    expression                     shift and go to state 48
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56
=======
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    expression                     shift and go to state 60
    binaryExpression               shift and go to state 54
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 31

    (8) declaration -> variableType IDENTIFIER declarationExtra . SEMICOLON declaration

    SEMICOLON       shift and go to state 57


state 31

    (7) declaration -> variableType IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (15) arrayIndexes -> . expression arrayIndexesExtra
<<<<<<< HEAD
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    arrayIndexes                   shift and go to state 58
    expression                     shift and go to state 59
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56
=======
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    call                           shift and go to state 53
    arrayIndexes                   shift and go to state 61
    location                       shift and go to state 56
    unaryExpression                shift and go to state 57
    expression                     shift and go to state 62
    binaryExpression               shift and go to state 54
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 32

    (10) declarationExtra -> COMMA . IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> COMMA . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> COMMA . IDENTIFIER declarationExtra
    (13) declarationExtra -> COMMA . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra

    IDENTIFIER      shift and go to state 63


state 33
<<<<<<< HEAD
=======

    (8) declaration -> variableType IDENTIFIER declarationExtra . SEMICOLON declaration

    SEMICOLON       shift and go to state 64


state 34
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (14) declarationExtra -> empty .

    SEMICOLON       reduce using rule 14 (declarationExtra -> empty .)


state 35

<<<<<<< HEAD
    (54) main -> START variables statement . FINISH

    FINISH          shift and go to state 61

=======
    (20) block -> DEFINE blockType IDENTIFIER . parameters variables statement ENDDEFINE block
    (28) parameters -> . OPARENTHESIS parameter CPARENTHESIS

    OPARENTHESIS    shift and go to state 66

    parameters                     shift and go to state 65
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 36

<<<<<<< HEAD
    (32) statement -> assign . SEMICOLON statement

    SEMICOLON       shift and go to state 62


state 36

    (33) statement -> call . SEMICOLON statement
    (41) location -> call .

    SEMICOLON       shift and go to state 63
    ASSIGNATION     reduce using rule 41 (location -> call .)


state 37

    (34) statement -> return . empty statement
    (2) empty -> .

    IDENTIFIER      reduce using rule 2 (empty -> .)
    RETURN          reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    WHILE           reduce using rule 2 (empty -> .)
    FINISH          reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)
    ELSE            reduce using rule 2 (empty -> .)
    ENDIF           reduce using rule 2 (empty -> .)
    ENDWHILE        reduce using rule 2 (empty -> .)
=======
    (48) return -> RETURN . returnExpression SEMICOLON
    (49) returnExpression -> . expression
    (50) returnExpression -> . empty
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (2) empty -> .
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    SEMICOLON       reduce using rule 2 (empty -> .)
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    returnExpression               shift and go to state 67
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 69
    empty                          shift and go to state 68

state 37

    (54) whileStatement -> WHILE . OPARENTHESIS expression CPARENTHESIS statement ENDWHILE

    OPARENTHESIS    shift and go to state 70


state 38

    (34) statement -> call . SEMICOLON statement
    (42) location -> call .

    SEMICOLON       shift and go to state 71
    ASSIGNATION     reduce using rule 42 (location -> call .)


state 39

    (39) assign -> location . ASSIGNATION expression

    ASSIGNATION     shift and go to state 72


state 40

    (55) main -> START variables statement . FINISH

    FINISH          shift and go to state 73
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    empty                          shift and go to state 64

state 38

    (43) call -> IDENTIFIER . OPARENTHESIS actuals CPARENTHESIS
    (40) location -> IDENTIFIER .
    (41) location -> IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS

<<<<<<< HEAD
    FINISH          reduce using rule 37 (statement -> empty .)
    ENDDEFINE       reduce using rule 37 (statement -> empty .)
    ELSE            reduce using rule 37 (statement -> empty .)
    ENDIF           reduce using rule 37 (statement -> empty .)
    ENDWHILE        reduce using rule 37 (statement -> empty .)
=======
    OPARENTHESIS    shift and go to state 75
    ASSIGNATION     reduce using rule 40 (location -> IDENTIFIER .)
    OBRACKETS       shift and go to state 74
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 39

<<<<<<< HEAD
    (35) statement -> ifStatement . empty statement
=======
    (38) statement -> empty .

    ENDWHILE        reduce using rule 38 (statement -> empty .)
    FINISH          reduce using rule 38 (statement -> empty .)
    ENDDEFINE       reduce using rule 38 (statement -> empty .)
    ELSE            reduce using rule 38 (statement -> empty .)
    ENDIF           reduce using rule 38 (statement -> empty .)


state 43

    (35) statement -> return . empty statement
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    (2) empty -> .

    IDENTIFIER      reduce using rule 2 (empty -> .)
    RETURN          reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    WHILE           reduce using rule 2 (empty -> .)
    FINISH          reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)
    ELSE            reduce using rule 2 (empty -> .)
    ENDIF           reduce using rule 2 (empty -> .)
    ENDWHILE        reduce using rule 2 (empty -> .)

<<<<<<< HEAD
    empty                          shift and go to state 65

state 40

    (36) statement -> whileStatement . empty statement
=======
    empty                          shift and go to state 76

state 44

    (36) statement -> ifStatement . empty statement
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    (2) empty -> .

    IDENTIFIER      reduce using rule 2 (empty -> .)
    RETURN          reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    WHILE           reduce using rule 2 (empty -> .)
    FINISH          reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)
    ELSE            reduce using rule 2 (empty -> .)
    ENDIF           reduce using rule 2 (empty -> .)
    ENDWHILE        reduce using rule 2 (empty -> .)

<<<<<<< HEAD
    empty                          shift and go to state 66

state 41

    (38) assign -> location . ASSIGNATION expression

    ASSIGNATION     shift and go to state 67
=======
    empty                          shift and go to state 77

state 45

    (37) statement -> whileStatement . empty statement
    (2) empty -> .

    IDENTIFIER      reduce using rule 2 (empty -> .)
    RETURN          reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    WHILE           reduce using rule 2 (empty -> .)
    FINISH          reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)
    ENDWHILE        reduce using rule 2 (empty -> .)
    ELSE            reduce using rule 2 (empty -> .)
    ENDIF           reduce using rule 2 (empty -> .)

    empty                          shift and go to state 78

state 46

    (51) ifStatement -> IF . OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF

    OPARENTHESIS    shift and go to state 79


state 47

    (33) statement -> assign . SEMICOLON statement

    SEMICOLON       shift and go to state 80


state 48

    (61) expression -> NUMBERVALUE .

    OR              reduce using rule 61 (expression -> NUMBERVALUE .)
    AND             reduce using rule 61 (expression -> NUMBERVALUE .)
    LESSER          reduce using rule 61 (expression -> NUMBERVALUE .)
    GREATER         reduce using rule 61 (expression -> NUMBERVALUE .)
    EQUALITY        reduce using rule 61 (expression -> NUMBERVALUE .)
    PLUS            reduce using rule 61 (expression -> NUMBERVALUE .)
    MINUS           reduce using rule 61 (expression -> NUMBERVALUE .)
    MULTIPLICATION  reduce using rule 61 (expression -> NUMBERVALUE .)
    DIVISION        reduce using rule 61 (expression -> NUMBERVALUE .)
    MODULUS         reduce using rule 61 (expression -> NUMBERVALUE .)
    COMMA           reduce using rule 61 (expression -> NUMBERVALUE .)
    SEMICOLON       reduce using rule 61 (expression -> NUMBERVALUE .)
    CBRACKETS       reduce using rule 61 (expression -> NUMBERVALUE .)
    CPARENTHESIS    reduce using rule 61 (expression -> NUMBERVALUE .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 42

<<<<<<< HEAD
    (42) call -> IDENTIFIER . OPARENTHESIS actuals CPARENTHESIS
    (39) location -> IDENTIFIER .
    (40) location -> IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS

    OPARENTHESIS    shift and go to state 68
    ASSIGNATION     reduce using rule 39 (location -> IDENTIFIER .)
    OBRACKETS       shift and go to state 69
=======
    (60) expression -> FLAGVALUE .

    OR              reduce using rule 60 (expression -> FLAGVALUE .)
    AND             reduce using rule 60 (expression -> FLAGVALUE .)
    LESSER          reduce using rule 60 (expression -> FLAGVALUE .)
    GREATER         reduce using rule 60 (expression -> FLAGVALUE .)
    EQUALITY        reduce using rule 60 (expression -> FLAGVALUE .)
    PLUS            reduce using rule 60 (expression -> FLAGVALUE .)
    MINUS           reduce using rule 60 (expression -> FLAGVALUE .)
    MULTIPLICATION  reduce using rule 60 (expression -> FLAGVALUE .)
    DIVISION        reduce using rule 60 (expression -> FLAGVALUE .)
    MODULUS         reduce using rule 60 (expression -> FLAGVALUE .)
    COMMA           reduce using rule 60 (expression -> FLAGVALUE .)
    SEMICOLON       reduce using rule 60 (expression -> FLAGVALUE .)
    CBRACKETS       reduce using rule 60 (expression -> FLAGVALUE .)
    CPARENTHESIS    reduce using rule 60 (expression -> FLAGVALUE .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 43

<<<<<<< HEAD
    (47) return -> RETURN . returnExpression SEMICOLON
    (48) returnExpression -> . expression
    (49) returnExpression -> . empty
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (2) empty -> .
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    SEMICOLON       reduce using rule 2 (empty -> .)
    IDENTIFIER      shift and go to state 47

    returnExpression               shift and go to state 70
    expression                     shift and go to state 71
    empty                          shift and go to state 72
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 44

    (50) ifStatement -> IF . OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF

    OPARENTHESIS    shift and go to state 73
=======
    (62) expression -> WORDSVALUE .

    OR              reduce using rule 62 (expression -> WORDSVALUE .)
    AND             reduce using rule 62 (expression -> WORDSVALUE .)
    LESSER          reduce using rule 62 (expression -> WORDSVALUE .)
    GREATER         reduce using rule 62 (expression -> WORDSVALUE .)
    EQUALITY        reduce using rule 62 (expression -> WORDSVALUE .)
    PLUS            reduce using rule 62 (expression -> WORDSVALUE .)
    MINUS           reduce using rule 62 (expression -> WORDSVALUE .)
    MULTIPLICATION  reduce using rule 62 (expression -> WORDSVALUE .)
    DIVISION        reduce using rule 62 (expression -> WORDSVALUE .)
    MODULUS         reduce using rule 62 (expression -> WORDSVALUE .)
    COMMA           reduce using rule 62 (expression -> WORDSVALUE .)
    SEMICOLON       reduce using rule 62 (expression -> WORDSVALUE .)
    CBRACKETS       reduce using rule 62 (expression -> WORDSVALUE .)
    CPARENTHESIS    reduce using rule 62 (expression -> WORDSVALUE .)


state 51
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (64) expression -> OPARENTHESIS . expression CPARENTHESIS
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 81

state 45

<<<<<<< HEAD
    (53) whileStatement -> WHILE . OPARENTHESIS expression CPARENTHESIS statement ENDWHILE

    OPARENTHESIS    shift and go to state 74
=======
    (63) expression -> LETTERVALUE .

    OR              reduce using rule 63 (expression -> LETTERVALUE .)
    AND             reduce using rule 63 (expression -> LETTERVALUE .)
    LESSER          reduce using rule 63 (expression -> LETTERVALUE .)
    GREATER         reduce using rule 63 (expression -> LETTERVALUE .)
    EQUALITY        reduce using rule 63 (expression -> LETTERVALUE .)
    PLUS            reduce using rule 63 (expression -> LETTERVALUE .)
    MINUS           reduce using rule 63 (expression -> LETTERVALUE .)
    MULTIPLICATION  reduce using rule 63 (expression -> LETTERVALUE .)
    DIVISION        reduce using rule 63 (expression -> LETTERVALUE .)
    MODULUS         reduce using rule 63 (expression -> LETTERVALUE .)
    COMMA           reduce using rule 63 (expression -> LETTERVALUE .)
    SEMICOLON       reduce using rule 63 (expression -> LETTERVALUE .)
    CBRACKETS       reduce using rule 63 (expression -> LETTERVALUE .)
    CPARENTHESIS    reduce using rule 63 (expression -> LETTERVALUE .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 46

<<<<<<< HEAD
    (20) block -> DEFINE blockType IDENTIFIER . parameters variables statement ENDDEFINE block
    (27) parameters -> . OPARENTHESIS parameter CPARENTHESIS

    OPARENTHESIS    shift and go to state 76
=======
    (42) location -> call .

    OR              reduce using rule 42 (location -> call .)
    AND             reduce using rule 42 (location -> call .)
    LESSER          reduce using rule 42 (location -> call .)
    GREATER         reduce using rule 42 (location -> call .)
    EQUALITY        reduce using rule 42 (location -> call .)
    PLUS            reduce using rule 42 (location -> call .)
    MINUS           reduce using rule 42 (location -> call .)
    MULTIPLICATION  reduce using rule 42 (location -> call .)
    DIVISION        reduce using rule 42 (location -> call .)
    MODULUS         reduce using rule 42 (location -> call .)
    COMMA           reduce using rule 42 (location -> call .)
    CPARENTHESIS    reduce using rule 42 (location -> call .)
    CBRACKETS       reduce using rule 42 (location -> call .)
    SEMICOLON       reduce using rule 42 (location -> call .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    parameters                     shift and go to state 75

state 47

<<<<<<< HEAD
    (39) location -> IDENTIFIER .
    (40) location -> IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS
    (42) call -> IDENTIFIER . OPARENTHESIS actuals CPARENTHESIS

    OR              reduce using rule 39 (location -> IDENTIFIER .)
    AND             reduce using rule 39 (location -> IDENTIFIER .)
    LESSER          reduce using rule 39 (location -> IDENTIFIER .)
    GREATER         reduce using rule 39 (location -> IDENTIFIER .)
    EQUALITY        reduce using rule 39 (location -> IDENTIFIER .)
    PLUS            reduce using rule 39 (location -> IDENTIFIER .)
    MINUS           reduce using rule 39 (location -> IDENTIFIER .)
    MULTIPLICATION  reduce using rule 39 (location -> IDENTIFIER .)
    DIVISION        reduce using rule 39 (location -> IDENTIFIER .)
    MODULUS         reduce using rule 39 (location -> IDENTIFIER .)
    COMMA           reduce using rule 39 (location -> IDENTIFIER .)
    SEMICOLON       reduce using rule 39 (location -> IDENTIFIER .)
    CBRACKETS       reduce using rule 39 (location -> IDENTIFIER .)
    CPARENTHESIS    reduce using rule 39 (location -> IDENTIFIER .)
    OBRACKETS       shift and go to state 69
    OPARENTHESIS    shift and go to state 68
=======
    (58) expression -> binaryExpression .
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    OR              reduce using rule 58 (expression -> binaryExpression .)
    AND             reduce using rule 58 (expression -> binaryExpression .)
    LESSER          reduce using rule 58 (expression -> binaryExpression .)
    GREATER         reduce using rule 58 (expression -> binaryExpression .)
    EQUALITY        reduce using rule 58 (expression -> binaryExpression .)
    PLUS            reduce using rule 58 (expression -> binaryExpression .)
    MINUS           reduce using rule 58 (expression -> binaryExpression .)
    MULTIPLICATION  reduce using rule 58 (expression -> binaryExpression .)
    DIVISION        reduce using rule 58 (expression -> binaryExpression .)
    MODULUS         reduce using rule 58 (expression -> binaryExpression .)
    COMMA           reduce using rule 58 (expression -> binaryExpression .)
    SEMICOLON       reduce using rule 58 (expression -> binaryExpression .)
    CBRACKETS       reduce using rule 58 (expression -> binaryExpression .)
    CPARENTHESIS    reduce using rule 58 (expression -> binaryExpression .)

<<<<<<< HEAD
state 48

    (6) declaration -> variableType IDENTIFIER ASSIGNATION expression . declarationExtra SEMICOLON declaration
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

    OR              shift and go to state 78
    AND             shift and go to state 79
    LESSER          shift and go to state 80
    GREATER         shift and go to state 81
    EQUALITY        shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 77
    empty                          shift and go to state 33

state 49
=======
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 55

<<<<<<< HEAD
    OR              reduce using rule 55 (expression -> location .)
    AND             reduce using rule 55 (expression -> location .)
    LESSER          reduce using rule 55 (expression -> location .)
    GREATER         reduce using rule 55 (expression -> location .)
    EQUALITY        reduce using rule 55 (expression -> location .)
    PLUS            reduce using rule 55 (expression -> location .)
    MINUS           reduce using rule 55 (expression -> location .)
    MULTIPLICATION  reduce using rule 55 (expression -> location .)
    DIVISION        reduce using rule 55 (expression -> location .)
    MODULUS         reduce using rule 55 (expression -> location .)
    COMMA           reduce using rule 55 (expression -> location .)
    SEMICOLON       reduce using rule 55 (expression -> location .)
    CBRACKETS       reduce using rule 55 (expression -> location .)
    CPARENTHESIS    reduce using rule 55 (expression -> location .)
=======
    (40) location -> IDENTIFIER .
    (41) location -> IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS
    (43) call -> IDENTIFIER . OPARENTHESIS actuals CPARENTHESIS

    OR              reduce using rule 40 (location -> IDENTIFIER .)
    AND             reduce using rule 40 (location -> IDENTIFIER .)
    LESSER          reduce using rule 40 (location -> IDENTIFIER .)
    GREATER         reduce using rule 40 (location -> IDENTIFIER .)
    EQUALITY        reduce using rule 40 (location -> IDENTIFIER .)
    PLUS            reduce using rule 40 (location -> IDENTIFIER .)
    MINUS           reduce using rule 40 (location -> IDENTIFIER .)
    MULTIPLICATION  reduce using rule 40 (location -> IDENTIFIER .)
    DIVISION        reduce using rule 40 (location -> IDENTIFIER .)
    MODULUS         reduce using rule 40 (location -> IDENTIFIER .)
    COMMA           reduce using rule 40 (location -> IDENTIFIER .)
    CPARENTHESIS    reduce using rule 40 (location -> IDENTIFIER .)
    CBRACKETS       reduce using rule 40 (location -> IDENTIFIER .)
    SEMICOLON       reduce using rule 40 (location -> IDENTIFIER .)
    OBRACKETS       shift and go to state 74
    OPARENTHESIS    shift and go to state 75
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 50

<<<<<<< HEAD
    (56) expression -> binaryExpression .

    OR              reduce using rule 56 (expression -> binaryExpression .)
    AND             reduce using rule 56 (expression -> binaryExpression .)
    LESSER          reduce using rule 56 (expression -> binaryExpression .)
    GREATER         reduce using rule 56 (expression -> binaryExpression .)
    EQUALITY        reduce using rule 56 (expression -> binaryExpression .)
    PLUS            reduce using rule 56 (expression -> binaryExpression .)
    MINUS           reduce using rule 56 (expression -> binaryExpression .)
    MULTIPLICATION  reduce using rule 56 (expression -> binaryExpression .)
    DIVISION        reduce using rule 56 (expression -> binaryExpression .)
    MODULUS         reduce using rule 56 (expression -> binaryExpression .)
    COMMA           reduce using rule 56 (expression -> binaryExpression .)
    SEMICOLON       reduce using rule 56 (expression -> binaryExpression .)
    CBRACKETS       reduce using rule 56 (expression -> binaryExpression .)
    CPARENTHESIS    reduce using rule 56 (expression -> binaryExpression .)
=======
    (56) expression -> location .

    OR              reduce using rule 56 (expression -> location .)
    AND             reduce using rule 56 (expression -> location .)
    LESSER          reduce using rule 56 (expression -> location .)
    GREATER         reduce using rule 56 (expression -> location .)
    EQUALITY        reduce using rule 56 (expression -> location .)
    PLUS            reduce using rule 56 (expression -> location .)
    MINUS           reduce using rule 56 (expression -> location .)
    MULTIPLICATION  reduce using rule 56 (expression -> location .)
    DIVISION        reduce using rule 56 (expression -> location .)
    MODULUS         reduce using rule 56 (expression -> location .)
    COMMA           reduce using rule 56 (expression -> location .)
    SEMICOLON       reduce using rule 56 (expression -> location .)
    CBRACKETS       reduce using rule 56 (expression -> location .)
    CPARENTHESIS    reduce using rule 56 (expression -> location .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 51

<<<<<<< HEAD
    (57) expression -> FLAGVALUE .

    OR              reduce using rule 57 (expression -> FLAGVALUE .)
    AND             reduce using rule 57 (expression -> FLAGVALUE .)
    LESSER          reduce using rule 57 (expression -> FLAGVALUE .)
    GREATER         reduce using rule 57 (expression -> FLAGVALUE .)
    EQUALITY        reduce using rule 57 (expression -> FLAGVALUE .)
    PLUS            reduce using rule 57 (expression -> FLAGVALUE .)
    MINUS           reduce using rule 57 (expression -> FLAGVALUE .)
    MULTIPLICATION  reduce using rule 57 (expression -> FLAGVALUE .)
    DIVISION        reduce using rule 57 (expression -> FLAGVALUE .)
    MODULUS         reduce using rule 57 (expression -> FLAGVALUE .)
    COMMA           reduce using rule 57 (expression -> FLAGVALUE .)
    SEMICOLON       reduce using rule 57 (expression -> FLAGVALUE .)
    CBRACKETS       reduce using rule 57 (expression -> FLAGVALUE .)
    CPARENTHESIS    reduce using rule 57 (expression -> FLAGVALUE .)


state 52
=======
    (57) expression -> unaryExpression .

    OR              reduce using rule 57 (expression -> unaryExpression .)
    AND             reduce using rule 57 (expression -> unaryExpression .)
    LESSER          reduce using rule 57 (expression -> unaryExpression .)
    GREATER         reduce using rule 57 (expression -> unaryExpression .)
    EQUALITY        reduce using rule 57 (expression -> unaryExpression .)
    PLUS            reduce using rule 57 (expression -> unaryExpression .)
    MINUS           reduce using rule 57 (expression -> unaryExpression .)
    MULTIPLICATION  reduce using rule 57 (expression -> unaryExpression .)
    DIVISION        reduce using rule 57 (expression -> unaryExpression .)
    MODULUS         reduce using rule 57 (expression -> unaryExpression .)
    COMMA           reduce using rule 57 (expression -> unaryExpression .)
    SEMICOLON       reduce using rule 57 (expression -> unaryExpression .)
    CBRACKETS       reduce using rule 57 (expression -> unaryExpression .)
    CPARENTHESIS    reduce using rule 57 (expression -> unaryExpression .)


state 58

    (59) expression -> NONZEROINT .

    OR              reduce using rule 59 (expression -> NONZEROINT .)
    AND             reduce using rule 59 (expression -> NONZEROINT .)
    LESSER          reduce using rule 59 (expression -> NONZEROINT .)
    GREATER         reduce using rule 59 (expression -> NONZEROINT .)
    EQUALITY        reduce using rule 59 (expression -> NONZEROINT .)
    PLUS            reduce using rule 59 (expression -> NONZEROINT .)
    MINUS           reduce using rule 59 (expression -> NONZEROINT .)
    MULTIPLICATION  reduce using rule 59 (expression -> NONZEROINT .)
    DIVISION        reduce using rule 59 (expression -> NONZEROINT .)
    MODULUS         reduce using rule 59 (expression -> NONZEROINT .)
    COMMA           reduce using rule 59 (expression -> NONZEROINT .)
    SEMICOLON       reduce using rule 59 (expression -> NONZEROINT .)
    CBRACKETS       reduce using rule 59 (expression -> NONZEROINT .)
    CPARENTHESIS    reduce using rule 59 (expression -> NONZEROINT .)


state 59

    (75) unaryExpression -> NOT . expression
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 82

state 60

    (6) declaration -> variableType IDENTIFIER ASSIGNATION expression . declarationExtra SEMICOLON declaration
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

    OR              shift and go to state 93
    AND             shift and go to state 90
    LESSER          shift and go to state 92
    GREATER         shift and go to state 91
    EQUALITY        shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 88
    empty                          shift and go to state 34

state 61
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (58) expression -> NUMBERVALUE .

<<<<<<< HEAD
    OR              reduce using rule 58 (expression -> NUMBERVALUE .)
    AND             reduce using rule 58 (expression -> NUMBERVALUE .)
    LESSER          reduce using rule 58 (expression -> NUMBERVALUE .)
    GREATER         reduce using rule 58 (expression -> NUMBERVALUE .)
    EQUALITY        reduce using rule 58 (expression -> NUMBERVALUE .)
    PLUS            reduce using rule 58 (expression -> NUMBERVALUE .)
    MINUS           reduce using rule 58 (expression -> NUMBERVALUE .)
    MULTIPLICATION  reduce using rule 58 (expression -> NUMBERVALUE .)
    DIVISION        reduce using rule 58 (expression -> NUMBERVALUE .)
    MODULUS         reduce using rule 58 (expression -> NUMBERVALUE .)
    COMMA           reduce using rule 58 (expression -> NUMBERVALUE .)
    SEMICOLON       reduce using rule 58 (expression -> NUMBERVALUE .)
    CBRACKETS       reduce using rule 58 (expression -> NUMBERVALUE .)
    CPARENTHESIS    reduce using rule 58 (expression -> NUMBERVALUE .)


state 53

    (59) expression -> WORDSVALUE .

    OR              reduce using rule 59 (expression -> WORDSVALUE .)
    AND             reduce using rule 59 (expression -> WORDSVALUE .)
    LESSER          reduce using rule 59 (expression -> WORDSVALUE .)
    GREATER         reduce using rule 59 (expression -> WORDSVALUE .)
    EQUALITY        reduce using rule 59 (expression -> WORDSVALUE .)
    PLUS            reduce using rule 59 (expression -> WORDSVALUE .)
    MINUS           reduce using rule 59 (expression -> WORDSVALUE .)
    MULTIPLICATION  reduce using rule 59 (expression -> WORDSVALUE .)
    DIVISION        reduce using rule 59 (expression -> WORDSVALUE .)
    MODULUS         reduce using rule 59 (expression -> WORDSVALUE .)
    COMMA           reduce using rule 59 (expression -> WORDSVALUE .)
    SEMICOLON       reduce using rule 59 (expression -> WORDSVALUE .)
    CBRACKETS       reduce using rule 59 (expression -> WORDSVALUE .)
    CPARENTHESIS    reduce using rule 59 (expression -> WORDSVALUE .)


state 54
=======
    CBRACKETS       shift and go to state 94


state 62

    (15) arrayIndexes -> expression . arrayIndexesExtra
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression
    (16) arrayIndexesExtra -> . COMMA expression arrayIndexesExtra
    (17) arrayIndexesExtra -> . empty
    (2) empty -> .

    OR              shift and go to state 93
    AND             shift and go to state 90
    LESSER          shift and go to state 92
    GREATER         shift and go to state 91
    EQUALITY        shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89
    COMMA           shift and go to state 96
    CBRACKETS       reduce using rule 2 (empty -> .)

    arrayIndexesExtra              shift and go to state 95
    empty                          shift and go to state 97

state 63
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (60) expression -> LETTERVALUE .

<<<<<<< HEAD
    OR              reduce using rule 60 (expression -> LETTERVALUE .)
    AND             reduce using rule 60 (expression -> LETTERVALUE .)
    LESSER          reduce using rule 60 (expression -> LETTERVALUE .)
    GREATER         reduce using rule 60 (expression -> LETTERVALUE .)
    EQUALITY        reduce using rule 60 (expression -> LETTERVALUE .)
    PLUS            reduce using rule 60 (expression -> LETTERVALUE .)
    MINUS           reduce using rule 60 (expression -> LETTERVALUE .)
    MULTIPLICATION  reduce using rule 60 (expression -> LETTERVALUE .)
    DIVISION        reduce using rule 60 (expression -> LETTERVALUE .)
    MODULUS         reduce using rule 60 (expression -> LETTERVALUE .)
    COMMA           reduce using rule 60 (expression -> LETTERVALUE .)
    SEMICOLON       reduce using rule 60 (expression -> LETTERVALUE .)
    CBRACKETS       reduce using rule 60 (expression -> LETTERVALUE .)
    CPARENTHESIS    reduce using rule 60 (expression -> LETTERVALUE .)


state 55

    (61) expression -> OPARENTHESIS . expression CPARENTHESIS
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    expression                     shift and go to state 88
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 56
=======
    ASSIGNATION     shift and go to state 98
    OBRACKETS       shift and go to state 99
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    empty                          shift and go to state 34
    declarationExtra               shift and go to state 100

state 64

    (8) declaration -> variableType IDENTIFIER declarationExtra SEMICOLON . declaration
    (6) declaration -> . variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> . variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> . variableType IDENTIFIER declarationExtra SEMICOLON declaration
    (9) declaration -> . empty
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (27) variableType -> . FLAG
    (2) empty -> .

    NUMBER          shift and go to state 13
    WORDS           shift and go to state 11
    LETTER          shift and go to state 15
    FLAG            shift and go to state 14
    ENDVARIABLES    reduce using rule 2 (empty -> .)

    variableType                   shift and go to state 12
    declaration                    shift and go to state 101
    empty                          shift and go to state 17

state 65
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (41) location -> call .

    OR              reduce using rule 41 (location -> call .)
    AND             reduce using rule 41 (location -> call .)
    LESSER          reduce using rule 41 (location -> call .)
    GREATER         reduce using rule 41 (location -> call .)
    EQUALITY        reduce using rule 41 (location -> call .)
    PLUS            reduce using rule 41 (location -> call .)
    MINUS           reduce using rule 41 (location -> call .)
    MULTIPLICATION  reduce using rule 41 (location -> call .)
    DIVISION        reduce using rule 41 (location -> call .)
    MODULUS         reduce using rule 41 (location -> call .)
    COMMA           reduce using rule 41 (location -> call .)
    SEMICOLON       reduce using rule 41 (location -> call .)
    CBRACKETS       reduce using rule 41 (location -> call .)
    CPARENTHESIS    reduce using rule 41 (location -> call .)

<<<<<<< HEAD

state 57

    (8) declaration -> variableType IDENTIFIER declarationExtra SEMICOLON . declaration
    (6) declaration -> . variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> . variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> . variableType IDENTIFIER declarationExtra SEMICOLON declaration
    (9) declaration -> . empty
=======
    variables                      shift and go to state 102
    empty                          shift and go to state 6

state 66

    (28) parameters -> OPARENTHESIS . parameter CPARENTHESIS
    (29) parameter -> . variableType IDENTIFIER parameterExtra
    (30) parameter -> . empty
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (27) variableType -> . FLAG
    (2) empty -> .

<<<<<<< HEAD
    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16
    ENDVARIABLES    reduce using rule 2 (empty -> .)

    variableType                   shift and go to state 12
    declaration                    shift and go to state 89
    empty                          shift and go to state 13

state 58
=======
    NUMBER          shift and go to state 13
    WORDS           shift and go to state 11
    LETTER          shift and go to state 15
    FLAG            shift and go to state 14
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    variableType                   shift and go to state 103
    parameter                      shift and go to state 104
    empty                          shift and go to state 105

state 67

    (48) return -> RETURN returnExpression . SEMICOLON

    SEMICOLON       shift and go to state 106
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration

<<<<<<< HEAD
    CBRACKETS       shift and go to state 90


state 59
=======
state 68

    (50) returnExpression -> empty .

    SEMICOLON       reduce using rule 50 (returnExpression -> empty .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (15) arrayIndexes -> expression . arrayIndexesExtra
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression
    (16) arrayIndexesExtra -> . COMMA expression arrayIndexesExtra
    (17) arrayIndexesExtra -> . empty
    (2) empty -> .

<<<<<<< HEAD
    OR              shift and go to state 78
    AND             shift and go to state 79
    LESSER          shift and go to state 80
    GREATER         shift and go to state 81
    EQUALITY        shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87
    COMMA           shift and go to state 92
    CBRACKETS       reduce using rule 2 (empty -> .)

    arrayIndexesExtra              shift and go to state 91
    empty                          shift and go to state 93

state 60
=======
state 69

    (49) returnExpression -> expression .
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    SEMICOLON       reduce using rule 49 (returnExpression -> expression .)
    OR              shift and go to state 93
    AND             shift and go to state 90
    LESSER          shift and go to state 92
    GREATER         shift and go to state 91
    EQUALITY        shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (10) declarationExtra -> COMMA IDENTIFIER . ASSIGNATION expression declarationExtra
    (11) declarationExtra -> COMMA IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> COMMA IDENTIFIER . declarationExtra
    (13) declarationExtra -> COMMA IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

<<<<<<< HEAD
    ASSIGNATION     shift and go to state 94
    OBRACKETS       shift and go to state 96
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 95
    empty                          shift and go to state 33

state 61

    (54) main -> START variables statement FINISH .

    ENDPROGRAM      reduce using rule 54 (main -> START variables statement FINISH .)


state 62

    (32) statement -> assign SEMICOLON . statement
    (32) statement -> . assign SEMICOLON statement
    (33) statement -> . call SEMICOLON statement
    (34) statement -> . return empty statement
    (35) statement -> . ifStatement empty statement
    (36) statement -> . whileStatement empty statement
    (37) statement -> . empty
    (38) assign -> . location ASSIGNATION expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (47) return -> . RETURN returnExpression SEMICOLON
    (50) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
    (53) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
    (2) empty -> .
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call

    IDENTIFIER      shift and go to state 42
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
=======
state 70

    (54) whileStatement -> WHILE OPARENTHESIS . expression CPARENTHESIS statement ENDWHILE
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 107

state 71

    (34) statement -> call SEMICOLON . statement
    (33) statement -> . assign SEMICOLON statement
    (34) statement -> . call SEMICOLON statement
    (35) statement -> . return empty statement
    (36) statement -> . ifStatement empty statement
    (37) statement -> . whileStatement empty statement
    (38) statement -> . empty
    (39) assign -> . location ASSIGNATION expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (48) return -> . RETURN returnExpression SEMICOLON
    (51) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
    (54) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
    (2) empty -> .
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call

    IDENTIFIER      shift and go to state 41
    RETURN          shift and go to state 36
    IF              shift and go to state 46
    WHILE           shift and go to state 37
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    FINISH          reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)
    ELSE            reduce using rule 2 (empty -> .)
    ENDIF           reduce using rule 2 (empty -> .)
    ENDWHILE        reduce using rule 2 (empty -> .)

<<<<<<< HEAD
    assign                         shift and go to state 35
    statement                      shift and go to state 97
    call                           shift and go to state 36
    return                         shift and go to state 37
    empty                          shift and go to state 38
    ifStatement                    shift and go to state 39
    whileStatement                 shift and go to state 40
    location                       shift and go to state 41

state 63

    (33) statement -> call SEMICOLON . statement
    (32) statement -> . assign SEMICOLON statement
    (33) statement -> . call SEMICOLON statement
    (34) statement -> . return empty statement
    (35) statement -> . ifStatement empty statement
    (36) statement -> . whileStatement empty statement
    (37) statement -> . empty
    (38) assign -> . location ASSIGNATION expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (47) return -> . RETURN returnExpression SEMICOLON
    (50) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
    (53) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
    (2) empty -> .
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call

    IDENTIFIER      shift and go to state 42
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    FINISH          reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)
    ELSE            reduce using rule 2 (empty -> .)
    ENDIF           reduce using rule 2 (empty -> .)
    ENDWHILE        reduce using rule 2 (empty -> .)

    call                           shift and go to state 36
    statement                      shift and go to state 98
    assign                         shift and go to state 35
    return                         shift and go to state 37
    empty                          shift and go to state 38
    ifStatement                    shift and go to state 39
    whileStatement                 shift and go to state 40
    location                       shift and go to state 41

state 64
=======
    return                         shift and go to state 43
    whileStatement                 shift and go to state 45
    call                           shift and go to state 38
    location                       shift and go to state 39
    statement                      shift and go to state 108
    assign                         shift and go to state 47
    empty                          shift and go to state 42
    ifStatement                    shift and go to state 44

state 72

    (39) assign -> location ASSIGNATION . expression
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 109

state 73

    (55) main -> START variables statement FINISH .

    ENDPROGRAM      reduce using rule 55 (main -> START variables statement FINISH .)


state 74

    (41) location -> IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS
    (15) arrayIndexes -> . expression arrayIndexesExtra
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    arrayIndexes                   shift and go to state 110
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 62

state 75

    (43) call -> IDENTIFIER OPARENTHESIS . actuals CPARENTHESIS
    (44) actuals -> . expression commaExpressionList
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    actuals                        shift and go to state 111
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 112

state 76
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (35) statement -> return empty . statement
    (33) statement -> . assign SEMICOLON statement
    (34) statement -> . call SEMICOLON statement
    (35) statement -> . return empty statement
    (36) statement -> . ifStatement empty statement
    (37) statement -> . whileStatement empty statement
    (38) statement -> . empty
    (39) assign -> . location ASSIGNATION expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (48) return -> . RETURN returnExpression SEMICOLON
    (51) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
    (54) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
    (2) empty -> .
<<<<<<< HEAD
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call

    IDENTIFIER      shift and go to state 42
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
=======
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call

    IDENTIFIER      shift and go to state 41
    RETURN          shift and go to state 36
    IF              shift and go to state 46
    WHILE           shift and go to state 37
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    FINISH          reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)
    ELSE            reduce using rule 2 (empty -> .)
    ENDIF           reduce using rule 2 (empty -> .)
    ENDWHILE        reduce using rule 2 (empty -> .)

<<<<<<< HEAD
    return                         shift and go to state 37
    empty                          shift and go to state 38
    statement                      shift and go to state 99
    assign                         shift and go to state 35
    call                           shift and go to state 36
    ifStatement                    shift and go to state 39
    whileStatement                 shift and go to state 40
    location                       shift and go to state 41

state 65
=======
    return                         shift and go to state 43
    whileStatement                 shift and go to state 45
    call                           shift and go to state 38
    location                       shift and go to state 39
    statement                      shift and go to state 113
    assign                         shift and go to state 47
    empty                          shift and go to state 42
    ifStatement                    shift and go to state 44

state 77
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (36) statement -> ifStatement empty . statement
    (33) statement -> . assign SEMICOLON statement
    (34) statement -> . call SEMICOLON statement
    (35) statement -> . return empty statement
    (36) statement -> . ifStatement empty statement
    (37) statement -> . whileStatement empty statement
    (38) statement -> . empty
    (39) assign -> . location ASSIGNATION expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (48) return -> . RETURN returnExpression SEMICOLON
    (51) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
    (54) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
    (2) empty -> .
<<<<<<< HEAD
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call

    IDENTIFIER      shift and go to state 42
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
=======
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call

    IDENTIFIER      shift and go to state 41
    RETURN          shift and go to state 36
    IF              shift and go to state 46
    WHILE           shift and go to state 37
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    FINISH          reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)
    ELSE            reduce using rule 2 (empty -> .)
    ENDIF           reduce using rule 2 (empty -> .)
    ENDWHILE        reduce using rule 2 (empty -> .)

<<<<<<< HEAD
    ifStatement                    shift and go to state 39
    empty                          shift and go to state 38
    statement                      shift and go to state 100
    assign                         shift and go to state 35
    call                           shift and go to state 36
    return                         shift and go to state 37
    whileStatement                 shift and go to state 40
    location                       shift and go to state 41

state 66
=======
    return                         shift and go to state 43
    whileStatement                 shift and go to state 45
    call                           shift and go to state 38
    location                       shift and go to state 39
    statement                      shift and go to state 114
    assign                         shift and go to state 47
    empty                          shift and go to state 42
    ifStatement                    shift and go to state 44

state 78
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (37) statement -> whileStatement empty . statement
    (33) statement -> . assign SEMICOLON statement
    (34) statement -> . call SEMICOLON statement
    (35) statement -> . return empty statement
    (36) statement -> . ifStatement empty statement
    (37) statement -> . whileStatement empty statement
    (38) statement -> . empty
    (39) assign -> . location ASSIGNATION expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (48) return -> . RETURN returnExpression SEMICOLON
    (51) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
    (54) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
    (2) empty -> .
<<<<<<< HEAD
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call

    IDENTIFIER      shift and go to state 42
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
=======
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call

    IDENTIFIER      shift and go to state 41
    RETURN          shift and go to state 36
    IF              shift and go to state 46
    WHILE           shift and go to state 37
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    FINISH          reduce using rule 2 (empty -> .)
    ENDDEFINE       reduce using rule 2 (empty -> .)
    ELSE            reduce using rule 2 (empty -> .)
    ENDIF           reduce using rule 2 (empty -> .)
    ENDWHILE        reduce using rule 2 (empty -> .)

<<<<<<< HEAD
    whileStatement                 shift and go to state 40
    empty                          shift and go to state 38
    statement                      shift and go to state 101
    assign                         shift and go to state 35
    call                           shift and go to state 36
    return                         shift and go to state 37
    ifStatement                    shift and go to state 39
    location                       shift and go to state 41

state 67

    (38) assign -> location ASSIGNATION . expression
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    location                       shift and go to state 49
    expression                     shift and go to state 102
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 68

    (42) call -> IDENTIFIER OPARENTHESIS . actuals CPARENTHESIS
    (43) actuals -> . expression commaExpressionList
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    actuals                        shift and go to state 103
    expression                     shift and go to state 104
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 69

    (40) location -> IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS
    (15) arrayIndexes -> . expression arrayIndexesExtra
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    arrayIndexes                   shift and go to state 105
    expression                     shift and go to state 59
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 70

    (47) return -> RETURN returnExpression . SEMICOLON

    SEMICOLON       shift and go to state 106


state 71

    (48) returnExpression -> expression .
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression

    SEMICOLON       reduce using rule 48 (returnExpression -> expression .)
    OR              shift and go to state 78
    AND             shift and go to state 79
    LESSER          shift and go to state 80
    GREATER         shift and go to state 81
    EQUALITY        shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87


state 72

    (49) returnExpression -> empty .

    SEMICOLON       reduce using rule 49 (returnExpression -> empty .)


state 73

    (50) ifStatement -> IF OPARENTHESIS . expression CPARENTHESIS statement elseStatement ENDIF
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    expression                     shift and go to state 107
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 74

    (53) whileStatement -> WHILE OPARENTHESIS . expression CPARENTHESIS statement ENDWHILE
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    expression                     shift and go to state 108
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 75

    (20) block -> DEFINE blockType IDENTIFIER parameters . variables statement ENDDEFINE block
    (4) variables -> . VARIABLES declaration ENDVARIABLES
    (5) variables -> . empty
    (2) empty -> .

    VARIABLES       shift and go to state 5
    IDENTIFIER      reduce using rule 2 (empty -> .)
    RETURN          reduce using rule 2 (empty -> .)
    IF              reduce using rule 2 (empty -> .)
    WHILE           reduce using rule 2 (empty -> .)
=======
    return                         shift and go to state 43
    whileStatement                 shift and go to state 45
    call                           shift and go to state 38
    location                       shift and go to state 39
    statement                      shift and go to state 115
    assign                         shift and go to state 47
    empty                          shift and go to state 42
    ifStatement                    shift and go to state 44

state 79

    (51) ifStatement -> IF OPARENTHESIS . expression CPARENTHESIS statement elseStatement ENDIF
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 116

state 80

    (33) statement -> assign SEMICOLON . statement
    (33) statement -> . assign SEMICOLON statement
    (34) statement -> . call SEMICOLON statement
    (35) statement -> . return empty statement
    (36) statement -> . ifStatement empty statement
    (37) statement -> . whileStatement empty statement
    (38) statement -> . empty
    (39) assign -> . location ASSIGNATION expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (48) return -> . RETURN returnExpression SEMICOLON
    (51) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
    (54) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
    (2) empty -> .
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call

    IDENTIFIER      shift and go to state 41
    RETURN          shift and go to state 36
    IF              shift and go to state 46
    WHILE           shift and go to state 37
    FINISH          reduce using rule 2 (empty -> .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    ENDDEFINE       reduce using rule 2 (empty -> .)

<<<<<<< HEAD
    variables                      shift and go to state 109
    empty                          shift and go to state 6

state 76

    (27) parameters -> OPARENTHESIS . parameter CPARENTHESIS
    (28) parameter -> . variableType IDENTIFIER parameterExtra
    (29) parameter -> . empty
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (2) empty -> .

    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    parameter                      shift and go to state 110
    variableType                   shift and go to state 111
    empty                          shift and go to state 112

state 77

    (6) declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra . SEMICOLON declaration

    SEMICOLON       shift and go to state 113


state 78

    (62) binaryExpression -> expression OR . expression
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    expression                     shift and go to state 114
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 79

    (63) binaryExpression -> expression AND . expression
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    expression                     shift and go to state 115
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 80

    (64) binaryExpression -> expression LESSER . expression
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    expression                     shift and go to state 116
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 81

    (65) binaryExpression -> expression GREATER . expression
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    expression                     shift and go to state 117
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 82

    (66) binaryExpression -> expression EQUALITY . expression
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    expression                     shift and go to state 118
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 83

    (67) binaryExpression -> expression PLUS . expression
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

=======
    return                         shift and go to state 43
    whileStatement                 shift and go to state 45
    call                           shift and go to state 38
    location                       shift and go to state 39
    statement                      shift and go to state 117
    assign                         shift and go to state 47
    empty                          shift and go to state 42
    ifStatement                    shift and go to state 44

state 81

    (64) expression -> OPARENTHESIS expression . CPARENTHESIS
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    CPARENTHESIS    shift and go to state 118
    OR              shift and go to state 93
    AND             shift and go to state 90
    LESSER          shift and go to state 92
    GREATER         shift and go to state 91
    EQUALITY        shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89


state 82

    (75) unaryExpression -> NOT expression .
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    OR              reduce using rule 75 (unaryExpression -> NOT expression .)
    AND             reduce using rule 75 (unaryExpression -> NOT expression .)
    LESSER          reduce using rule 75 (unaryExpression -> NOT expression .)
    GREATER         reduce using rule 75 (unaryExpression -> NOT expression .)
    EQUALITY        reduce using rule 75 (unaryExpression -> NOT expression .)
    PLUS            reduce using rule 75 (unaryExpression -> NOT expression .)
    MINUS           reduce using rule 75 (unaryExpression -> NOT expression .)
    MULTIPLICATION  reduce using rule 75 (unaryExpression -> NOT expression .)
    DIVISION        reduce using rule 75 (unaryExpression -> NOT expression .)
    MODULUS         reduce using rule 75 (unaryExpression -> NOT expression .)
    COMMA           reduce using rule 75 (unaryExpression -> NOT expression .)
    CBRACKETS       reduce using rule 75 (unaryExpression -> NOT expression .)
    SEMICOLON       reduce using rule 75 (unaryExpression -> NOT expression .)
    CPARENTHESIS    reduce using rule 75 (unaryExpression -> NOT expression .)

  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 90 ]
  ! LESSER          [ shift and go to state 92 ]
  ! GREATER         [ shift and go to state 91 ]
  ! EQUALITY        [ shift and go to state 85 ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 84 ]
  ! MULTIPLICATION  [ shift and go to state 83 ]
  ! DIVISION        [ shift and go to state 87 ]
  ! MODULUS         [ shift and go to state 89 ]


state 83

    (72) binaryExpression -> expression MULTIPLICATION . expression
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    expression                     shift and go to state 119
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 84

<<<<<<< HEAD
    (68) binaryExpression -> expression MINUS . expression
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    expression                     shift and go to state 120
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 85

    (69) binaryExpression -> expression MULTIPLICATION . expression
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

=======
    (71) binaryExpression -> expression MINUS . expression
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 120

state 85

    (69) binaryExpression -> expression EQUALITY . expression
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    expression                     shift and go to state 121
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 86

<<<<<<< HEAD
    (70) binaryExpression -> expression DIVISION . expression
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

=======
    (70) binaryExpression -> expression PLUS . expression
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    expression                     shift and go to state 122
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 87

<<<<<<< HEAD
    (71) binaryExpression -> expression MODULUS . expression
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

=======
    (73) binaryExpression -> expression DIVISION . expression
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    expression                     shift and go to state 123
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 88

<<<<<<< HEAD
    (61) expression -> OPARENTHESIS expression . CPARENTHESIS
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression

    CPARENTHESIS    shift and go to state 124
    OR              shift and go to state 78
    AND             shift and go to state 79
    LESSER          shift and go to state 80
    GREATER         shift and go to state 81
    EQUALITY        shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87
=======
    (6) declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra . SEMICOLON declaration

    SEMICOLON       shift and go to state 124
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 89

<<<<<<< HEAD
    (8) declaration -> variableType IDENTIFIER declarationExtra SEMICOLON declaration .

    ENDVARIABLES    reduce using rule 8 (declaration -> variableType IDENTIFIER declarationExtra SEMICOLON declaration .)

=======
    (74) binaryExpression -> expression MODULUS . expression
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 125
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 90

    (66) binaryExpression -> expression AND . expression
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 126

state 91

    (68) binaryExpression -> expression GREATER . expression
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 127

state 92

    (67) binaryExpression -> expression LESSER . expression
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 128

state 93

    (65) binaryExpression -> expression OR . expression
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 129

state 94

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS . ASSIGNATION expression declarationExtra SEMICOLON declaration

<<<<<<< HEAD
    ASSIGNATION     shift and go to state 125
=======
    ASSIGNATION     shift and go to state 130
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 95

    (15) arrayIndexes -> expression arrayIndexesExtra .

    CBRACKETS       reduce using rule 15 (arrayIndexes -> expression arrayIndexesExtra .)


state 96

    (16) arrayIndexesExtra -> COMMA . expression arrayIndexesExtra
<<<<<<< HEAD
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    expression                     shift and go to state 126
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56
=======
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 131
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 97

    (17) arrayIndexesExtra -> empty .

    CBRACKETS       reduce using rule 17 (arrayIndexesExtra -> empty .)


state 98

    (10) declarationExtra -> COMMA IDENTIFIER ASSIGNATION . expression declarationExtra
<<<<<<< HEAD
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    expression                     shift and go to state 127
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56
=======
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 132
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 99

    (12) declarationExtra -> COMMA IDENTIFIER declarationExtra .

    SEMICOLON       reduce using rule 12 (declarationExtra -> COMMA IDENTIFIER declarationExtra .)


state 96

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (13) declarationExtra -> COMMA IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS declarationExtra
    (15) arrayIndexes -> . expression arrayIndexesExtra
<<<<<<< HEAD
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47
=======
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    arrayIndexes                   shift and go to state 133
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 62

state 100

    (12) declarationExtra -> COMMA IDENTIFIER declarationExtra .

    SEMICOLON       reduce using rule 12 (declarationExtra -> COMMA IDENTIFIER declarationExtra .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    arrayIndexes                   shift and go to state 128
    expression                     shift and go to state 59
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 101

    (32) statement -> assign SEMICOLON statement .

    FINISH          reduce using rule 32 (statement -> assign SEMICOLON statement .)
    ENDDEFINE       reduce using rule 32 (statement -> assign SEMICOLON statement .)
    ELSE            reduce using rule 32 (statement -> assign SEMICOLON statement .)
    ENDIF           reduce using rule 32 (statement -> assign SEMICOLON statement .)
    ENDWHILE        reduce using rule 32 (statement -> assign SEMICOLON statement .)


state 102

<<<<<<< HEAD
    (33) statement -> call SEMICOLON statement .

    FINISH          reduce using rule 33 (statement -> call SEMICOLON statement .)
    ENDDEFINE       reduce using rule 33 (statement -> call SEMICOLON statement .)
    ELSE            reduce using rule 33 (statement -> call SEMICOLON statement .)
    ENDIF           reduce using rule 33 (statement -> call SEMICOLON statement .)
    ENDWHILE        reduce using rule 33 (statement -> call SEMICOLON statement .)

=======
    (20) block -> DEFINE blockType IDENTIFIER parameters variables . statement ENDDEFINE block
    (33) statement -> . assign SEMICOLON statement
    (34) statement -> . call SEMICOLON statement
    (35) statement -> . return empty statement
    (36) statement -> . ifStatement empty statement
    (37) statement -> . whileStatement empty statement
    (38) statement -> . empty
    (39) assign -> . location ASSIGNATION expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (48) return -> . RETURN returnExpression SEMICOLON
    (51) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
    (54) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
    (2) empty -> .
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call

    IDENTIFIER      shift and go to state 41
    RETURN          shift and go to state 36
    IF              shift and go to state 46
    WHILE           shift and go to state 37
    ENDDEFINE       reduce using rule 2 (empty -> .)

    return                         shift and go to state 43
    whileStatement                 shift and go to state 45
    location                       shift and go to state 39
    call                           shift and go to state 38
    empty                          shift and go to state 42
    statement                      shift and go to state 134
    assign                         shift and go to state 47
    ifStatement                    shift and go to state 44
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 103

<<<<<<< HEAD
    (34) statement -> return empty statement .

    FINISH          reduce using rule 34 (statement -> return empty statement .)
    ENDDEFINE       reduce using rule 34 (statement -> return empty statement .)
    ELSE            reduce using rule 34 (statement -> return empty statement .)
    ENDIF           reduce using rule 34 (statement -> return empty statement .)
    ENDWHILE        reduce using rule 34 (statement -> return empty statement .)
=======
    (29) parameter -> variableType . IDENTIFIER parameterExtra

    IDENTIFIER      shift and go to state 135
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 104

<<<<<<< HEAD
    (35) statement -> ifStatement empty statement .

    FINISH          reduce using rule 35 (statement -> ifStatement empty statement .)
    ENDDEFINE       reduce using rule 35 (statement -> ifStatement empty statement .)
    ELSE            reduce using rule 35 (statement -> ifStatement empty statement .)
    ENDIF           reduce using rule 35 (statement -> ifStatement empty statement .)
    ENDWHILE        reduce using rule 35 (statement -> ifStatement empty statement .)
=======
    (28) parameters -> OPARENTHESIS parameter . CPARENTHESIS

    CPARENTHESIS    shift and go to state 136
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 105

<<<<<<< HEAD
    (36) statement -> whileStatement empty statement .

    FINISH          reduce using rule 36 (statement -> whileStatement empty statement .)
    ENDDEFINE       reduce using rule 36 (statement -> whileStatement empty statement .)
    ELSE            reduce using rule 36 (statement -> whileStatement empty statement .)
    ENDIF           reduce using rule 36 (statement -> whileStatement empty statement .)
    ENDWHILE        reduce using rule 36 (statement -> whileStatement empty statement .)
=======
    (30) parameter -> empty .

    CPARENTHESIS    reduce using rule 30 (parameter -> empty .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 106

<<<<<<< HEAD
    (38) assign -> location ASSIGNATION expression .
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression

    SEMICOLON       reduce using rule 38 (assign -> location ASSIGNATION expression .)
    OR              shift and go to state 78
    AND             shift and go to state 79
    LESSER          shift and go to state 80
    GREATER         shift and go to state 81
    EQUALITY        shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87
=======
    (48) return -> RETURN returnExpression SEMICOLON .

    IDENTIFIER      reduce using rule 48 (return -> RETURN returnExpression SEMICOLON .)
    RETURN          reduce using rule 48 (return -> RETURN returnExpression SEMICOLON .)
    IF              reduce using rule 48 (return -> RETURN returnExpression SEMICOLON .)
    WHILE           reduce using rule 48 (return -> RETURN returnExpression SEMICOLON .)
    FINISH          reduce using rule 48 (return -> RETURN returnExpression SEMICOLON .)
    ENDDEFINE       reduce using rule 48 (return -> RETURN returnExpression SEMICOLON .)
    ENDWHILE        reduce using rule 48 (return -> RETURN returnExpression SEMICOLON .)
    ELSE            reduce using rule 48 (return -> RETURN returnExpression SEMICOLON .)
    ENDIF           reduce using rule 48 (return -> RETURN returnExpression SEMICOLON .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 107

<<<<<<< HEAD
    (42) call -> IDENTIFIER OPARENTHESIS actuals . CPARENTHESIS

    CPARENTHESIS    shift and go to state 129
=======
    (54) whileStatement -> WHILE OPARENTHESIS expression . CPARENTHESIS statement ENDWHILE
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    CPARENTHESIS    shift and go to state 137
    OR              shift and go to state 93
    AND             shift and go to state 90
    LESSER          shift and go to state 92
    GREATER         shift and go to state 91
    EQUALITY        shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 108

<<<<<<< HEAD
    (43) actuals -> expression . commaExpressionList
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression
    (44) commaExpressionList -> . commaExpression commaExpressionList
    (45) commaExpressionList -> . empty
    (46) commaExpression -> . COMMA expression
    (2) empty -> .

    OR              shift and go to state 78
    AND             shift and go to state 79
    LESSER          shift and go to state 80
    GREATER         shift and go to state 81
    EQUALITY        shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87
    COMMA           shift and go to state 133
    CPARENTHESIS    reduce using rule 2 (empty -> .)
=======
    (34) statement -> call SEMICOLON statement .

    ENDWHILE        reduce using rule 34 (statement -> call SEMICOLON statement .)
    FINISH          reduce using rule 34 (statement -> call SEMICOLON statement .)
    ENDDEFINE       reduce using rule 34 (statement -> call SEMICOLON statement .)
    ELSE            reduce using rule 34 (statement -> call SEMICOLON statement .)
    ENDIF           reduce using rule 34 (statement -> call SEMICOLON statement .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    commaExpressionList            shift and go to state 130
    commaExpression                shift and go to state 131
    empty                          shift and go to state 132

state 109

<<<<<<< HEAD
    (40) location -> IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS

    CBRACKETS       shift and go to state 134
=======
    (39) assign -> location ASSIGNATION expression .
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    SEMICOLON       reduce using rule 39 (assign -> location ASSIGNATION expression .)
    OR              shift and go to state 93
    AND             shift and go to state 90
    LESSER          shift and go to state 92
    GREATER         shift and go to state 91
    EQUALITY        shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 110

<<<<<<< HEAD
    (47) return -> RETURN returnExpression SEMICOLON .

    IDENTIFIER      reduce using rule 47 (return -> RETURN returnExpression SEMICOLON .)
    RETURN          reduce using rule 47 (return -> RETURN returnExpression SEMICOLON .)
    IF              reduce using rule 47 (return -> RETURN returnExpression SEMICOLON .)
    WHILE           reduce using rule 47 (return -> RETURN returnExpression SEMICOLON .)
    FINISH          reduce using rule 47 (return -> RETURN returnExpression SEMICOLON .)
    ENDDEFINE       reduce using rule 47 (return -> RETURN returnExpression SEMICOLON .)
    ELSE            reduce using rule 47 (return -> RETURN returnExpression SEMICOLON .)
    ENDIF           reduce using rule 47 (return -> RETURN returnExpression SEMICOLON .)
    ENDWHILE        reduce using rule 47 (return -> RETURN returnExpression SEMICOLON .)
=======
    (41) location -> IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS

    CBRACKETS       shift and go to state 138
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 111

<<<<<<< HEAD
    (50) ifStatement -> IF OPARENTHESIS expression . CPARENTHESIS statement elseStatement ENDIF
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression

    CPARENTHESIS    shift and go to state 135
    OR              shift and go to state 78
    AND             shift and go to state 79
    LESSER          shift and go to state 80
    GREATER         shift and go to state 81
    EQUALITY        shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87
=======
    (43) call -> IDENTIFIER OPARENTHESIS actuals . CPARENTHESIS

    CPARENTHESIS    shift and go to state 139
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 112

<<<<<<< HEAD
    (53) whileStatement -> WHILE OPARENTHESIS expression . CPARENTHESIS statement ENDWHILE
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression

    CPARENTHESIS    shift and go to state 136
    OR              shift and go to state 78
    AND             shift and go to state 79
    LESSER          shift and go to state 80
    GREATER         shift and go to state 81
    EQUALITY        shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87

=======
    (44) actuals -> expression . commaExpressionList
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression
    (45) commaExpressionList -> . commaExpression commaExpressionList
    (46) commaExpressionList -> . empty
    (47) commaExpression -> . COMMA expression
    (2) empty -> .

    OR              shift and go to state 93
    AND             shift and go to state 90
    LESSER          shift and go to state 92
    GREATER         shift and go to state 91
    EQUALITY        shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89
    COMMA           shift and go to state 142
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    commaExpressionList            shift and go to state 140
    commaExpression                shift and go to state 141
    empty                          shift and go to state 143
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 113

<<<<<<< HEAD
    (20) block -> DEFINE blockType IDENTIFIER parameters variables . statement ENDDEFINE block
    (32) statement -> . assign SEMICOLON statement
    (33) statement -> . call SEMICOLON statement
    (34) statement -> . return empty statement
    (35) statement -> . ifStatement empty statement
    (36) statement -> . whileStatement empty statement
    (37) statement -> . empty
    (38) assign -> . location ASSIGNATION expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (47) return -> . RETURN returnExpression SEMICOLON
    (50) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
    (53) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
    (2) empty -> .
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call

    IDENTIFIER      shift and go to state 42
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    ENDDEFINE       reduce using rule 2 (empty -> .)
=======
    (35) statement -> return empty statement .

    ENDWHILE        reduce using rule 35 (statement -> return empty statement .)
    FINISH          reduce using rule 35 (statement -> return empty statement .)
    ENDDEFINE       reduce using rule 35 (statement -> return empty statement .)
    ELSE            reduce using rule 35 (statement -> return empty statement .)
    ENDIF           reduce using rule 35 (statement -> return empty statement .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    statement                      shift and go to state 137
    assign                         shift and go to state 35
    call                           shift and go to state 36
    return                         shift and go to state 37
    empty                          shift and go to state 38
    ifStatement                    shift and go to state 39
    whileStatement                 shift and go to state 40
    location                       shift and go to state 41

state 114

<<<<<<< HEAD
    (27) parameters -> OPARENTHESIS parameter . CPARENTHESIS

    CPARENTHESIS    shift and go to state 138
=======
    (36) statement -> ifStatement empty statement .

    ENDWHILE        reduce using rule 36 (statement -> ifStatement empty statement .)
    FINISH          reduce using rule 36 (statement -> ifStatement empty statement .)
    ENDDEFINE       reduce using rule 36 (statement -> ifStatement empty statement .)
    ELSE            reduce using rule 36 (statement -> ifStatement empty statement .)
    ENDIF           reduce using rule 36 (statement -> ifStatement empty statement .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 115

<<<<<<< HEAD
    (28) parameter -> variableType . IDENTIFIER parameterExtra

    IDENTIFIER      shift and go to state 139
=======
    (37) statement -> whileStatement empty statement .

    ENDWHILE        reduce using rule 37 (statement -> whileStatement empty statement .)
    FINISH          reduce using rule 37 (statement -> whileStatement empty statement .)
    ENDDEFINE       reduce using rule 37 (statement -> whileStatement empty statement .)
    ELSE            reduce using rule 37 (statement -> whileStatement empty statement .)
    ENDIF           reduce using rule 37 (statement -> whileStatement empty statement .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 116

<<<<<<< HEAD
    (29) parameter -> empty .

    CPARENTHESIS    reduce using rule 29 (parameter -> empty .)
=======
    (51) ifStatement -> IF OPARENTHESIS expression . CPARENTHESIS statement elseStatement ENDIF
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    CPARENTHESIS    shift and go to state 144
    OR              shift and go to state 93
    AND             shift and go to state 90
    LESSER          shift and go to state 92
    GREATER         shift and go to state 91
    EQUALITY        shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 117

<<<<<<< HEAD
    (6) declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON . declaration
    (6) declaration -> . variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> . variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> . variableType IDENTIFIER declarationExtra SEMICOLON declaration
    (9) declaration -> . empty
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (2) empty -> .

    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16
    ENDVARIABLES    reduce using rule 2 (empty -> .)
=======
    (33) statement -> assign SEMICOLON statement .

    ENDWHILE        reduce using rule 33 (statement -> assign SEMICOLON statement .)
    FINISH          reduce using rule 33 (statement -> assign SEMICOLON statement .)
    ENDDEFINE       reduce using rule 33 (statement -> assign SEMICOLON statement .)
    ELSE            reduce using rule 33 (statement -> assign SEMICOLON statement .)
    ENDIF           reduce using rule 33 (statement -> assign SEMICOLON statement .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    variableType                   shift and go to state 12
    declaration                    shift and go to state 140
    empty                          shift and go to state 13

state 118

<<<<<<< HEAD
    (62) binaryExpression -> expression OR expression .
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression

    OR              reduce using rule 62 (binaryExpression -> expression OR expression .)
    COMMA           reduce using rule 62 (binaryExpression -> expression OR expression .)
    SEMICOLON       reduce using rule 62 (binaryExpression -> expression OR expression .)
    CBRACKETS       reduce using rule 62 (binaryExpression -> expression OR expression .)
    CPARENTHESIS    reduce using rule 62 (binaryExpression -> expression OR expression .)
    AND             shift and go to state 79
    LESSER          shift and go to state 80
    GREATER         shift and go to state 81
    EQUALITY        shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87

  ! AND             [ reduce using rule 62 (binaryExpression -> expression OR expression .) ]
  ! LESSER          [ reduce using rule 62 (binaryExpression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 62 (binaryExpression -> expression OR expression .) ]
  ! EQUALITY        [ reduce using rule 62 (binaryExpression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 62 (binaryExpression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 62 (binaryExpression -> expression OR expression .) ]
  ! MULTIPLICATION  [ reduce using rule 62 (binaryExpression -> expression OR expression .) ]
  ! DIVISION        [ reduce using rule 62 (binaryExpression -> expression OR expression .) ]
  ! MODULUS         [ reduce using rule 62 (binaryExpression -> expression OR expression .) ]
  ! OR              [ shift and go to state 78 ]
=======
    (64) expression -> OPARENTHESIS expression CPARENTHESIS .

    OR              reduce using rule 64 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    AND             reduce using rule 64 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    LESSER          reduce using rule 64 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    GREATER         reduce using rule 64 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    EQUALITY        reduce using rule 64 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    PLUS            reduce using rule 64 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    MINUS           reduce using rule 64 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    MULTIPLICATION  reduce using rule 64 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    DIVISION        reduce using rule 64 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    MODULUS         reduce using rule 64 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    COMMA           reduce using rule 64 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    SEMICOLON       reduce using rule 64 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    CBRACKETS       reduce using rule 64 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    CPARENTHESIS    reduce using rule 64 (expression -> OPARENTHESIS expression CPARENTHESIS .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 119

<<<<<<< HEAD
    (63) binaryExpression -> expression AND expression .
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression

    OR              reduce using rule 63 (binaryExpression -> expression AND expression .)
    AND             reduce using rule 63 (binaryExpression -> expression AND expression .)
    COMMA           reduce using rule 63 (binaryExpression -> expression AND expression .)
    SEMICOLON       reduce using rule 63 (binaryExpression -> expression AND expression .)
    CBRACKETS       reduce using rule 63 (binaryExpression -> expression AND expression .)
    CPARENTHESIS    reduce using rule 63 (binaryExpression -> expression AND expression .)
    LESSER          shift and go to state 80
    GREATER         shift and go to state 81
    EQUALITY        shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87

  ! LESSER          [ reduce using rule 63 (binaryExpression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 63 (binaryExpression -> expression AND expression .) ]
  ! EQUALITY        [ reduce using rule 63 (binaryExpression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 63 (binaryExpression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 63 (binaryExpression -> expression AND expression .) ]
  ! MULTIPLICATION  [ reduce using rule 63 (binaryExpression -> expression AND expression .) ]
  ! DIVISION        [ reduce using rule 63 (binaryExpression -> expression AND expression .) ]
  ! MODULUS         [ reduce using rule 63 (binaryExpression -> expression AND expression .) ]
  ! OR              [ shift and go to state 78 ]
  ! AND             [ shift and go to state 79 ]
=======
    (72) binaryExpression -> expression MULTIPLICATION expression .
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    CPARENTHESIS    reduce using rule 72 (binaryExpression -> expression MULTIPLICATION expression .)
    OR              reduce using rule 72 (binaryExpression -> expression MULTIPLICATION expression .)
    AND             reduce using rule 72 (binaryExpression -> expression MULTIPLICATION expression .)
    LESSER          reduce using rule 72 (binaryExpression -> expression MULTIPLICATION expression .)
    GREATER         reduce using rule 72 (binaryExpression -> expression MULTIPLICATION expression .)
    EQUALITY        reduce using rule 72 (binaryExpression -> expression MULTIPLICATION expression .)
    PLUS            reduce using rule 72 (binaryExpression -> expression MULTIPLICATION expression .)
    MINUS           reduce using rule 72 (binaryExpression -> expression MULTIPLICATION expression .)
    MULTIPLICATION  reduce using rule 72 (binaryExpression -> expression MULTIPLICATION expression .)
    DIVISION        reduce using rule 72 (binaryExpression -> expression MULTIPLICATION expression .)
    MODULUS         reduce using rule 72 (binaryExpression -> expression MULTIPLICATION expression .)
    COMMA           reduce using rule 72 (binaryExpression -> expression MULTIPLICATION expression .)
    SEMICOLON       reduce using rule 72 (binaryExpression -> expression MULTIPLICATION expression .)
    CBRACKETS       reduce using rule 72 (binaryExpression -> expression MULTIPLICATION expression .)

  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 90 ]
  ! LESSER          [ shift and go to state 92 ]
  ! GREATER         [ shift and go to state 91 ]
  ! EQUALITY        [ shift and go to state 85 ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 84 ]
  ! MULTIPLICATION  [ shift and go to state 83 ]
  ! DIVISION        [ shift and go to state 87 ]
  ! MODULUS         [ shift and go to state 89 ]
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 120

<<<<<<< HEAD
    (64) binaryExpression -> expression LESSER expression .
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression

    OR              reduce using rule 64 (binaryExpression -> expression LESSER expression .)
    AND             reduce using rule 64 (binaryExpression -> expression LESSER expression .)
    LESSER          reduce using rule 64 (binaryExpression -> expression LESSER expression .)
    GREATER         reduce using rule 64 (binaryExpression -> expression LESSER expression .)
    EQUALITY        reduce using rule 64 (binaryExpression -> expression LESSER expression .)
    COMMA           reduce using rule 64 (binaryExpression -> expression LESSER expression .)
    SEMICOLON       reduce using rule 64 (binaryExpression -> expression LESSER expression .)
    CBRACKETS       reduce using rule 64 (binaryExpression -> expression LESSER expression .)
    CPARENTHESIS    reduce using rule 64 (binaryExpression -> expression LESSER expression .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87

  ! PLUS            [ reduce using rule 64 (binaryExpression -> expression LESSER expression .) ]
  ! MINUS           [ reduce using rule 64 (binaryExpression -> expression LESSER expression .) ]
  ! MULTIPLICATION  [ reduce using rule 64 (binaryExpression -> expression LESSER expression .) ]
  ! DIVISION        [ reduce using rule 64 (binaryExpression -> expression LESSER expression .) ]
  ! MODULUS         [ reduce using rule 64 (binaryExpression -> expression LESSER expression .) ]
  ! OR              [ shift and go to state 78 ]
  ! AND             [ shift and go to state 79 ]
  ! LESSER          [ shift and go to state 80 ]
  ! GREATER         [ shift and go to state 81 ]
  ! EQUALITY        [ shift and go to state 82 ]
=======
    (71) binaryExpression -> expression MINUS expression .
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    CPARENTHESIS    reduce using rule 71 (binaryExpression -> expression MINUS expression .)
    OR              reduce using rule 71 (binaryExpression -> expression MINUS expression .)
    AND             reduce using rule 71 (binaryExpression -> expression MINUS expression .)
    LESSER          reduce using rule 71 (binaryExpression -> expression MINUS expression .)
    GREATER         reduce using rule 71 (binaryExpression -> expression MINUS expression .)
    EQUALITY        reduce using rule 71 (binaryExpression -> expression MINUS expression .)
    PLUS            reduce using rule 71 (binaryExpression -> expression MINUS expression .)
    MINUS           reduce using rule 71 (binaryExpression -> expression MINUS expression .)
    COMMA           reduce using rule 71 (binaryExpression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 71 (binaryExpression -> expression MINUS expression .)
    CBRACKETS       reduce using rule 71 (binaryExpression -> expression MINUS expression .)
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89

  ! MULTIPLICATION  [ reduce using rule 71 (binaryExpression -> expression MINUS expression .) ]
  ! DIVISION        [ reduce using rule 71 (binaryExpression -> expression MINUS expression .) ]
  ! MODULUS         [ reduce using rule 71 (binaryExpression -> expression MINUS expression .) ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 90 ]
  ! LESSER          [ shift and go to state 92 ]
  ! GREATER         [ shift and go to state 91 ]
  ! EQUALITY        [ shift and go to state 85 ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 84 ]
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 121

<<<<<<< HEAD
    (65) binaryExpression -> expression GREATER expression .
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression

    OR              reduce using rule 65 (binaryExpression -> expression GREATER expression .)
    AND             reduce using rule 65 (binaryExpression -> expression GREATER expression .)
    LESSER          reduce using rule 65 (binaryExpression -> expression GREATER expression .)
    GREATER         reduce using rule 65 (binaryExpression -> expression GREATER expression .)
    EQUALITY        reduce using rule 65 (binaryExpression -> expression GREATER expression .)
    COMMA           reduce using rule 65 (binaryExpression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 65 (binaryExpression -> expression GREATER expression .)
    CBRACKETS       reduce using rule 65 (binaryExpression -> expression GREATER expression .)
    CPARENTHESIS    reduce using rule 65 (binaryExpression -> expression GREATER expression .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87

  ! PLUS            [ reduce using rule 65 (binaryExpression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 65 (binaryExpression -> expression GREATER expression .) ]
  ! MULTIPLICATION  [ reduce using rule 65 (binaryExpression -> expression GREATER expression .) ]
  ! DIVISION        [ reduce using rule 65 (binaryExpression -> expression GREATER expression .) ]
  ! MODULUS         [ reduce using rule 65 (binaryExpression -> expression GREATER expression .) ]
  ! OR              [ shift and go to state 78 ]
  ! AND             [ shift and go to state 79 ]
  ! LESSER          [ shift and go to state 80 ]
  ! GREATER         [ shift and go to state 81 ]
  ! EQUALITY        [ shift and go to state 82 ]
=======
    (69) binaryExpression -> expression EQUALITY expression .
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    CPARENTHESIS    reduce using rule 69 (binaryExpression -> expression EQUALITY expression .)
    OR              reduce using rule 69 (binaryExpression -> expression EQUALITY expression .)
    AND             reduce using rule 69 (binaryExpression -> expression EQUALITY expression .)
    EQUALITY        reduce using rule 69 (binaryExpression -> expression EQUALITY expression .)
    COMMA           reduce using rule 69 (binaryExpression -> expression EQUALITY expression .)
    SEMICOLON       reduce using rule 69 (binaryExpression -> expression EQUALITY expression .)
    CBRACKETS       reduce using rule 69 (binaryExpression -> expression EQUALITY expression .)
    LESSER          shift and go to state 92
    GREATER         shift and go to state 91
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89

  ! LESSER          [ reduce using rule 69 (binaryExpression -> expression EQUALITY expression .) ]
  ! GREATER         [ reduce using rule 69 (binaryExpression -> expression EQUALITY expression .) ]
  ! PLUS            [ reduce using rule 69 (binaryExpression -> expression EQUALITY expression .) ]
  ! MINUS           [ reduce using rule 69 (binaryExpression -> expression EQUALITY expression .) ]
  ! MULTIPLICATION  [ reduce using rule 69 (binaryExpression -> expression EQUALITY expression .) ]
  ! DIVISION        [ reduce using rule 69 (binaryExpression -> expression EQUALITY expression .) ]
  ! MODULUS         [ reduce using rule 69 (binaryExpression -> expression EQUALITY expression .) ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 90 ]
  ! EQUALITY        [ shift and go to state 85 ]
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 122

<<<<<<< HEAD
    (66) binaryExpression -> expression EQUALITY expression .
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression

    OR              reduce using rule 66 (binaryExpression -> expression EQUALITY expression .)
    AND             reduce using rule 66 (binaryExpression -> expression EQUALITY expression .)
    EQUALITY        reduce using rule 66 (binaryExpression -> expression EQUALITY expression .)
    COMMA           reduce using rule 66 (binaryExpression -> expression EQUALITY expression .)
    SEMICOLON       reduce using rule 66 (binaryExpression -> expression EQUALITY expression .)
    CBRACKETS       reduce using rule 66 (binaryExpression -> expression EQUALITY expression .)
    CPARENTHESIS    reduce using rule 66 (binaryExpression -> expression EQUALITY expression .)
    LESSER          shift and go to state 80
    GREATER         shift and go to state 81
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87

  ! LESSER          [ reduce using rule 66 (binaryExpression -> expression EQUALITY expression .) ]
  ! GREATER         [ reduce using rule 66 (binaryExpression -> expression EQUALITY expression .) ]
  ! PLUS            [ reduce using rule 66 (binaryExpression -> expression EQUALITY expression .) ]
  ! MINUS           [ reduce using rule 66 (binaryExpression -> expression EQUALITY expression .) ]
  ! MULTIPLICATION  [ reduce using rule 66 (binaryExpression -> expression EQUALITY expression .) ]
  ! DIVISION        [ reduce using rule 66 (binaryExpression -> expression EQUALITY expression .) ]
  ! MODULUS         [ reduce using rule 66 (binaryExpression -> expression EQUALITY expression .) ]
  ! OR              [ shift and go to state 78 ]
  ! AND             [ shift and go to state 79 ]
  ! EQUALITY        [ shift and go to state 82 ]
=======
    (70) binaryExpression -> expression PLUS expression .
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    CPARENTHESIS    reduce using rule 70 (binaryExpression -> expression PLUS expression .)
    OR              reduce using rule 70 (binaryExpression -> expression PLUS expression .)
    AND             reduce using rule 70 (binaryExpression -> expression PLUS expression .)
    LESSER          reduce using rule 70 (binaryExpression -> expression PLUS expression .)
    GREATER         reduce using rule 70 (binaryExpression -> expression PLUS expression .)
    EQUALITY        reduce using rule 70 (binaryExpression -> expression PLUS expression .)
    PLUS            reduce using rule 70 (binaryExpression -> expression PLUS expression .)
    MINUS           reduce using rule 70 (binaryExpression -> expression PLUS expression .)
    COMMA           reduce using rule 70 (binaryExpression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 70 (binaryExpression -> expression PLUS expression .)
    CBRACKETS       reduce using rule 70 (binaryExpression -> expression PLUS expression .)
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89

  ! MULTIPLICATION  [ reduce using rule 70 (binaryExpression -> expression PLUS expression .) ]
  ! DIVISION        [ reduce using rule 70 (binaryExpression -> expression PLUS expression .) ]
  ! MODULUS         [ reduce using rule 70 (binaryExpression -> expression PLUS expression .) ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 90 ]
  ! LESSER          [ shift and go to state 92 ]
  ! GREATER         [ shift and go to state 91 ]
  ! EQUALITY        [ shift and go to state 85 ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 84 ]
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 123

<<<<<<< HEAD
    (67) binaryExpression -> expression PLUS expression .
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression

    OR              reduce using rule 67 (binaryExpression -> expression PLUS expression .)
    AND             reduce using rule 67 (binaryExpression -> expression PLUS expression .)
    LESSER          reduce using rule 67 (binaryExpression -> expression PLUS expression .)
    GREATER         reduce using rule 67 (binaryExpression -> expression PLUS expression .)
    EQUALITY        reduce using rule 67 (binaryExpression -> expression PLUS expression .)
    PLUS            reduce using rule 67 (binaryExpression -> expression PLUS expression .)
    MINUS           reduce using rule 67 (binaryExpression -> expression PLUS expression .)
    COMMA           reduce using rule 67 (binaryExpression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 67 (binaryExpression -> expression PLUS expression .)
    CBRACKETS       reduce using rule 67 (binaryExpression -> expression PLUS expression .)
    CPARENTHESIS    reduce using rule 67 (binaryExpression -> expression PLUS expression .)
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87

  ! MULTIPLICATION  [ reduce using rule 67 (binaryExpression -> expression PLUS expression .) ]
  ! DIVISION        [ reduce using rule 67 (binaryExpression -> expression PLUS expression .) ]
  ! MODULUS         [ reduce using rule 67 (binaryExpression -> expression PLUS expression .) ]
  ! OR              [ shift and go to state 78 ]
  ! AND             [ shift and go to state 79 ]
  ! LESSER          [ shift and go to state 80 ]
  ! GREATER         [ shift and go to state 81 ]
  ! EQUALITY        [ shift and go to state 82 ]
  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
=======
    (73) binaryExpression -> expression DIVISION expression .
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    CPARENTHESIS    reduce using rule 73 (binaryExpression -> expression DIVISION expression .)
    OR              reduce using rule 73 (binaryExpression -> expression DIVISION expression .)
    AND             reduce using rule 73 (binaryExpression -> expression DIVISION expression .)
    LESSER          reduce using rule 73 (binaryExpression -> expression DIVISION expression .)
    GREATER         reduce using rule 73 (binaryExpression -> expression DIVISION expression .)
    EQUALITY        reduce using rule 73 (binaryExpression -> expression DIVISION expression .)
    PLUS            reduce using rule 73 (binaryExpression -> expression DIVISION expression .)
    MINUS           reduce using rule 73 (binaryExpression -> expression DIVISION expression .)
    MULTIPLICATION  reduce using rule 73 (binaryExpression -> expression DIVISION expression .)
    DIVISION        reduce using rule 73 (binaryExpression -> expression DIVISION expression .)
    MODULUS         reduce using rule 73 (binaryExpression -> expression DIVISION expression .)
    COMMA           reduce using rule 73 (binaryExpression -> expression DIVISION expression .)
    SEMICOLON       reduce using rule 73 (binaryExpression -> expression DIVISION expression .)
    CBRACKETS       reduce using rule 73 (binaryExpression -> expression DIVISION expression .)

  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 90 ]
  ! LESSER          [ shift and go to state 92 ]
  ! GREATER         [ shift and go to state 91 ]
  ! EQUALITY        [ shift and go to state 85 ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 84 ]
  ! MULTIPLICATION  [ shift and go to state 83 ]
  ! DIVISION        [ shift and go to state 87 ]
  ! MODULUS         [ shift and go to state 89 ]
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 124

<<<<<<< HEAD
    (68) binaryExpression -> expression MINUS expression .
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression

    OR              reduce using rule 68 (binaryExpression -> expression MINUS expression .)
    AND             reduce using rule 68 (binaryExpression -> expression MINUS expression .)
    LESSER          reduce using rule 68 (binaryExpression -> expression MINUS expression .)
    GREATER         reduce using rule 68 (binaryExpression -> expression MINUS expression .)
    EQUALITY        reduce using rule 68 (binaryExpression -> expression MINUS expression .)
    PLUS            reduce using rule 68 (binaryExpression -> expression MINUS expression .)
    MINUS           reduce using rule 68 (binaryExpression -> expression MINUS expression .)
    COMMA           reduce using rule 68 (binaryExpression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 68 (binaryExpression -> expression MINUS expression .)
    CBRACKETS       reduce using rule 68 (binaryExpression -> expression MINUS expression .)
    CPARENTHESIS    reduce using rule 68 (binaryExpression -> expression MINUS expression .)
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87

  ! MULTIPLICATION  [ reduce using rule 68 (binaryExpression -> expression MINUS expression .) ]
  ! DIVISION        [ reduce using rule 68 (binaryExpression -> expression MINUS expression .) ]
  ! MODULUS         [ reduce using rule 68 (binaryExpression -> expression MINUS expression .) ]
  ! OR              [ shift and go to state 78 ]
  ! AND             [ shift and go to state 79 ]
  ! LESSER          [ shift and go to state 80 ]
  ! GREATER         [ shift and go to state 81 ]
  ! EQUALITY        [ shift and go to state 82 ]
  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]

=======
    (6) declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON . declaration
    (6) declaration -> . variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> . variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> . variableType IDENTIFIER declarationExtra SEMICOLON declaration
    (9) declaration -> . empty
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (27) variableType -> . FLAG
    (2) empty -> .

    NUMBER          shift and go to state 13
    WORDS           shift and go to state 11
    LETTER          shift and go to state 15
    FLAG            shift and go to state 14
    ENDVARIABLES    reduce using rule 2 (empty -> .)

    variableType                   shift and go to state 12
    declaration                    shift and go to state 145
    empty                          shift and go to state 17
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 125

<<<<<<< HEAD
    (69) binaryExpression -> expression MULTIPLICATION expression .
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression

    OR              reduce using rule 69 (binaryExpression -> expression MULTIPLICATION expression .)
    AND             reduce using rule 69 (binaryExpression -> expression MULTIPLICATION expression .)
    LESSER          reduce using rule 69 (binaryExpression -> expression MULTIPLICATION expression .)
    GREATER         reduce using rule 69 (binaryExpression -> expression MULTIPLICATION expression .)
    EQUALITY        reduce using rule 69 (binaryExpression -> expression MULTIPLICATION expression .)
    PLUS            reduce using rule 69 (binaryExpression -> expression MULTIPLICATION expression .)
    MINUS           reduce using rule 69 (binaryExpression -> expression MULTIPLICATION expression .)
    MULTIPLICATION  reduce using rule 69 (binaryExpression -> expression MULTIPLICATION expression .)
    DIVISION        reduce using rule 69 (binaryExpression -> expression MULTIPLICATION expression .)
    MODULUS         reduce using rule 69 (binaryExpression -> expression MULTIPLICATION expression .)
    COMMA           reduce using rule 69 (binaryExpression -> expression MULTIPLICATION expression .)
    SEMICOLON       reduce using rule 69 (binaryExpression -> expression MULTIPLICATION expression .)
    CBRACKETS       reduce using rule 69 (binaryExpression -> expression MULTIPLICATION expression .)
    CPARENTHESIS    reduce using rule 69 (binaryExpression -> expression MULTIPLICATION expression .)

  ! OR              [ shift and go to state 78 ]
  ! AND             [ shift and go to state 79 ]
  ! LESSER          [ shift and go to state 80 ]
  ! GREATER         [ shift and go to state 81 ]
  ! EQUALITY        [ shift and go to state 82 ]
  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
  ! MULTIPLICATION  [ shift and go to state 85 ]
  ! DIVISION        [ shift and go to state 86 ]
  ! MODULUS         [ shift and go to state 87 ]
=======
    (74) binaryExpression -> expression MODULUS expression .
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    CPARENTHESIS    reduce using rule 74 (binaryExpression -> expression MODULUS expression .)
    OR              reduce using rule 74 (binaryExpression -> expression MODULUS expression .)
    AND             reduce using rule 74 (binaryExpression -> expression MODULUS expression .)
    LESSER          reduce using rule 74 (binaryExpression -> expression MODULUS expression .)
    GREATER         reduce using rule 74 (binaryExpression -> expression MODULUS expression .)
    EQUALITY        reduce using rule 74 (binaryExpression -> expression MODULUS expression .)
    PLUS            reduce using rule 74 (binaryExpression -> expression MODULUS expression .)
    MINUS           reduce using rule 74 (binaryExpression -> expression MODULUS expression .)
    MULTIPLICATION  reduce using rule 74 (binaryExpression -> expression MODULUS expression .)
    DIVISION        reduce using rule 74 (binaryExpression -> expression MODULUS expression .)
    MODULUS         reduce using rule 74 (binaryExpression -> expression MODULUS expression .)
    COMMA           reduce using rule 74 (binaryExpression -> expression MODULUS expression .)
    SEMICOLON       reduce using rule 74 (binaryExpression -> expression MODULUS expression .)
    CBRACKETS       reduce using rule 74 (binaryExpression -> expression MODULUS expression .)

  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 90 ]
  ! LESSER          [ shift and go to state 92 ]
  ! GREATER         [ shift and go to state 91 ]
  ! EQUALITY        [ shift and go to state 85 ]
  ! PLUS            [ shift and go to state 86 ]
  ! MINUS           [ shift and go to state 84 ]
  ! MULTIPLICATION  [ shift and go to state 83 ]
  ! DIVISION        [ shift and go to state 87 ]
  ! MODULUS         [ shift and go to state 89 ]
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 126

<<<<<<< HEAD
    (70) binaryExpression -> expression DIVISION expression .
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression

    OR              reduce using rule 70 (binaryExpression -> expression DIVISION expression .)
    AND             reduce using rule 70 (binaryExpression -> expression DIVISION expression .)
    LESSER          reduce using rule 70 (binaryExpression -> expression DIVISION expression .)
    GREATER         reduce using rule 70 (binaryExpression -> expression DIVISION expression .)
    EQUALITY        reduce using rule 70 (binaryExpression -> expression DIVISION expression .)
    PLUS            reduce using rule 70 (binaryExpression -> expression DIVISION expression .)
    MINUS           reduce using rule 70 (binaryExpression -> expression DIVISION expression .)
    MULTIPLICATION  reduce using rule 70 (binaryExpression -> expression DIVISION expression .)
    DIVISION        reduce using rule 70 (binaryExpression -> expression DIVISION expression .)
    MODULUS         reduce using rule 70 (binaryExpression -> expression DIVISION expression .)
    COMMA           reduce using rule 70 (binaryExpression -> expression DIVISION expression .)
    SEMICOLON       reduce using rule 70 (binaryExpression -> expression DIVISION expression .)
    CBRACKETS       reduce using rule 70 (binaryExpression -> expression DIVISION expression .)
    CPARENTHESIS    reduce using rule 70 (binaryExpression -> expression DIVISION expression .)

  ! OR              [ shift and go to state 78 ]
  ! AND             [ shift and go to state 79 ]
  ! LESSER          [ shift and go to state 80 ]
  ! GREATER         [ shift and go to state 81 ]
  ! EQUALITY        [ shift and go to state 82 ]
  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
  ! MULTIPLICATION  [ shift and go to state 85 ]
  ! DIVISION        [ shift and go to state 86 ]
  ! MODULUS         [ shift and go to state 87 ]
=======
    (66) binaryExpression -> expression AND expression .
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    CPARENTHESIS    reduce using rule 66 (binaryExpression -> expression AND expression .)
    OR              reduce using rule 66 (binaryExpression -> expression AND expression .)
    AND             reduce using rule 66 (binaryExpression -> expression AND expression .)
    COMMA           reduce using rule 66 (binaryExpression -> expression AND expression .)
    SEMICOLON       reduce using rule 66 (binaryExpression -> expression AND expression .)
    CBRACKETS       reduce using rule 66 (binaryExpression -> expression AND expression .)
    LESSER          shift and go to state 92
    GREATER         shift and go to state 91
    EQUALITY        shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89

  ! LESSER          [ reduce using rule 66 (binaryExpression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 66 (binaryExpression -> expression AND expression .) ]
  ! EQUALITY        [ reduce using rule 66 (binaryExpression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 66 (binaryExpression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 66 (binaryExpression -> expression AND expression .) ]
  ! MULTIPLICATION  [ reduce using rule 66 (binaryExpression -> expression AND expression .) ]
  ! DIVISION        [ reduce using rule 66 (binaryExpression -> expression AND expression .) ]
  ! MODULUS         [ reduce using rule 66 (binaryExpression -> expression AND expression .) ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 90 ]
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 127

<<<<<<< HEAD
    (71) binaryExpression -> expression MODULUS expression .
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression

    OR              reduce using rule 71 (binaryExpression -> expression MODULUS expression .)
    AND             reduce using rule 71 (binaryExpression -> expression MODULUS expression .)
    LESSER          reduce using rule 71 (binaryExpression -> expression MODULUS expression .)
    GREATER         reduce using rule 71 (binaryExpression -> expression MODULUS expression .)
    EQUALITY        reduce using rule 71 (binaryExpression -> expression MODULUS expression .)
    PLUS            reduce using rule 71 (binaryExpression -> expression MODULUS expression .)
    MINUS           reduce using rule 71 (binaryExpression -> expression MODULUS expression .)
    MULTIPLICATION  reduce using rule 71 (binaryExpression -> expression MODULUS expression .)
    DIVISION        reduce using rule 71 (binaryExpression -> expression MODULUS expression .)
    MODULUS         reduce using rule 71 (binaryExpression -> expression MODULUS expression .)
    COMMA           reduce using rule 71 (binaryExpression -> expression MODULUS expression .)
    SEMICOLON       reduce using rule 71 (binaryExpression -> expression MODULUS expression .)
    CBRACKETS       reduce using rule 71 (binaryExpression -> expression MODULUS expression .)
    CPARENTHESIS    reduce using rule 71 (binaryExpression -> expression MODULUS expression .)

  ! OR              [ shift and go to state 78 ]
  ! AND             [ shift and go to state 79 ]
  ! LESSER          [ shift and go to state 80 ]
  ! GREATER         [ shift and go to state 81 ]
  ! EQUALITY        [ shift and go to state 82 ]
  ! PLUS            [ shift and go to state 83 ]
  ! MINUS           [ shift and go to state 84 ]
  ! MULTIPLICATION  [ shift and go to state 85 ]
  ! DIVISION        [ shift and go to state 86 ]
  ! MODULUS         [ shift and go to state 87 ]
=======
    (68) binaryExpression -> expression GREATER expression .
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    CPARENTHESIS    reduce using rule 68 (binaryExpression -> expression GREATER expression .)
    OR              reduce using rule 68 (binaryExpression -> expression GREATER expression .)
    AND             reduce using rule 68 (binaryExpression -> expression GREATER expression .)
    LESSER          reduce using rule 68 (binaryExpression -> expression GREATER expression .)
    GREATER         reduce using rule 68 (binaryExpression -> expression GREATER expression .)
    EQUALITY        reduce using rule 68 (binaryExpression -> expression GREATER expression .)
    COMMA           reduce using rule 68 (binaryExpression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 68 (binaryExpression -> expression GREATER expression .)
    CBRACKETS       reduce using rule 68 (binaryExpression -> expression GREATER expression .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89

  ! PLUS            [ reduce using rule 68 (binaryExpression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 68 (binaryExpression -> expression GREATER expression .) ]
  ! MULTIPLICATION  [ reduce using rule 68 (binaryExpression -> expression GREATER expression .) ]
  ! DIVISION        [ reduce using rule 68 (binaryExpression -> expression GREATER expression .) ]
  ! MODULUS         [ reduce using rule 68 (binaryExpression -> expression GREATER expression .) ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 90 ]
  ! LESSER          [ shift and go to state 92 ]
  ! GREATER         [ shift and go to state 91 ]
  ! EQUALITY        [ shift and go to state 85 ]
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 128

<<<<<<< HEAD
    (61) expression -> OPARENTHESIS expression CPARENTHESIS .

    OR              reduce using rule 61 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    AND             reduce using rule 61 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    LESSER          reduce using rule 61 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    GREATER         reduce using rule 61 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    EQUALITY        reduce using rule 61 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    PLUS            reduce using rule 61 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    MINUS           reduce using rule 61 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    MULTIPLICATION  reduce using rule 61 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    DIVISION        reduce using rule 61 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    MODULUS         reduce using rule 61 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    COMMA           reduce using rule 61 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    SEMICOLON       reduce using rule 61 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    CBRACKETS       reduce using rule 61 (expression -> OPARENTHESIS expression CPARENTHESIS .)
    CPARENTHESIS    reduce using rule 61 (expression -> OPARENTHESIS expression CPARENTHESIS .)


state 125

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION . expression declarationExtra SEMICOLON declaration
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    expression                     shift and go to state 141
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 126

    (16) arrayIndexesExtra -> COMMA expression . arrayIndexesExtra
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression
=======
    (67) binaryExpression -> expression LESSER expression .
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    CPARENTHESIS    reduce using rule 67 (binaryExpression -> expression LESSER expression .)
    OR              reduce using rule 67 (binaryExpression -> expression LESSER expression .)
    AND             reduce using rule 67 (binaryExpression -> expression LESSER expression .)
    LESSER          reduce using rule 67 (binaryExpression -> expression LESSER expression .)
    GREATER         reduce using rule 67 (binaryExpression -> expression LESSER expression .)
    EQUALITY        reduce using rule 67 (binaryExpression -> expression LESSER expression .)
    COMMA           reduce using rule 67 (binaryExpression -> expression LESSER expression .)
    SEMICOLON       reduce using rule 67 (binaryExpression -> expression LESSER expression .)
    CBRACKETS       reduce using rule 67 (binaryExpression -> expression LESSER expression .)
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89

  ! PLUS            [ reduce using rule 67 (binaryExpression -> expression LESSER expression .) ]
  ! MINUS           [ reduce using rule 67 (binaryExpression -> expression LESSER expression .) ]
  ! MULTIPLICATION  [ reduce using rule 67 (binaryExpression -> expression LESSER expression .) ]
  ! DIVISION        [ reduce using rule 67 (binaryExpression -> expression LESSER expression .) ]
  ! MODULUS         [ reduce using rule 67 (binaryExpression -> expression LESSER expression .) ]
  ! OR              [ shift and go to state 93 ]
  ! AND             [ shift and go to state 90 ]
  ! LESSER          [ shift and go to state 92 ]
  ! GREATER         [ shift and go to state 91 ]
  ! EQUALITY        [ shift and go to state 85 ]


state 129

    (65) binaryExpression -> expression OR expression .
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    CPARENTHESIS    reduce using rule 65 (binaryExpression -> expression OR expression .)
    OR              reduce using rule 65 (binaryExpression -> expression OR expression .)
    COMMA           reduce using rule 65 (binaryExpression -> expression OR expression .)
    SEMICOLON       reduce using rule 65 (binaryExpression -> expression OR expression .)
    CBRACKETS       reduce using rule 65 (binaryExpression -> expression OR expression .)
    AND             shift and go to state 90
    LESSER          shift and go to state 92
    GREATER         shift and go to state 91
    EQUALITY        shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89

  ! AND             [ reduce using rule 65 (binaryExpression -> expression OR expression .) ]
  ! LESSER          [ reduce using rule 65 (binaryExpression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 65 (binaryExpression -> expression OR expression .) ]
  ! EQUALITY        [ reduce using rule 65 (binaryExpression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 65 (binaryExpression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 65 (binaryExpression -> expression OR expression .) ]
  ! MULTIPLICATION  [ reduce using rule 65 (binaryExpression -> expression OR expression .) ]
  ! DIVISION        [ reduce using rule 65 (binaryExpression -> expression OR expression .) ]
  ! MODULUS         [ reduce using rule 65 (binaryExpression -> expression OR expression .) ]
  ! OR              [ shift and go to state 93 ]


state 130

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION . expression declarationExtra SEMICOLON declaration
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    call                           shift and go to state 53
    location                       shift and go to state 56
    unaryExpression                shift and go to state 57
    expression                     shift and go to state 146
    binaryExpression               shift and go to state 54

state 131

    (16) arrayIndexesExtra -> COMMA expression . arrayIndexesExtra
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    (16) arrayIndexesExtra -> . COMMA expression arrayIndexesExtra
    (17) arrayIndexesExtra -> . empty
    (2) empty -> .

<<<<<<< HEAD
    OR              shift and go to state 78
    AND             shift and go to state 79
    LESSER          shift and go to state 80
    GREATER         shift and go to state 81
    EQUALITY        shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87
    COMMA           shift and go to state 92
    CBRACKETS       reduce using rule 2 (empty -> .)

    arrayIndexesExtra              shift and go to state 142
    empty                          shift and go to state 93

state 127

    (10) declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression . declarationExtra
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression
=======
    OR              shift and go to state 93
    AND             shift and go to state 90
    LESSER          shift and go to state 92
    GREATER         shift and go to state 91
    EQUALITY        shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89
    COMMA           shift and go to state 96
    CBRACKETS       reduce using rule 2 (empty -> .)

    arrayIndexesExtra              shift and go to state 147
    empty                          shift and go to state 97

state 132

    (10) declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression . declarationExtra
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

<<<<<<< HEAD
    OR              shift and go to state 78
    AND             shift and go to state 79
    LESSER          shift and go to state 80
    GREATER         shift and go to state 81
    EQUALITY        shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 143
    empty                          shift and go to state 33

state 128
=======
    OR              shift and go to state 93
    AND             shift and go to state 90
    LESSER          shift and go to state 92
    GREATER         shift and go to state 91
    EQUALITY        shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    empty                          shift and go to state 34
    declarationExtra               shift and go to state 148

state 133
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS ASSIGNATION expression declarationExtra
    (13) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS declarationExtra

<<<<<<< HEAD
    CBRACKETS       shift and go to state 144


state 129

    (42) call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .

    SEMICOLON       reduce using rule 42 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    ASSIGNATION     reduce using rule 42 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    OR              reduce using rule 42 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    AND             reduce using rule 42 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    LESSER          reduce using rule 42 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    GREATER         reduce using rule 42 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    EQUALITY        reduce using rule 42 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    PLUS            reduce using rule 42 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    MINUS           reduce using rule 42 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    MULTIPLICATION  reduce using rule 42 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    DIVISION        reduce using rule 42 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    MODULUS         reduce using rule 42 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    COMMA           reduce using rule 42 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    CBRACKETS       reduce using rule 42 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    CPARENTHESIS    reduce using rule 42 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)


state 130
=======
    CBRACKETS       shift and go to state 149


state 134

    (20) block -> DEFINE blockType IDENTIFIER parameters variables statement . ENDDEFINE block

    ENDDEFINE       shift and go to state 150


state 135

    (29) parameter -> variableType IDENTIFIER . parameterExtra
    (31) parameterExtra -> . COMMA variableType IDENTIFIER parameterExtra
    (32) parameterExtra -> . empty
    (2) empty -> .

    COMMA           shift and go to state 151
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    empty                          shift and go to state 152
    parameterExtra                 shift and go to state 153

state 136

    (28) parameters -> OPARENTHESIS parameter CPARENTHESIS .

    VARIABLES       reduce using rule 28 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    IDENTIFIER      reduce using rule 28 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    RETURN          reduce using rule 28 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    IF              reduce using rule 28 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    WHILE           reduce using rule 28 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    ENDDEFINE       reduce using rule 28 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)


state 137

    (54) whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS . statement ENDWHILE
    (33) statement -> . assign SEMICOLON statement
    (34) statement -> . call SEMICOLON statement
    (35) statement -> . return empty statement
    (36) statement -> . ifStatement empty statement
    (37) statement -> . whileStatement empty statement
    (38) statement -> . empty
    (39) assign -> . location ASSIGNATION expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (48) return -> . RETURN returnExpression SEMICOLON
    (51) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
    (54) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
    (2) empty -> .
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call

    IDENTIFIER      shift and go to state 41
    RETURN          shift and go to state 36
    IF              shift and go to state 46
    WHILE           shift and go to state 37
    ENDWHILE        reduce using rule 2 (empty -> .)

    return                         shift and go to state 43
    whileStatement                 shift and go to state 45
    call                           shift and go to state 38
    location                       shift and go to state 39
    statement                      shift and go to state 154
    assign                         shift and go to state 47
    empty                          shift and go to state 42
    ifStatement                    shift and go to state 44

state 138

    (41) location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .

    OR              reduce using rule 41 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    AND             reduce using rule 41 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    LESSER          reduce using rule 41 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    GREATER         reduce using rule 41 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    EQUALITY        reduce using rule 41 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    PLUS            reduce using rule 41 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    MINUS           reduce using rule 41 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    MULTIPLICATION  reduce using rule 41 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    DIVISION        reduce using rule 41 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    MODULUS         reduce using rule 41 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    COMMA           reduce using rule 41 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    CPARENTHESIS    reduce using rule 41 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    CBRACKETS       reduce using rule 41 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    SEMICOLON       reduce using rule 41 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    ASSIGNATION     reduce using rule 41 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)


state 139

    (43) call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .

    OR              reduce using rule 43 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    AND             reduce using rule 43 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    LESSER          reduce using rule 43 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    GREATER         reduce using rule 43 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    EQUALITY        reduce using rule 43 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    PLUS            reduce using rule 43 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    MINUS           reduce using rule 43 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    MULTIPLICATION  reduce using rule 43 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    DIVISION        reduce using rule 43 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    MODULUS         reduce using rule 43 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    COMMA           reduce using rule 43 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    SEMICOLON       reduce using rule 43 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    CBRACKETS       reduce using rule 43 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    CPARENTHESIS    reduce using rule 43 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)
    ASSIGNATION     reduce using rule 43 (call -> IDENTIFIER OPARENTHESIS actuals CPARENTHESIS .)


state 140
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (44) actuals -> expression commaExpressionList .

    CPARENTHESIS    reduce using rule 44 (actuals -> expression commaExpressionList .)


<<<<<<< HEAD
state 131
=======
state 141
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (45) commaExpressionList -> commaExpression . commaExpressionList
    (45) commaExpressionList -> . commaExpression commaExpressionList
    (46) commaExpressionList -> . empty
    (47) commaExpression -> . COMMA expression
    (2) empty -> .

<<<<<<< HEAD
    COMMA           shift and go to state 133
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    commaExpression                shift and go to state 131
    commaExpressionList            shift and go to state 145
    empty                          shift and go to state 132

state 132

    (45) commaExpressionList -> empty .

    CPARENTHESIS    reduce using rule 45 (commaExpressionList -> empty .)


state 133

    (46) commaExpression -> COMMA . expression
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    expression                     shift and go to state 146
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 134

    (40) location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .

    ASSIGNATION     reduce using rule 40 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    OR              reduce using rule 40 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    AND             reduce using rule 40 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    LESSER          reduce using rule 40 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    GREATER         reduce using rule 40 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    EQUALITY        reduce using rule 40 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    PLUS            reduce using rule 40 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    MINUS           reduce using rule 40 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    MULTIPLICATION  reduce using rule 40 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    DIVISION        reduce using rule 40 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    MODULUS         reduce using rule 40 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    COMMA           reduce using rule 40 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    SEMICOLON       reduce using rule 40 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    CBRACKETS       reduce using rule 40 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)
    CPARENTHESIS    reduce using rule 40 (location -> IDENTIFIER OBRACKETS arrayIndexes CBRACKETS .)


state 135
=======
    COMMA           shift and go to state 142
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    commaExpression                shift and go to state 141
    commaExpressionList            shift and go to state 155
    empty                          shift and go to state 143

state 142

    (47) commaExpression -> COMMA . expression
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 156

state 143

    (46) commaExpressionList -> empty .

    CPARENTHESIS    reduce using rule 46 (commaExpressionList -> empty .)


state 144
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (51) ifStatement -> IF OPARENTHESIS expression CPARENTHESIS . statement elseStatement ENDIF
    (33) statement -> . assign SEMICOLON statement
    (34) statement -> . call SEMICOLON statement
    (35) statement -> . return empty statement
    (36) statement -> . ifStatement empty statement
    (37) statement -> . whileStatement empty statement
    (38) statement -> . empty
    (39) assign -> . location ASSIGNATION expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (48) return -> . RETURN returnExpression SEMICOLON
    (51) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
    (54) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
    (2) empty -> .
<<<<<<< HEAD
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call

    IDENTIFIER      shift and go to state 42
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    ELSE            reduce using rule 2 (empty -> .)
    ENDIF           reduce using rule 2 (empty -> .)

    statement                      shift and go to state 147
    assign                         shift and go to state 35
    call                           shift and go to state 36
    return                         shift and go to state 37
    empty                          shift and go to state 38
    ifStatement                    shift and go to state 39
    whileStatement                 shift and go to state 40
    location                       shift and go to state 41

state 136

    (53) whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS . statement ENDWHILE
    (32) statement -> . assign SEMICOLON statement
    (33) statement -> . call SEMICOLON statement
    (34) statement -> . return empty statement
    (35) statement -> . ifStatement empty statement
    (36) statement -> . whileStatement empty statement
    (37) statement -> . empty
    (38) assign -> . location ASSIGNATION expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (47) return -> . RETURN returnExpression SEMICOLON
    (50) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
    (53) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
    (2) empty -> .
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call

    IDENTIFIER      shift and go to state 42
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    ENDWHILE        reduce using rule 2 (empty -> .)

    statement                      shift and go to state 148
    assign                         shift and go to state 35
    call                           shift and go to state 36
    return                         shift and go to state 37
    empty                          shift and go to state 38
    ifStatement                    shift and go to state 39
    whileStatement                 shift and go to state 40
    location                       shift and go to state 41

state 137

    (20) block -> DEFINE blockType IDENTIFIER parameters variables statement . ENDDEFINE block

    ENDDEFINE       shift and go to state 149


state 138

    (27) parameters -> OPARENTHESIS parameter CPARENTHESIS .

    VARIABLES       reduce using rule 27 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    IDENTIFIER      reduce using rule 27 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    RETURN          reduce using rule 27 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    IF              reduce using rule 27 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    WHILE           reduce using rule 27 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    ENDDEFINE       reduce using rule 27 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)


state 139

    (28) parameter -> variableType IDENTIFIER . parameterExtra
    (30) parameterExtra -> . COMMA variableType IDENTIFIER parameterExtra
    (31) parameterExtra -> . empty
    (2) empty -> .

    COMMA           shift and go to state 151
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    parameterExtra                 shift and go to state 150
    empty                          shift and go to state 152

state 140
=======
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call

    IDENTIFIER      shift and go to state 41
    RETURN          shift and go to state 36
    IF              shift and go to state 46
    WHILE           shift and go to state 37
    ELSE            reduce using rule 2 (empty -> .)
    ENDIF           reduce using rule 2 (empty -> .)

    return                         shift and go to state 43
    whileStatement                 shift and go to state 45
    call                           shift and go to state 38
    location                       shift and go to state 39
    statement                      shift and go to state 157
    assign                         shift and go to state 47
    empty                          shift and go to state 42
    ifStatement                    shift and go to state 44

state 145
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (6) declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration .

    ENDVARIABLES    reduce using rule 6 (declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration .)


<<<<<<< HEAD
state 141

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression . declarationExtra SEMICOLON declaration
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression
=======
state 146

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression . declarationExtra SEMICOLON declaration
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

<<<<<<< HEAD
    OR              shift and go to state 78
    AND             shift and go to state 79
    LESSER          shift and go to state 80
    GREATER         shift and go to state 81
    EQUALITY        shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 153
    empty                          shift and go to state 33

state 142
=======
    OR              shift and go to state 93
    AND             shift and go to state 90
    LESSER          shift and go to state 92
    GREATER         shift and go to state 91
    EQUALITY        shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 158
    empty                          shift and go to state 34

state 147
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (16) arrayIndexesExtra -> COMMA expression arrayIndexesExtra .

    CBRACKETS       reduce using rule 16 (arrayIndexesExtra -> COMMA expression arrayIndexesExtra .)


<<<<<<< HEAD
state 143
=======
state 148
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (10) declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression declarationExtra .

    SEMICOLON       reduce using rule 10 (declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression declarationExtra .)


<<<<<<< HEAD
state 144
=======
state 149
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS . ASSIGNATION expression declarationExtra
    (13) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS . declarationExtra
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

<<<<<<< HEAD
    ASSIGNATION     shift and go to state 154
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 155
    empty                          shift and go to state 33

state 145

    (44) commaExpressionList -> commaExpression commaExpressionList .

    CPARENTHESIS    reduce using rule 44 (commaExpressionList -> commaExpression commaExpressionList .)

=======
    ASSIGNATION     shift and go to state 159
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    empty                          shift and go to state 34
    declarationExtra               shift and go to state 160
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 150

    (46) commaExpression -> COMMA expression .
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression

<<<<<<< HEAD
    COMMA           reduce using rule 46 (commaExpression -> COMMA expression .)
    CPARENTHESIS    reduce using rule 46 (commaExpression -> COMMA expression .)
    OR              shift and go to state 78
    AND             shift and go to state 79
    LESSER          shift and go to state 80
    GREATER         shift and go to state 81
    EQUALITY        shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87

=======
    DEFINE          shift and go to state 20
    ENDBLOCKS       reduce using rule 2 (empty -> .)

    block                          shift and go to state 161
    empty                          shift and go to state 18
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 151

<<<<<<< HEAD
    (50) ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement . elseStatement ENDIF
    (51) elseStatement -> . ELSE statement
    (52) elseStatement -> . empty
    (2) empty -> .

    ELSE            shift and go to state 157
    ENDIF           reduce using rule 2 (empty -> .)

    elseStatement                  shift and go to state 156
    empty                          shift and go to state 158
=======
    (31) parameterExtra -> COMMA . variableType IDENTIFIER parameterExtra
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (27) variableType -> . FLAG

    NUMBER          shift and go to state 13
    WORDS           shift and go to state 11
    LETTER          shift and go to state 15
    FLAG            shift and go to state 14

    variableType                   shift and go to state 162
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 152

<<<<<<< HEAD
    (53) whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement . ENDWHILE

    ENDWHILE        shift and go to state 159
=======
    (32) parameterExtra -> empty .

    CPARENTHESIS    reduce using rule 32 (parameterExtra -> empty .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 153

<<<<<<< HEAD
    (20) block -> DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE . block
    (20) block -> . DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE block
    (21) block -> . empty
    (2) empty -> .

    DEFINE          shift and go to state 20
    ENDBLOCKS       reduce using rule 2 (empty -> .)
=======
    (29) parameter -> variableType IDENTIFIER parameterExtra .

    CPARENTHESIS    reduce using rule 29 (parameter -> variableType IDENTIFIER parameterExtra .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    block                          shift and go to state 160
    empty                          shift and go to state 21

state 154

<<<<<<< HEAD
    (28) parameter -> variableType IDENTIFIER parameterExtra .

    CPARENTHESIS    reduce using rule 28 (parameter -> variableType IDENTIFIER parameterExtra .)
=======
    (54) whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement . ENDWHILE

    ENDWHILE        shift and go to state 163
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 155

<<<<<<< HEAD
    (30) parameterExtra -> COMMA . variableType IDENTIFIER parameterExtra
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER

    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16
=======
    (45) commaExpressionList -> commaExpression commaExpressionList .

    CPARENTHESIS    reduce using rule 45 (commaExpressionList -> commaExpression commaExpressionList .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    variableType                   shift and go to state 161

state 156

<<<<<<< HEAD
    (31) parameterExtra -> empty .

    CPARENTHESIS    reduce using rule 31 (parameterExtra -> empty .)
=======
    (47) commaExpression -> COMMA expression .
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression

    COMMA           reduce using rule 47 (commaExpression -> COMMA expression .)
    CPARENTHESIS    reduce using rule 47 (commaExpression -> COMMA expression .)
    OR              shift and go to state 93
    AND             shift and go to state 90
    LESSER          shift and go to state 92
    GREATER         shift and go to state 91
    EQUALITY        shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 157

<<<<<<< HEAD
    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra . SEMICOLON declaration

    SEMICOLON       shift and go to state 162


state 154

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION . expression declarationExtra
    (55) expression -> . location
    (56) expression -> . binaryExpression
    (57) expression -> . FLAGVALUE
    (58) expression -> . NUMBERVALUE
    (59) expression -> . WORDSVALUE
    (60) expression -> . LETTERVALUE
    (61) expression -> . OPARENTHESIS expression CPARENTHESIS
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call
    (62) binaryExpression -> . expression OR expression
    (63) binaryExpression -> . expression AND expression
    (64) binaryExpression -> . expression LESSER expression
    (65) binaryExpression -> . expression GREATER expression
    (66) binaryExpression -> . expression EQUALITY expression
    (67) binaryExpression -> . expression PLUS expression
    (68) binaryExpression -> . expression MINUS expression
    (69) binaryExpression -> . expression MULTIPLICATION expression
    (70) binaryExpression -> . expression DIVISION expression
    (71) binaryExpression -> . expression MODULUS expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    FLAGVALUE       shift and go to state 51
    NUMBERVALUE     shift and go to state 52
    WORDSVALUE      shift and go to state 53
    LETTERVALUE     shift and go to state 54
    OPARENTHESIS    shift and go to state 55
    IDENTIFIER      shift and go to state 47

    expression                     shift and go to state 163
    location                       shift and go to state 49
    binaryExpression               shift and go to state 50
    call                           shift and go to state 56

state 155
=======
    (51) ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement . elseStatement ENDIF
    (52) elseStatement -> . ELSE statement
    (53) elseStatement -> . empty
    (2) empty -> .

    ELSE            shift and go to state 165
    ENDIF           reduce using rule 2 (empty -> .)

    elseStatement                  shift and go to state 164
    empty                          shift and go to state 166

state 158

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra . SEMICOLON declaration

    SEMICOLON       shift and go to state 167


state 159

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION . expression declarationExtra
    (56) expression -> . location
    (57) expression -> . unaryExpression
    (58) expression -> . binaryExpression
    (59) expression -> . NONZEROINT
    (60) expression -> . FLAGVALUE
    (61) expression -> . NUMBERVALUE
    (62) expression -> . WORDSVALUE
    (63) expression -> . LETTERVALUE
    (64) expression -> . OPARENTHESIS expression CPARENTHESIS
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call
    (75) unaryExpression -> . NOT expression
    (65) binaryExpression -> . expression OR expression
    (66) binaryExpression -> . expression AND expression
    (67) binaryExpression -> . expression LESSER expression
    (68) binaryExpression -> . expression GREATER expression
    (69) binaryExpression -> . expression EQUALITY expression
    (70) binaryExpression -> . expression PLUS expression
    (71) binaryExpression -> . expression MINUS expression
    (72) binaryExpression -> . expression MULTIPLICATION expression
    (73) binaryExpression -> . expression DIVISION expression
    (74) binaryExpression -> . expression MODULUS expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS

    NONZEROINT      shift and go to state 58
    FLAGVALUE       shift and go to state 49
    NUMBERVALUE     shift and go to state 48
    WORDSVALUE      shift and go to state 50
    LETTERVALUE     shift and go to state 52
    OPARENTHESIS    shift and go to state 51
    IDENTIFIER      shift and go to state 55
    NOT             shift and go to state 59

    unaryExpression                shift and go to state 57
    call                           shift and go to state 53
    location                       shift and go to state 56
    binaryExpression               shift and go to state 54
    expression                     shift and go to state 168

state 160
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (13) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra .

    SEMICOLON       reduce using rule 13 (declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra .)


<<<<<<< HEAD
state 156

    (50) ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement . ENDIF

    ENDIF           shift and go to state 164


state 157
=======
state 161
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (51) elseStatement -> ELSE . statement
    (32) statement -> . assign SEMICOLON statement
    (33) statement -> . call SEMICOLON statement
    (34) statement -> . return empty statement
    (35) statement -> . ifStatement empty statement
    (36) statement -> . whileStatement empty statement
    (37) statement -> . empty
    (38) assign -> . location ASSIGNATION expression
    (42) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (47) return -> . RETURN returnExpression SEMICOLON
    (50) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
    (53) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
    (2) empty -> .
    (39) location -> . IDENTIFIER
    (40) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (41) location -> . call

    IDENTIFIER      shift and go to state 42
    RETURN          shift and go to state 43
    IF              shift and go to state 44
    WHILE           shift and go to state 45
    ENDIF           reduce using rule 2 (empty -> .)

    statement                      shift and go to state 165
    assign                         shift and go to state 35
    call                           shift and go to state 36
    return                         shift and go to state 37
    empty                          shift and go to state 38
    ifStatement                    shift and go to state 39
    whileStatement                 shift and go to state 40
    location                       shift and go to state 41

state 162

<<<<<<< HEAD
    (52) elseStatement -> empty .

    ENDIF           reduce using rule 52 (elseStatement -> empty .)
=======
    (31) parameterExtra -> COMMA variableType . IDENTIFIER parameterExtra

    IDENTIFIER      shift and go to state 169
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 163

    (54) whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .

<<<<<<< HEAD
    IDENTIFIER      reduce using rule 53 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
    RETURN          reduce using rule 53 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
    IF              reduce using rule 53 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
    WHILE           reduce using rule 53 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
    FINISH          reduce using rule 53 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
    ENDDEFINE       reduce using rule 53 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
    ELSE            reduce using rule 53 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
    ENDIF           reduce using rule 53 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
    ENDWHILE        reduce using rule 53 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
=======
    IDENTIFIER      reduce using rule 54 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
    RETURN          reduce using rule 54 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
    IF              reduce using rule 54 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
    WHILE           reduce using rule 54 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
    FINISH          reduce using rule 54 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
    ENDDEFINE       reduce using rule 54 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
    ENDWHILE        reduce using rule 54 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
    ELSE            reduce using rule 54 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
    ENDIF           reduce using rule 54 (whileStatement -> WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE .)
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 164

<<<<<<< HEAD
    (20) block -> DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE block .

    ENDBLOCKS       reduce using rule 20 (block -> DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE block .)
=======
    (51) ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement . ENDIF

    ENDIF           shift and go to state 170
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294


state 165

<<<<<<< HEAD
    (30) parameterExtra -> COMMA variableType . IDENTIFIER parameterExtra

    IDENTIFIER      shift and go to state 166

=======
    (52) elseStatement -> ELSE . statement
    (33) statement -> . assign SEMICOLON statement
    (34) statement -> . call SEMICOLON statement
    (35) statement -> . return empty statement
    (36) statement -> . ifStatement empty statement
    (37) statement -> . whileStatement empty statement
    (38) statement -> . empty
    (39) assign -> . location ASSIGNATION expression
    (43) call -> . IDENTIFIER OPARENTHESIS actuals CPARENTHESIS
    (48) return -> . RETURN returnExpression SEMICOLON
    (51) ifStatement -> . IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF
    (54) whileStatement -> . WHILE OPARENTHESIS expression CPARENTHESIS statement ENDWHILE
    (2) empty -> .
    (40) location -> . IDENTIFIER
    (41) location -> . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS
    (42) location -> . call

    IDENTIFIER      shift and go to state 41
    RETURN          shift and go to state 36
    IF              shift and go to state 46
    WHILE           shift and go to state 37
    ENDIF           reduce using rule 2 (empty -> .)

    return                         shift and go to state 43
    whileStatement                 shift and go to state 45
    call                           shift and go to state 38
    location                       shift and go to state 39
    statement                      shift and go to state 171
    assign                         shift and go to state 47
    empty                          shift and go to state 42
    ifStatement                    shift and go to state 44
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

state 166

<<<<<<< HEAD
=======
    (53) elseStatement -> empty .

    ENDIF           reduce using rule 53 (elseStatement -> empty .)


state 167

>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON . declaration
    (6) declaration -> . variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> . variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> . variableType IDENTIFIER declarationExtra SEMICOLON declaration
    (9) declaration -> . empty
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (27) variableType -> . FLAG
    (2) empty -> .

<<<<<<< HEAD
    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16
    ENDVARIABLES    reduce using rule 2 (empty -> .)

    variableType                   shift and go to state 12
    declaration                    shift and go to state 167
    empty                          shift and go to state 13

state 163

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression . declarationExtra
    (62) binaryExpression -> expression . OR expression
    (63) binaryExpression -> expression . AND expression
    (64) binaryExpression -> expression . LESSER expression
    (65) binaryExpression -> expression . GREATER expression
    (66) binaryExpression -> expression . EQUALITY expression
    (67) binaryExpression -> expression . PLUS expression
    (68) binaryExpression -> expression . MINUS expression
    (69) binaryExpression -> expression . MULTIPLICATION expression
    (70) binaryExpression -> expression . DIVISION expression
    (71) binaryExpression -> expression . MODULUS expression
=======
    NUMBER          shift and go to state 13
    WORDS           shift and go to state 11
    LETTER          shift and go to state 15
    FLAG            shift and go to state 14
    ENDVARIABLES    reduce using rule 2 (empty -> .)

    variableType                   shift and go to state 12
    declaration                    shift and go to state 172
    empty                          shift and go to state 17

state 168

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression . declarationExtra
    (65) binaryExpression -> expression . OR expression
    (66) binaryExpression -> expression . AND expression
    (67) binaryExpression -> expression . LESSER expression
    (68) binaryExpression -> expression . GREATER expression
    (69) binaryExpression -> expression . EQUALITY expression
    (70) binaryExpression -> expression . PLUS expression
    (71) binaryExpression -> expression . MINUS expression
    (72) binaryExpression -> expression . MULTIPLICATION expression
    (73) binaryExpression -> expression . DIVISION expression
    (74) binaryExpression -> expression . MODULUS expression
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

<<<<<<< HEAD
    OR              shift and go to state 78
    AND             shift and go to state 79
    LESSER          shift and go to state 80
    GREATER         shift and go to state 81
    EQUALITY        shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 85
    DIVISION        shift and go to state 86
    MODULUS         shift and go to state 87
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 168
    empty                          shift and go to state 33

state 164
=======
    OR              shift and go to state 93
    AND             shift and go to state 90
    LESSER          shift and go to state 92
    GREATER         shift and go to state 91
    EQUALITY        shift and go to state 85
    PLUS            shift and go to state 86
    MINUS           shift and go to state 84
    MULTIPLICATION  shift and go to state 83
    DIVISION        shift and go to state 87
    MODULUS         shift and go to state 89
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    empty                          shift and go to state 34
    declarationExtra               shift and go to state 173

state 169

    (31) parameterExtra -> COMMA variableType IDENTIFIER . parameterExtra
    (31) parameterExtra -> . COMMA variableType IDENTIFIER parameterExtra
    (32) parameterExtra -> . empty
    (2) empty -> .

    COMMA           shift and go to state 151
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    empty                          shift and go to state 152
    parameterExtra                 shift and go to state 174

state 170
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (51) ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .

<<<<<<< HEAD
    IDENTIFIER      reduce using rule 50 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)
    RETURN          reduce using rule 50 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)
    IF              reduce using rule 50 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)
    WHILE           reduce using rule 50 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)
    FINISH          reduce using rule 50 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)
    ENDDEFINE       reduce using rule 50 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)
    ELSE            reduce using rule 50 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)
    ENDIF           reduce using rule 50 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)
    ENDWHILE        reduce using rule 50 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)


state 165
=======
    IDENTIFIER      reduce using rule 51 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)
    RETURN          reduce using rule 51 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)
    IF              reduce using rule 51 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)
    WHILE           reduce using rule 51 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)
    ENDDEFINE       reduce using rule 51 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)
    FINISH          reduce using rule 51 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)
    ENDWHILE        reduce using rule 51 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)
    ELSE            reduce using rule 51 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)
    ENDIF           reduce using rule 51 (ifStatement -> IF OPARENTHESIS expression CPARENTHESIS statement elseStatement ENDIF .)


state 171
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (52) elseStatement -> ELSE statement .

    ENDIF           reduce using rule 52 (elseStatement -> ELSE statement .)


<<<<<<< HEAD
state 166

    (30) parameterExtra -> COMMA variableType IDENTIFIER . parameterExtra
    (30) parameterExtra -> . COMMA variableType IDENTIFIER parameterExtra
    (31) parameterExtra -> . empty
    (2) empty -> .

    COMMA           shift and go to state 151
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    parameterExtra                 shift and go to state 169
    empty                          shift and go to state 152

state 167
=======
state 172
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration .

    ENDVARIABLES    reduce using rule 7 (declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration .)


<<<<<<< HEAD
state 168
=======
state 173
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra .

    SEMICOLON       reduce using rule 11 (declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra .)


<<<<<<< HEAD
state 169
=======
state 174
>>>>>>> ff3a7b985eadf757461353e587a2fca9a7168294

    (31) parameterExtra -> COMMA variableType IDENTIFIER parameterExtra .

    CPARENTHESIS    reduce using rule 31 (parameterExtra -> COMMA variableType IDENTIFIER parameterExtra .)

