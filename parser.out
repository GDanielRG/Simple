Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    NOT
    AND
    OR
    TOGGLE
    IF
    ENDIF
    WHILE
    ENDWHILE
    ELSE
    DISPLAY
    TRUE
    FALSE
    RETURN
    GREATER
    LESSER
    EQUALITY
    NEWLINE

Grammar

Rule 0     S' -> simple
Rule 1     simple -> PROGRAM program ENDPROGRAM
Rule 2     empty -> <empty>
Rule 3     program -> variables blocks main
Rule 4     variables -> VARIABLES declaration ENDVARIABLES
Rule 5     variables -> empty
Rule 6     declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
Rule 7     declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
Rule 8     declaration -> variableType IDENTIFIER declarationExtra SEMICOLON declaration
Rule 9     declaration -> empty
Rule 10    declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression declarationExtra
Rule 11    declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
Rule 12    declarationExtra -> COMMA IDENTIFIER declarationExtra
Rule 13    declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
Rule 14    declarationExtra -> empty
Rule 15    arrayIndexes -> NONZEROINT arrayIndexesExtra
Rule 16    arrayIndexesExtra -> COMMA NONZEROINT arrayIndexesExtra
Rule 17    arrayIndexesExtra -> empty
Rule 18    blocks -> BLOCKS block ENDBLOCKS
Rule 19    blocks -> empty
Rule 20    block -> DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE block
Rule 21    block -> empty
Rule 22    blockType -> PROCEDURE
Rule 23    blockType -> variableType
Rule 24    variableType -> NUMBER
Rule 25    variableType -> WORDS
Rule 26    variableType -> LETTER
Rule 27    parameters -> OPARENTHESIS parameter CPARENTHESIS
Rule 28    parameter -> variableType IDENTIFIER parameterExtra
Rule 29    parameter -> empty
Rule 30    parameterExtra -> COMMA variableType IDENTIFIER parameterExtra
Rule 31    parameterExtra -> empty
Rule 32    statement -> empty
Rule 33    main -> START variables statement FINISH
Rule 34    expression -> expression PLUS term
Rule 35    expression -> expression MINUS term
Rule 36    expression -> term
Rule 37    term -> term MULTIPLICATION factor
Rule 38    term -> term DIVISION factor
Rule 39    term -> factor
Rule 40    factor -> NUMBERVALUE
Rule 41    factor -> NONZEROINT
Rule 42    factor -> WORDSVALUE
Rule 43    factor -> LETTERVALUE
Rule 44    factor -> OPARENTHESIS expression CPARENTHESIS

Terminals, with rules where they appear

AND                  : 
ASSIGNATION          : 6 7 10 11
BLOCKS               : 18
CBRACKETS            : 7 11 13
COMMA                : 10 11 12 13 16 30
CPARENTHESIS         : 27 44
DEFINE               : 20
DISPLAY              : 
DIVISION             : 38
ELSE                 : 
ENDBLOCKS            : 18
ENDDEFINE            : 20
ENDIF                : 
ENDPROGRAM           : 1
ENDVARIABLES         : 4
ENDWHILE             : 
EQUALITY             : 
FALSE                : 
FINISH               : 33
GREATER              : 
IDENTIFIER           : 6 7 8 10 11 12 13 20 28 30
IF                   : 
LESSER               : 
LETTER               : 26
LETTERVALUE          : 43
MINUS                : 35
MULTIPLICATION       : 37
NEWLINE              : 
NONZEROINT           : 15 16 41
NOT                  : 
NUMBER               : 24
NUMBERVALUE          : 40
OBRACKETS            : 7 11 13
OPARENTHESIS         : 27 44
OR                   : 
PLUS                 : 34
PROCEDURE            : 22
PROGRAM              : 1
RETURN               : 
SEMICOLON            : 6 7 8
START                : 33
TOGGLE               : 
TRUE                 : 
VARIABLES            : 4
WHILE                : 
WORDS                : 25
WORDSVALUE           : 42
error                : 

Nonterminals, with rules where they appear

arrayIndexes         : 7 11 13
arrayIndexesExtra    : 15 16
block                : 18 20
blockType            : 20
blocks               : 3
declaration          : 4 6 7 8
declarationExtra     : 6 7 8 10 11 12 13
empty                : 5 9 14 17 19 21 29 31 32
expression           : 6 7 10 11 34 35 44
factor               : 37 38 39
main                 : 3
parameter            : 27
parameterExtra       : 28 30
parameters           : 20
program              : 1
simple               : 0
statement            : 20 33
term                 : 34 35 36 37 38
variableType         : 6 7 8 23 28 30
variables            : 3 20 33

Parsing method: LALR

state 0

    (0) S' -> . simple
    (1) simple -> . PROGRAM program ENDPROGRAM

    PROGRAM         shift and go to state 2

    simple                         shift and go to state 1

state 1

    (0) S' -> simple .



state 2

    (1) simple -> PROGRAM . program ENDPROGRAM
    (3) program -> . variables blocks main
    (4) variables -> . VARIABLES declaration ENDVARIABLES
    (5) variables -> . empty
    (2) empty -> .

    VARIABLES       shift and go to state 5
    BLOCKS          reduce using rule 2 (empty -> .)
    START           reduce using rule 2 (empty -> .)

    program                        shift and go to state 3
    variables                      shift and go to state 4
    empty                          shift and go to state 6

state 3

    (1) simple -> PROGRAM program . ENDPROGRAM

    ENDPROGRAM      shift and go to state 7


state 4

    (3) program -> variables . blocks main
    (18) blocks -> . BLOCKS block ENDBLOCKS
    (19) blocks -> . empty
    (2) empty -> .

    BLOCKS          shift and go to state 9
    START           reduce using rule 2 (empty -> .)

    blocks                         shift and go to state 8
    empty                          shift and go to state 10

state 5

    (4) variables -> VARIABLES . declaration ENDVARIABLES
    (6) declaration -> . variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> . variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> . variableType IDENTIFIER declarationExtra SEMICOLON declaration
    (9) declaration -> . empty
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (2) empty -> .

    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16
    ENDVARIABLES    reduce using rule 2 (empty -> .)

    declaration                    shift and go to state 11
    variableType                   shift and go to state 12
    empty                          shift and go to state 13

state 6

    (5) variables -> empty .

    BLOCKS          reduce using rule 5 (variables -> empty .)
    START           reduce using rule 5 (variables -> empty .)
    FINISH          reduce using rule 5 (variables -> empty .)
    ENDDEFINE       reduce using rule 5 (variables -> empty .)


state 7

    (1) simple -> PROGRAM program ENDPROGRAM .

    $end            reduce using rule 1 (simple -> PROGRAM program ENDPROGRAM .)


state 8

    (3) program -> variables blocks . main
    (33) main -> . START variables statement FINISH

    START           shift and go to state 18

    main                           shift and go to state 17

state 9

    (18) blocks -> BLOCKS . block ENDBLOCKS
    (20) block -> . DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE block
    (21) block -> . empty
    (2) empty -> .

    DEFINE          shift and go to state 20
    ENDBLOCKS       reduce using rule 2 (empty -> .)

    block                          shift and go to state 19
    empty                          shift and go to state 21

state 10

    (19) blocks -> empty .

    START           reduce using rule 19 (blocks -> empty .)


state 11

    (4) variables -> VARIABLES declaration . ENDVARIABLES

    ENDVARIABLES    shift and go to state 22


state 12

    (6) declaration -> variableType . IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> variableType . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> variableType . IDENTIFIER declarationExtra SEMICOLON declaration

    IDENTIFIER      shift and go to state 23


state 13

    (9) declaration -> empty .

    ENDVARIABLES    reduce using rule 9 (declaration -> empty .)


state 14

    (24) variableType -> NUMBER .

    IDENTIFIER      reduce using rule 24 (variableType -> NUMBER .)


state 15

    (25) variableType -> WORDS .

    IDENTIFIER      reduce using rule 25 (variableType -> WORDS .)


state 16

    (26) variableType -> LETTER .

    IDENTIFIER      reduce using rule 26 (variableType -> LETTER .)


state 17

    (3) program -> variables blocks main .

    ENDPROGRAM      reduce using rule 3 (program -> variables blocks main .)


state 18

    (33) main -> START . variables statement FINISH
    (4) variables -> . VARIABLES declaration ENDVARIABLES
    (5) variables -> . empty
    (2) empty -> .

    VARIABLES       shift and go to state 5
    FINISH          reduce using rule 2 (empty -> .)

    variables                      shift and go to state 24
    empty                          shift and go to state 6

state 19

    (18) blocks -> BLOCKS block . ENDBLOCKS

    ENDBLOCKS       shift and go to state 25


state 20

    (20) block -> DEFINE . blockType IDENTIFIER parameters variables statement ENDDEFINE block
    (22) blockType -> . PROCEDURE
    (23) blockType -> . variableType
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER

    PROCEDURE       shift and go to state 27
    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16

    blockType                      shift and go to state 26
    variableType                   shift and go to state 28

state 21

    (21) block -> empty .

    ENDBLOCKS       reduce using rule 21 (block -> empty .)


state 22

    (4) variables -> VARIABLES declaration ENDVARIABLES .

    BLOCKS          reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    START           reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    FINISH          reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)
    ENDDEFINE       reduce using rule 4 (variables -> VARIABLES declaration ENDVARIABLES .)


state 23

    (6) declaration -> variableType IDENTIFIER . ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> variableType IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> variableType IDENTIFIER . declarationExtra SEMICOLON declaration
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

    ASSIGNATION     shift and go to state 29
    OBRACKETS       shift and go to state 31
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 30
    empty                          shift and go to state 33

state 24

    (33) main -> START variables . statement FINISH
    (32) statement -> . empty
    (2) empty -> .

    FINISH          reduce using rule 2 (empty -> .)

    statement                      shift and go to state 34
    empty                          shift and go to state 35

state 25

    (18) blocks -> BLOCKS block ENDBLOCKS .

    START           reduce using rule 18 (blocks -> BLOCKS block ENDBLOCKS .)


state 26

    (20) block -> DEFINE blockType . IDENTIFIER parameters variables statement ENDDEFINE block

    IDENTIFIER      shift and go to state 36


state 27

    (22) blockType -> PROCEDURE .

    IDENTIFIER      reduce using rule 22 (blockType -> PROCEDURE .)


state 28

    (23) blockType -> variableType .

    IDENTIFIER      reduce using rule 23 (blockType -> variableType .)


state 29

    (6) declaration -> variableType IDENTIFIER ASSIGNATION . expression declarationExtra SEMICOLON declaration
    (34) expression -> . expression PLUS term
    (35) expression -> . expression MINUS term
    (36) expression -> . term
    (37) term -> . term MULTIPLICATION factor
    (38) term -> . term DIVISION factor
    (39) term -> . factor
    (40) factor -> . NUMBERVALUE
    (41) factor -> . NONZEROINT
    (42) factor -> . WORDSVALUE
    (43) factor -> . LETTERVALUE
    (44) factor -> . OPARENTHESIS expression CPARENTHESIS

    NUMBERVALUE     shift and go to state 40
    NONZEROINT      shift and go to state 41
    WORDSVALUE      shift and go to state 42
    LETTERVALUE     shift and go to state 43
    OPARENTHESIS    shift and go to state 44

    expression                     shift and go to state 37
    term                           shift and go to state 38
    factor                         shift and go to state 39

state 30

    (8) declaration -> variableType IDENTIFIER declarationExtra . SEMICOLON declaration

    SEMICOLON       shift and go to state 45


state 31

    (7) declaration -> variableType IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (15) arrayIndexes -> . NONZEROINT arrayIndexesExtra

    NONZEROINT      shift and go to state 47

    arrayIndexes                   shift and go to state 46

state 32

    (10) declarationExtra -> COMMA . IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> COMMA . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> COMMA . IDENTIFIER declarationExtra
    (13) declarationExtra -> COMMA . IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra

    IDENTIFIER      shift and go to state 48


state 33

    (14) declarationExtra -> empty .

    SEMICOLON       reduce using rule 14 (declarationExtra -> empty .)


state 34

    (33) main -> START variables statement . FINISH

    FINISH          shift and go to state 49


state 35

    (32) statement -> empty .

    FINISH          reduce using rule 32 (statement -> empty .)
    ENDDEFINE       reduce using rule 32 (statement -> empty .)


state 36

    (20) block -> DEFINE blockType IDENTIFIER . parameters variables statement ENDDEFINE block
    (27) parameters -> . OPARENTHESIS parameter CPARENTHESIS

    OPARENTHESIS    shift and go to state 51

    parameters                     shift and go to state 50

state 37

    (6) declaration -> variableType IDENTIFIER ASSIGNATION expression . declarationExtra SEMICOLON declaration
    (34) expression -> expression . PLUS term
    (35) expression -> expression . MINUS term
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 52
    empty                          shift and go to state 33

state 38

    (36) expression -> term .
    (37) term -> term . MULTIPLICATION factor
    (38) term -> term . DIVISION factor

    PLUS            reduce using rule 36 (expression -> term .)
    MINUS           reduce using rule 36 (expression -> term .)
    COMMA           reduce using rule 36 (expression -> term .)
    SEMICOLON       reduce using rule 36 (expression -> term .)
    CPARENTHESIS    reduce using rule 36 (expression -> term .)
    MULTIPLICATION  shift and go to state 55
    DIVISION        shift and go to state 56


state 39

    (39) term -> factor .

    MULTIPLICATION  reduce using rule 39 (term -> factor .)
    DIVISION        reduce using rule 39 (term -> factor .)
    PLUS            reduce using rule 39 (term -> factor .)
    MINUS           reduce using rule 39 (term -> factor .)
    COMMA           reduce using rule 39 (term -> factor .)
    SEMICOLON       reduce using rule 39 (term -> factor .)
    CPARENTHESIS    reduce using rule 39 (term -> factor .)


state 40

    (40) factor -> NUMBERVALUE .

    MULTIPLICATION  reduce using rule 40 (factor -> NUMBERVALUE .)
    DIVISION        reduce using rule 40 (factor -> NUMBERVALUE .)
    PLUS            reduce using rule 40 (factor -> NUMBERVALUE .)
    MINUS           reduce using rule 40 (factor -> NUMBERVALUE .)
    COMMA           reduce using rule 40 (factor -> NUMBERVALUE .)
    SEMICOLON       reduce using rule 40 (factor -> NUMBERVALUE .)
    CPARENTHESIS    reduce using rule 40 (factor -> NUMBERVALUE .)


state 41

    (41) factor -> NONZEROINT .

    MULTIPLICATION  reduce using rule 41 (factor -> NONZEROINT .)
    DIVISION        reduce using rule 41 (factor -> NONZEROINT .)
    PLUS            reduce using rule 41 (factor -> NONZEROINT .)
    MINUS           reduce using rule 41 (factor -> NONZEROINT .)
    COMMA           reduce using rule 41 (factor -> NONZEROINT .)
    SEMICOLON       reduce using rule 41 (factor -> NONZEROINT .)
    CPARENTHESIS    reduce using rule 41 (factor -> NONZEROINT .)


state 42

    (42) factor -> WORDSVALUE .

    MULTIPLICATION  reduce using rule 42 (factor -> WORDSVALUE .)
    DIVISION        reduce using rule 42 (factor -> WORDSVALUE .)
    PLUS            reduce using rule 42 (factor -> WORDSVALUE .)
    MINUS           reduce using rule 42 (factor -> WORDSVALUE .)
    COMMA           reduce using rule 42 (factor -> WORDSVALUE .)
    SEMICOLON       reduce using rule 42 (factor -> WORDSVALUE .)
    CPARENTHESIS    reduce using rule 42 (factor -> WORDSVALUE .)


state 43

    (43) factor -> LETTERVALUE .

    MULTIPLICATION  reduce using rule 43 (factor -> LETTERVALUE .)
    DIVISION        reduce using rule 43 (factor -> LETTERVALUE .)
    PLUS            reduce using rule 43 (factor -> LETTERVALUE .)
    MINUS           reduce using rule 43 (factor -> LETTERVALUE .)
    COMMA           reduce using rule 43 (factor -> LETTERVALUE .)
    SEMICOLON       reduce using rule 43 (factor -> LETTERVALUE .)
    CPARENTHESIS    reduce using rule 43 (factor -> LETTERVALUE .)


state 44

    (44) factor -> OPARENTHESIS . expression CPARENTHESIS
    (34) expression -> . expression PLUS term
    (35) expression -> . expression MINUS term
    (36) expression -> . term
    (37) term -> . term MULTIPLICATION factor
    (38) term -> . term DIVISION factor
    (39) term -> . factor
    (40) factor -> . NUMBERVALUE
    (41) factor -> . NONZEROINT
    (42) factor -> . WORDSVALUE
    (43) factor -> . LETTERVALUE
    (44) factor -> . OPARENTHESIS expression CPARENTHESIS

    NUMBERVALUE     shift and go to state 40
    NONZEROINT      shift and go to state 41
    WORDSVALUE      shift and go to state 42
    LETTERVALUE     shift and go to state 43
    OPARENTHESIS    shift and go to state 44

    expression                     shift and go to state 57
    term                           shift and go to state 38
    factor                         shift and go to state 39

state 45

    (8) declaration -> variableType IDENTIFIER declarationExtra SEMICOLON . declaration
    (6) declaration -> . variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> . variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> . variableType IDENTIFIER declarationExtra SEMICOLON declaration
    (9) declaration -> . empty
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (2) empty -> .

    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16
    ENDVARIABLES    reduce using rule 2 (empty -> .)

    variableType                   shift and go to state 12
    declaration                    shift and go to state 58
    empty                          shift and go to state 13

state 46

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration

    CBRACKETS       shift and go to state 59


state 47

    (15) arrayIndexes -> NONZEROINT . arrayIndexesExtra
    (16) arrayIndexesExtra -> . COMMA NONZEROINT arrayIndexesExtra
    (17) arrayIndexesExtra -> . empty
    (2) empty -> .

    COMMA           shift and go to state 61
    CBRACKETS       reduce using rule 2 (empty -> .)

    arrayIndexesExtra              shift and go to state 60
    empty                          shift and go to state 62

state 48

    (10) declarationExtra -> COMMA IDENTIFIER . ASSIGNATION expression declarationExtra
    (11) declarationExtra -> COMMA IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> COMMA IDENTIFIER . declarationExtra
    (13) declarationExtra -> COMMA IDENTIFIER . OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

    ASSIGNATION     shift and go to state 63
    OBRACKETS       shift and go to state 65
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 64
    empty                          shift and go to state 33

state 49

    (33) main -> START variables statement FINISH .

    ENDPROGRAM      reduce using rule 33 (main -> START variables statement FINISH .)


state 50

    (20) block -> DEFINE blockType IDENTIFIER parameters . variables statement ENDDEFINE block
    (4) variables -> . VARIABLES declaration ENDVARIABLES
    (5) variables -> . empty
    (2) empty -> .

    VARIABLES       shift and go to state 5
    ENDDEFINE       reduce using rule 2 (empty -> .)

    variables                      shift and go to state 66
    empty                          shift and go to state 6

state 51

    (27) parameters -> OPARENTHESIS . parameter CPARENTHESIS
    (28) parameter -> . variableType IDENTIFIER parameterExtra
    (29) parameter -> . empty
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (2) empty -> .

    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    parameter                      shift and go to state 67
    variableType                   shift and go to state 68
    empty                          shift and go to state 69

state 52

    (6) declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra . SEMICOLON declaration

    SEMICOLON       shift and go to state 70


state 53

    (34) expression -> expression PLUS . term
    (37) term -> . term MULTIPLICATION factor
    (38) term -> . term DIVISION factor
    (39) term -> . factor
    (40) factor -> . NUMBERVALUE
    (41) factor -> . NONZEROINT
    (42) factor -> . WORDSVALUE
    (43) factor -> . LETTERVALUE
    (44) factor -> . OPARENTHESIS expression CPARENTHESIS

    NUMBERVALUE     shift and go to state 40
    NONZEROINT      shift and go to state 41
    WORDSVALUE      shift and go to state 42
    LETTERVALUE     shift and go to state 43
    OPARENTHESIS    shift and go to state 44

    term                           shift and go to state 71
    factor                         shift and go to state 39

state 54

    (35) expression -> expression MINUS . term
    (37) term -> . term MULTIPLICATION factor
    (38) term -> . term DIVISION factor
    (39) term -> . factor
    (40) factor -> . NUMBERVALUE
    (41) factor -> . NONZEROINT
    (42) factor -> . WORDSVALUE
    (43) factor -> . LETTERVALUE
    (44) factor -> . OPARENTHESIS expression CPARENTHESIS

    NUMBERVALUE     shift and go to state 40
    NONZEROINT      shift and go to state 41
    WORDSVALUE      shift and go to state 42
    LETTERVALUE     shift and go to state 43
    OPARENTHESIS    shift and go to state 44

    term                           shift and go to state 72
    factor                         shift and go to state 39

state 55

    (37) term -> term MULTIPLICATION . factor
    (40) factor -> . NUMBERVALUE
    (41) factor -> . NONZEROINT
    (42) factor -> . WORDSVALUE
    (43) factor -> . LETTERVALUE
    (44) factor -> . OPARENTHESIS expression CPARENTHESIS

    NUMBERVALUE     shift and go to state 40
    NONZEROINT      shift and go to state 41
    WORDSVALUE      shift and go to state 42
    LETTERVALUE     shift and go to state 43
    OPARENTHESIS    shift and go to state 44

    factor                         shift and go to state 73

state 56

    (38) term -> term DIVISION . factor
    (40) factor -> . NUMBERVALUE
    (41) factor -> . NONZEROINT
    (42) factor -> . WORDSVALUE
    (43) factor -> . LETTERVALUE
    (44) factor -> . OPARENTHESIS expression CPARENTHESIS

    NUMBERVALUE     shift and go to state 40
    NONZEROINT      shift and go to state 41
    WORDSVALUE      shift and go to state 42
    LETTERVALUE     shift and go to state 43
    OPARENTHESIS    shift and go to state 44

    factor                         shift and go to state 74

state 57

    (44) factor -> OPARENTHESIS expression . CPARENTHESIS
    (34) expression -> expression . PLUS term
    (35) expression -> expression . MINUS term

    CPARENTHESIS    shift and go to state 75
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54


state 58

    (8) declaration -> variableType IDENTIFIER declarationExtra SEMICOLON declaration .

    ENDVARIABLES    reduce using rule 8 (declaration -> variableType IDENTIFIER declarationExtra SEMICOLON declaration .)


state 59

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS . ASSIGNATION expression declarationExtra SEMICOLON declaration

    ASSIGNATION     shift and go to state 76


state 60

    (15) arrayIndexes -> NONZEROINT arrayIndexesExtra .

    CBRACKETS       reduce using rule 15 (arrayIndexes -> NONZEROINT arrayIndexesExtra .)


state 61

    (16) arrayIndexesExtra -> COMMA . NONZEROINT arrayIndexesExtra

    NONZEROINT      shift and go to state 77


state 62

    (17) arrayIndexesExtra -> empty .

    CBRACKETS       reduce using rule 17 (arrayIndexesExtra -> empty .)


state 63

    (10) declarationExtra -> COMMA IDENTIFIER ASSIGNATION . expression declarationExtra
    (34) expression -> . expression PLUS term
    (35) expression -> . expression MINUS term
    (36) expression -> . term
    (37) term -> . term MULTIPLICATION factor
    (38) term -> . term DIVISION factor
    (39) term -> . factor
    (40) factor -> . NUMBERVALUE
    (41) factor -> . NONZEROINT
    (42) factor -> . WORDSVALUE
    (43) factor -> . LETTERVALUE
    (44) factor -> . OPARENTHESIS expression CPARENTHESIS

    NUMBERVALUE     shift and go to state 40
    NONZEROINT      shift and go to state 41
    WORDSVALUE      shift and go to state 42
    LETTERVALUE     shift and go to state 43
    OPARENTHESIS    shift and go to state 44

    expression                     shift and go to state 78
    term                           shift and go to state 38
    factor                         shift and go to state 39

state 64

    (12) declarationExtra -> COMMA IDENTIFIER declarationExtra .

    SEMICOLON       reduce using rule 12 (declarationExtra -> COMMA IDENTIFIER declarationExtra .)


state 65

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (13) declarationExtra -> COMMA IDENTIFIER OBRACKETS . arrayIndexes CBRACKETS declarationExtra
    (15) arrayIndexes -> . NONZEROINT arrayIndexesExtra

    NONZEROINT      shift and go to state 47

    arrayIndexes                   shift and go to state 79

state 66

    (20) block -> DEFINE blockType IDENTIFIER parameters variables . statement ENDDEFINE block
    (32) statement -> . empty
    (2) empty -> .

    ENDDEFINE       reduce using rule 2 (empty -> .)

    statement                      shift and go to state 80
    empty                          shift and go to state 35

state 67

    (27) parameters -> OPARENTHESIS parameter . CPARENTHESIS

    CPARENTHESIS    shift and go to state 81


state 68

    (28) parameter -> variableType . IDENTIFIER parameterExtra

    IDENTIFIER      shift and go to state 82


state 69

    (29) parameter -> empty .

    CPARENTHESIS    reduce using rule 29 (parameter -> empty .)


state 70

    (6) declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON . declaration
    (6) declaration -> . variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> . variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> . variableType IDENTIFIER declarationExtra SEMICOLON declaration
    (9) declaration -> . empty
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (2) empty -> .

    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16
    ENDVARIABLES    reduce using rule 2 (empty -> .)

    variableType                   shift and go to state 12
    declaration                    shift and go to state 83
    empty                          shift and go to state 13

state 71

    (34) expression -> expression PLUS term .
    (37) term -> term . MULTIPLICATION factor
    (38) term -> term . DIVISION factor

    PLUS            reduce using rule 34 (expression -> expression PLUS term .)
    MINUS           reduce using rule 34 (expression -> expression PLUS term .)
    COMMA           reduce using rule 34 (expression -> expression PLUS term .)
    SEMICOLON       reduce using rule 34 (expression -> expression PLUS term .)
    CPARENTHESIS    reduce using rule 34 (expression -> expression PLUS term .)
    MULTIPLICATION  shift and go to state 55
    DIVISION        shift and go to state 56


state 72

    (35) expression -> expression MINUS term .
    (37) term -> term . MULTIPLICATION factor
    (38) term -> term . DIVISION factor

    PLUS            reduce using rule 35 (expression -> expression MINUS term .)
    MINUS           reduce using rule 35 (expression -> expression MINUS term .)
    COMMA           reduce using rule 35 (expression -> expression MINUS term .)
    SEMICOLON       reduce using rule 35 (expression -> expression MINUS term .)
    CPARENTHESIS    reduce using rule 35 (expression -> expression MINUS term .)
    MULTIPLICATION  shift and go to state 55
    DIVISION        shift and go to state 56


state 73

    (37) term -> term MULTIPLICATION factor .

    MULTIPLICATION  reduce using rule 37 (term -> term MULTIPLICATION factor .)
    DIVISION        reduce using rule 37 (term -> term MULTIPLICATION factor .)
    PLUS            reduce using rule 37 (term -> term MULTIPLICATION factor .)
    MINUS           reduce using rule 37 (term -> term MULTIPLICATION factor .)
    COMMA           reduce using rule 37 (term -> term MULTIPLICATION factor .)
    SEMICOLON       reduce using rule 37 (term -> term MULTIPLICATION factor .)
    CPARENTHESIS    reduce using rule 37 (term -> term MULTIPLICATION factor .)


state 74

    (38) term -> term DIVISION factor .

    MULTIPLICATION  reduce using rule 38 (term -> term DIVISION factor .)
    DIVISION        reduce using rule 38 (term -> term DIVISION factor .)
    PLUS            reduce using rule 38 (term -> term DIVISION factor .)
    MINUS           reduce using rule 38 (term -> term DIVISION factor .)
    COMMA           reduce using rule 38 (term -> term DIVISION factor .)
    SEMICOLON       reduce using rule 38 (term -> term DIVISION factor .)
    CPARENTHESIS    reduce using rule 38 (term -> term DIVISION factor .)


state 75

    (44) factor -> OPARENTHESIS expression CPARENTHESIS .

    MULTIPLICATION  reduce using rule 44 (factor -> OPARENTHESIS expression CPARENTHESIS .)
    DIVISION        reduce using rule 44 (factor -> OPARENTHESIS expression CPARENTHESIS .)
    PLUS            reduce using rule 44 (factor -> OPARENTHESIS expression CPARENTHESIS .)
    MINUS           reduce using rule 44 (factor -> OPARENTHESIS expression CPARENTHESIS .)
    COMMA           reduce using rule 44 (factor -> OPARENTHESIS expression CPARENTHESIS .)
    SEMICOLON       reduce using rule 44 (factor -> OPARENTHESIS expression CPARENTHESIS .)
    CPARENTHESIS    reduce using rule 44 (factor -> OPARENTHESIS expression CPARENTHESIS .)


state 76

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION . expression declarationExtra SEMICOLON declaration
    (34) expression -> . expression PLUS term
    (35) expression -> . expression MINUS term
    (36) expression -> . term
    (37) term -> . term MULTIPLICATION factor
    (38) term -> . term DIVISION factor
    (39) term -> . factor
    (40) factor -> . NUMBERVALUE
    (41) factor -> . NONZEROINT
    (42) factor -> . WORDSVALUE
    (43) factor -> . LETTERVALUE
    (44) factor -> . OPARENTHESIS expression CPARENTHESIS

    NUMBERVALUE     shift and go to state 40
    NONZEROINT      shift and go to state 41
    WORDSVALUE      shift and go to state 42
    LETTERVALUE     shift and go to state 43
    OPARENTHESIS    shift and go to state 44

    expression                     shift and go to state 84
    term                           shift and go to state 38
    factor                         shift and go to state 39

state 77

    (16) arrayIndexesExtra -> COMMA NONZEROINT . arrayIndexesExtra
    (16) arrayIndexesExtra -> . COMMA NONZEROINT arrayIndexesExtra
    (17) arrayIndexesExtra -> . empty
    (2) empty -> .

    COMMA           shift and go to state 61
    CBRACKETS       reduce using rule 2 (empty -> .)

    arrayIndexesExtra              shift and go to state 85
    empty                          shift and go to state 62

state 78

    (10) declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression . declarationExtra
    (34) expression -> expression . PLUS term
    (35) expression -> expression . MINUS term
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 86
    empty                          shift and go to state 33

state 79

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS ASSIGNATION expression declarationExtra
    (13) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes . CBRACKETS declarationExtra

    CBRACKETS       shift and go to state 87


state 80

    (20) block -> DEFINE blockType IDENTIFIER parameters variables statement . ENDDEFINE block

    ENDDEFINE       shift and go to state 88


state 81

    (27) parameters -> OPARENTHESIS parameter CPARENTHESIS .

    VARIABLES       reduce using rule 27 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)
    ENDDEFINE       reduce using rule 27 (parameters -> OPARENTHESIS parameter CPARENTHESIS .)


state 82

    (28) parameter -> variableType IDENTIFIER . parameterExtra
    (30) parameterExtra -> . COMMA variableType IDENTIFIER parameterExtra
    (31) parameterExtra -> . empty
    (2) empty -> .

    COMMA           shift and go to state 90
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    parameterExtra                 shift and go to state 89
    empty                          shift and go to state 91

state 83

    (6) declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration .

    ENDVARIABLES    reduce using rule 6 (declaration -> variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration .)


state 84

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression . declarationExtra SEMICOLON declaration
    (34) expression -> expression . PLUS term
    (35) expression -> expression . MINUS term
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 92
    empty                          shift and go to state 33

state 85

    (16) arrayIndexesExtra -> COMMA NONZEROINT arrayIndexesExtra .

    CBRACKETS       reduce using rule 16 (arrayIndexesExtra -> COMMA NONZEROINT arrayIndexesExtra .)


state 86

    (10) declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression declarationExtra .

    SEMICOLON       reduce using rule 10 (declarationExtra -> COMMA IDENTIFIER ASSIGNATION expression declarationExtra .)


state 87

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS . ASSIGNATION expression declarationExtra
    (13) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS . declarationExtra
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

    ASSIGNATION     shift and go to state 93
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 94
    empty                          shift and go to state 33

state 88

    (20) block -> DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE . block
    (20) block -> . DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE block
    (21) block -> . empty
    (2) empty -> .

    DEFINE          shift and go to state 20
    ENDBLOCKS       reduce using rule 2 (empty -> .)

    block                          shift and go to state 95
    empty                          shift and go to state 21

state 89

    (28) parameter -> variableType IDENTIFIER parameterExtra .

    CPARENTHESIS    reduce using rule 28 (parameter -> variableType IDENTIFIER parameterExtra .)


state 90

    (30) parameterExtra -> COMMA . variableType IDENTIFIER parameterExtra
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER

    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16

    variableType                   shift and go to state 96

state 91

    (31) parameterExtra -> empty .

    CPARENTHESIS    reduce using rule 31 (parameterExtra -> empty .)


state 92

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra . SEMICOLON declaration

    SEMICOLON       shift and go to state 97


state 93

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION . expression declarationExtra
    (34) expression -> . expression PLUS term
    (35) expression -> . expression MINUS term
    (36) expression -> . term
    (37) term -> . term MULTIPLICATION factor
    (38) term -> . term DIVISION factor
    (39) term -> . factor
    (40) factor -> . NUMBERVALUE
    (41) factor -> . NONZEROINT
    (42) factor -> . WORDSVALUE
    (43) factor -> . LETTERVALUE
    (44) factor -> . OPARENTHESIS expression CPARENTHESIS

    NUMBERVALUE     shift and go to state 40
    NONZEROINT      shift and go to state 41
    WORDSVALUE      shift and go to state 42
    LETTERVALUE     shift and go to state 43
    OPARENTHESIS    shift and go to state 44

    expression                     shift and go to state 98
    term                           shift and go to state 38
    factor                         shift and go to state 39

state 94

    (13) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra .

    SEMICOLON       reduce using rule 13 (declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra .)


state 95

    (20) block -> DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE block .

    ENDBLOCKS       reduce using rule 20 (block -> DEFINE blockType IDENTIFIER parameters variables statement ENDDEFINE block .)


state 96

    (30) parameterExtra -> COMMA variableType . IDENTIFIER parameterExtra

    IDENTIFIER      shift and go to state 99


state 97

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON . declaration
    (6) declaration -> . variableType IDENTIFIER ASSIGNATION expression declarationExtra SEMICOLON declaration
    (7) declaration -> . variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration
    (8) declaration -> . variableType IDENTIFIER declarationExtra SEMICOLON declaration
    (9) declaration -> . empty
    (24) variableType -> . NUMBER
    (25) variableType -> . WORDS
    (26) variableType -> . LETTER
    (2) empty -> .

    NUMBER          shift and go to state 14
    WORDS           shift and go to state 15
    LETTER          shift and go to state 16
    ENDVARIABLES    reduce using rule 2 (empty -> .)

    variableType                   shift and go to state 12
    declaration                    shift and go to state 100
    empty                          shift and go to state 13

state 98

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression . declarationExtra
    (34) expression -> expression . PLUS term
    (35) expression -> expression . MINUS term
    (10) declarationExtra -> . COMMA IDENTIFIER ASSIGNATION expression declarationExtra
    (11) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra
    (12) declarationExtra -> . COMMA IDENTIFIER declarationExtra
    (13) declarationExtra -> . COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS declarationExtra
    (14) declarationExtra -> . empty
    (2) empty -> .

    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    COMMA           shift and go to state 32
    SEMICOLON       reduce using rule 2 (empty -> .)

    declarationExtra               shift and go to state 101
    empty                          shift and go to state 33

state 99

    (30) parameterExtra -> COMMA variableType IDENTIFIER . parameterExtra
    (30) parameterExtra -> . COMMA variableType IDENTIFIER parameterExtra
    (31) parameterExtra -> . empty
    (2) empty -> .

    COMMA           shift and go to state 90
    CPARENTHESIS    reduce using rule 2 (empty -> .)

    parameterExtra                 shift and go to state 102
    empty                          shift and go to state 91

state 100

    (7) declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration .

    ENDVARIABLES    reduce using rule 7 (declaration -> variableType IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra SEMICOLON declaration .)


state 101

    (11) declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra .

    SEMICOLON       reduce using rule 11 (declarationExtra -> COMMA IDENTIFIER OBRACKETS arrayIndexes CBRACKETS ASSIGNATION expression declarationExtra .)


state 102

    (30) parameterExtra -> COMMA variableType IDENTIFIER parameterExtra .

    CPARENTHESIS    reduce using rule 30 (parameterExtra -> COMMA variableType IDENTIFIER parameterExtra .)

